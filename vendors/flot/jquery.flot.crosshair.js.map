{"version":3,"sources":["build/node_modules/browser-pack/_prelude.js","build/vendors/flot/build/vendors/flot/jquery.flot.crosshair.js"],"names":[],"mappings":"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","file":"jquery.flot.crosshair.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* Flot plugin for showing crosshairs when the mouse hovers over the plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\n\tcrosshair: {\n\t\tmode: null or \"x\" or \"y\" or \"xy\"\n\t\tcolor: color\n\t\tlineWidth: number\n\t}\n\nSet the mode to one of \"x\", \"y\" or \"xy\". The \"x\" mode enables a vertical\ncrosshair that lets you trace the values on the x axis, \"y\" enables a\nhorizontal crosshair and \"xy\" enables them both. \"color\" is the color of the\ncrosshair (default is \"rgba(170, 0, 0, 0.80)\"), \"lineWidth\" is the width of\nthe drawn lines (default is 1).\n\nThe plugin also adds four public methods:\n\n  - setCrosshair( pos )\n\n    Set the position of the crosshair. Note that this is cleared if the user\n    moves the mouse. \"pos\" is in coordinates of the plot and should be on the\n    form { x: xpos, y: ypos } (you can use x2/x3/... if you're using multiple\n    axes), which is coincidentally the same format as what you get from a\n    \"plothover\" event. If \"pos\" is null, the crosshair is cleared.\n\n  - clearCrosshair()\n\n    Clear the crosshair.\n\n  - lockCrosshair(pos)\n\n    Cause the crosshair to lock to the current location, no longer updating if\n    the user moves the mouse. Optionally supply a position (passed on to\n    setCrosshair()) to move it to.\n\n    Example usage:\n\n\tvar myFlot = $.plot( $(\"#graph\"), ..., { crosshair: { mode: \"x\" } } };\n\t$(\"#graph\").bind( \"plothover\", function ( evt, position, item ) {\n\t\tif ( item ) {\n\t\t\t// Lock the crosshair to the data point being hovered\n\t\t\tmyFlot.lockCrosshair({\n\t\t\t\tx: item.datapoint[ 0 ],\n\t\t\t\ty: item.datapoint[ 1 ]\n\t\t\t});\n\t\t} else {\n\t\t\t// Return normal crosshair operation\n\t\t\tmyFlot.unlockCrosshair();\n\t\t}\n\t});\n\n  - unlockCrosshair()\n\n    Free the crosshair to move again after locking it.\n*/\n\n(function ($) {\n    var options = {\n        crosshair: {\n            mode: null, // one of null, \"x\", \"y\" or \"xy\",\n            color: \"rgba(170, 0, 0, 0.80)\",\n            lineWidth: 1\n        }\n    };\n    \n    function init(plot) {\n        // position of crosshair in pixels\n        var crosshair = { x: -1, y: -1, locked: false };\n\n        plot.setCrosshair = function setCrosshair(pos) {\n            if (!pos)\n                crosshair.x = -1;\n            else {\n                var o = plot.p2c(pos);\n                crosshair.x = Math.max(0, Math.min(o.left, plot.width()));\n                crosshair.y = Math.max(0, Math.min(o.top, plot.height()));\n            }\n            \n            plot.triggerRedrawOverlay();\n        };\n        \n        plot.clearCrosshair = plot.setCrosshair; // passes null for pos\n        \n        plot.lockCrosshair = function lockCrosshair(pos) {\n            if (pos)\n                plot.setCrosshair(pos);\n            crosshair.locked = true;\n        };\n\n        plot.unlockCrosshair = function unlockCrosshair() {\n            crosshair.locked = false;\n        };\n\n        function onMouseOut(e) {\n            if (crosshair.locked)\n                return;\n\n            if (crosshair.x != -1) {\n                crosshair.x = -1;\n                plot.triggerRedrawOverlay();\n            }\n        }\n\n        function onMouseMove(e) {\n            if (crosshair.locked)\n                return;\n                \n            if (plot.getSelection && plot.getSelection()) {\n                crosshair.x = -1; // hide the crosshair while selecting\n                return;\n            }\n                \n            var offset = plot.offset();\n            crosshair.x = Math.max(0, Math.min(e.pageX - offset.left, plot.width()));\n            crosshair.y = Math.max(0, Math.min(e.pageY - offset.top, plot.height()));\n            plot.triggerRedrawOverlay();\n        }\n        \n        plot.hooks.bindEvents.push(function (plot, eventHolder) {\n            if (!plot.getOptions().crosshair.mode)\n                return;\n\n            eventHolder.mouseout(onMouseOut);\n            eventHolder.mousemove(onMouseMove);\n        });\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            var c = plot.getOptions().crosshair;\n            if (!c.mode)\n                return;\n\n            var plotOffset = plot.getPlotOffset();\n            \n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            if (crosshair.x != -1) {\n                var adj = plot.getOptions().crosshair.lineWidth % 2 ? 0.5 : 0;\n\n                ctx.strokeStyle = c.color;\n                ctx.lineWidth = c.lineWidth;\n                ctx.lineJoin = \"round\";\n\n                ctx.beginPath();\n                if (c.mode.indexOf(\"x\") != -1) {\n                    var drawX = Math.floor(crosshair.x) + adj;\n                    ctx.moveTo(drawX, 0);\n                    ctx.lineTo(drawX, plot.height());\n                }\n                if (c.mode.indexOf(\"y\") != -1) {\n                    var drawY = Math.floor(crosshair.y) + adj;\n                    ctx.moveTo(0, drawY);\n                    ctx.lineTo(plot.width(), drawY);\n                }\n                ctx.stroke();\n            }\n            ctx.restore();\n        });\n\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mouseout\", onMouseOut);\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n        });\n    }\n    \n    $.plot.plugins.push({\n        init: init,\n        options: options,\n        name: 'crosshair',\n        version: '1.0'\n    });\n})(jQuery);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}