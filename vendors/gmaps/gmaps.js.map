{"version":3,"sources":["build/node_modules/browser-pack/_prelude.js","build/vendors/gmaps/build/vendors/gmaps/gmaps.js"],"names":[],"mappings":"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","file":"gmaps.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\n(function(root, factory) {\n  window.GMaps = factory();\n}(this, function() {\n\n/*!\n * GMaps.js v0.4.24\n * http://hpneo.github.com/gmaps/\n *\n * Copyright 2016, Gustavo Leon\n * Released under the MIT License.\n */\n\nvar extend_object = function(obj, new_obj) {\n  var name;\n\n  if (obj === new_obj) {\n    return obj;\n  }\n\n  for (name in new_obj) {\n    if (new_obj[name] !== undefined) {\n      obj[name] = new_obj[name];\n    }\n  }\n\n  return obj;\n};\n\nvar replace_object = function(obj, replace) {\n  var name;\n\n  if (obj === replace) {\n    return obj;\n  }\n\n  for (name in replace) {\n    if (obj[name] != undefined) {\n      obj[name] = replace[name];\n    }\n  }\n\n  return obj;\n};\n\nvar array_map = function(array, callback) {\n  var original_callback_params = Array.prototype.slice.call(arguments, 2),\n      array_return = [],\n      array_length = array.length,\n      i;\n\n  if (Array.prototype.map && array.map === Array.prototype.map) {\n    array_return = Array.prototype.map.call(array, function(item) {\n      var callback_params = original_callback_params.slice(0);\n      callback_params.splice(0, 0, item);\n\n      return callback.apply(this, callback_params);\n    });\n  }\n  else {\n    for (i = 0; i < array_length; i++) {\n      callback_params = original_callback_params;\n      callback_params.splice(0, 0, array[i]);\n      array_return.push(callback.apply(this, callback_params));\n    }\n  }\n\n  return array_return;\n};\n\nvar array_flat = function(array) {\n  var new_array = [],\n      i;\n\n  for (i = 0; i < array.length; i++) {\n    new_array = new_array.concat(array[i]);\n  }\n\n  return new_array;\n};\n\nvar coordsToLatLngs = function(coords, useGeoJSON) {\n  var first_coord = coords[0],\n      second_coord = coords[1];\n\n  if (useGeoJSON) {\n    first_coord = coords[1];\n    second_coord = coords[0];\n  }\n\n  return new google.maps.LatLng(first_coord, second_coord);\n};\n\nvar arrayToLatLng = function(coords, useGeoJSON) {\n  var i;\n\n  for (i = 0; i < coords.length; i++) {\n    if (!(coords[i] instanceof google.maps.LatLng)) {\n      if (coords[i].length > 0 && typeof(coords[i][0]) === \"object\") {\n        coords[i] = arrayToLatLng(coords[i], useGeoJSON);\n      }\n      else {\n        coords[i] = coordsToLatLngs(coords[i], useGeoJSON);\n      }\n    }\n  }\n\n  return coords;\n};\n\nvar getElementsByClassName = function (class_name, context) {\n    var element,\n        _class = class_name.replace('.', '');\n\n    if ('jQuery' in this && context) {\n        element = $(\".\" + _class, context)[0];\n    } else {\n        element = document.getElementsByClassName(_class)[0];\n    }\n    return element;\n\n};\n\nvar getElementById = function(id, context) {\n  var element,\n  id = id.replace('#', '');\n\n  if ('jQuery' in window && context) {\n    element = $('#' + id, context)[0];\n  } else {\n    element = document.getElementById(id);\n  };\n\n  return element;\n};\n\nvar findAbsolutePosition = function(obj)  {\n  var curleft = 0,\n      curtop = 0;\n\n  if (obj.offsetParent) {\n    do {\n      curleft += obj.offsetLeft;\n      curtop += obj.offsetTop;\n    } while (obj = obj.offsetParent);\n  }\n\n  return [curleft, curtop];\n};\n\nvar GMaps = (function(global) {\n  \"use strict\";\n\n  var doc = document;\n  /**\n   * Creates a new GMaps instance, including a Google Maps map.\n   * @class GMaps\n   * @constructs\n   * @param {object} options - `options` accepts all the [MapOptions](https://developers.google.com/maps/documentation/javascript/reference#MapOptions) and [events](https://developers.google.com/maps/documentation/javascript/reference#Map) listed in the Google Maps API. Also accepts:\n   * * `lat` (number): Latitude of the map's center\n   * * `lng` (number): Longitude of the map's center\n   * * `el` (string or HTMLElement): container where the map will be rendered\n   * * `markerClusterer` (function): A function to create a marker cluster. You can use MarkerClusterer or MarkerClustererPlus.\n   */\n  var GMaps = function(options) {\n\n    if (!(typeof window.google === 'object' && window.google.maps)) {\n      if (typeof window.console === 'object' && window.console.error) {\n        console.error('Google Maps API is required. Please register the following JavaScript library https://maps.googleapis.com/maps/api/js.');\n      }\n\n      return function() {};\n    }\n\n    if (!this) return new GMaps(options);\n\n    options.zoom = options.zoom || 15;\n    options.mapType = options.mapType || 'roadmap';\n\n    var valueOrDefault = function(value, defaultValue) {\n      return value === undefined ? defaultValue : value;\n    };\n\n    var self = this,\n        i,\n        events_that_hide_context_menu = [\n          'bounds_changed', 'center_changed', 'click', 'dblclick', 'drag',\n          'dragend', 'dragstart', 'idle', 'maptypeid_changed', 'projection_changed',\n          'resize', 'tilesloaded', 'zoom_changed'\n        ],\n        events_that_doesnt_hide_context_menu = ['mousemove', 'mouseout', 'mouseover'],\n        options_to_be_deleted = ['el', 'lat', 'lng', 'mapType', 'width', 'height', 'markerClusterer', 'enableNewStyle'],\n        identifier = options.el || options.div,\n        markerClustererFunction = options.markerClusterer,\n        mapType = google.maps.MapTypeId[options.mapType.toUpperCase()],\n        map_center = new google.maps.LatLng(options.lat, options.lng),\n        zoomControl = valueOrDefault(options.zoomControl, true),\n        zoomControlOpt = options.zoomControlOpt || {\n          style: 'DEFAULT',\n          position: 'TOP_LEFT'\n        },\n        zoomControlStyle = zoomControlOpt.style || 'DEFAULT',\n        zoomControlPosition = zoomControlOpt.position || 'TOP_LEFT',\n        panControl = valueOrDefault(options.panControl, true),\n        mapTypeControl = valueOrDefault(options.mapTypeControl, true),\n        scaleControl = valueOrDefault(options.scaleControl, true),\n        streetViewControl = valueOrDefault(options.streetViewControl, true),\n        overviewMapControl = valueOrDefault(overviewMapControl, true),\n        map_options = {},\n        map_base_options = {\n          zoom: this.zoom,\n          center: map_center,\n          mapTypeId: mapType\n        },\n        map_controls_options = {\n          panControl: panControl,\n          zoomControl: zoomControl,\n          zoomControlOptions: {\n            style: google.maps.ZoomControlStyle[zoomControlStyle],\n            position: google.maps.ControlPosition[zoomControlPosition]\n          },\n          mapTypeControl: mapTypeControl,\n          scaleControl: scaleControl,\n          streetViewControl: streetViewControl,\n          overviewMapControl: overviewMapControl\n        };\n\n      if (typeof(options.el) === 'string' || typeof(options.div) === 'string') {\n        if (identifier.indexOf(\"#\") > -1) {\n            /**\n             * Container element\n             *\n             * @type {HTMLElement}\n             */\n            this.el = getElementById(identifier, options.context);\n        } else {\n            this.el = getElementsByClassName.apply(this, [identifier, options.context]);\n        }\n      } else {\n          this.el = identifier;\n      }\n\n    if (typeof(this.el) === 'undefined' || this.el === null) {\n      throw 'No element defined.';\n    }\n\n    window.context_menu = window.context_menu || {};\n    window.context_menu[self.el.id] = {};\n\n    /**\n     * Collection of custom controls in the map UI\n     *\n     * @type {array}\n     */\n    this.controls = [];\n    /**\n     * Collection of map's overlays\n     *\n     * @type {array}\n     */\n    this.overlays = [];\n    /**\n     * Collection of KML/GeoRSS and FusionTable layers\n     *\n     * @type {array}\n     */\n    this.layers = [];\n    /**\n     * Collection of data layers (See {@link GMaps#addLayer})\n     *\n     * @type {object}\n     */\n    this.singleLayers = {};\n    /**\n     * Collection of map's markers\n     *\n     * @type {array}\n     */\n    this.markers = [];\n    /**\n     * Collection of map's lines\n     *\n     * @type {array}\n     */\n    this.polylines = [];\n    /**\n     * Collection of map's routes requested by {@link GMaps#getRoutes}, {@link GMaps#renderRoute}, {@link GMaps#drawRoute}, {@link GMaps#travelRoute} or {@link GMaps#drawSteppedRoute}\n     *\n     * @type {array}\n     */\n    this.routes = [];\n    /**\n     * Collection of map's polygons\n     *\n     * @type {array}\n     */\n    this.polygons = [];\n    this.infoWindow = null;\n    this.overlay_el = null;\n    /**\n     * Current map's zoom\n     *\n     * @type {number}\n     */\n    this.zoom = options.zoom;\n    this.registered_events = {};\n\n    this.el.style.width = options.width || this.el.scrollWidth || this.el.offsetWidth;\n    this.el.style.height = options.height || this.el.scrollHeight || this.el.offsetHeight;\n\n    google.maps.visualRefresh = options.enableNewStyle;\n\n    for (i = 0; i < options_to_be_deleted.length; i++) {\n      delete options[options_to_be_deleted[i]];\n    }\n\n    if(options.disableDefaultUI != true) {\n      map_base_options = extend_object(map_base_options, map_controls_options);\n    }\n\n    map_options = extend_object(map_base_options, options);\n\n    for (i = 0; i < events_that_hide_context_menu.length; i++) {\n      delete map_options[events_that_hide_context_menu[i]];\n    }\n\n    for (i = 0; i < events_that_doesnt_hide_context_menu.length; i++) {\n      delete map_options[events_that_doesnt_hide_context_menu[i]];\n    }\n\n    /**\n     * Google Maps map instance\n     *\n     * @type {google.maps.Map}\n     */\n    this.map = new google.maps.Map(this.el, map_options);\n\n    if (markerClustererFunction) {\n      /**\n       * Marker Clusterer instance\n       *\n       * @type {object}\n       */\n      this.markerClusterer = markerClustererFunction.apply(this, [this.map]);\n    }\n\n    var buildContextMenuHTML = function(control, e) {\n      var html = '',\n          options = window.context_menu[self.el.id][control];\n\n      for (var i in options){\n        if (options.hasOwnProperty(i)) {\n          var option = options[i];\n\n          html += '<li><a id=\"' + control + '_' + i + '\" href=\"#\">' + option.title + '</a></li>';\n        }\n      }\n\n      if (!getElementById('gmaps_context_menu')) return;\n\n      var context_menu_element = getElementById('gmaps_context_menu');\n\n      context_menu_element.innerHTML = html;\n\n      var context_menu_items = context_menu_element.getElementsByTagName('a'),\n          context_menu_items_count = context_menu_items.length,\n          i;\n\n      for (i = 0; i < context_menu_items_count; i++) {\n        var context_menu_item = context_menu_items[i];\n\n        var assign_menu_item_action = function(ev){\n          ev.preventDefault();\n\n          options[this.id.replace(control + '_', '')].action.apply(self, [e]);\n          self.hideContextMenu();\n        };\n\n        google.maps.event.clearListeners(context_menu_item, 'click');\n        google.maps.event.addDomListenerOnce(context_menu_item, 'click', assign_menu_item_action, false);\n      }\n\n      var position = findAbsolutePosition.apply(this, [self.el]),\n          left = position[0] + e.pixel.x - 15,\n          top = position[1] + e.pixel.y- 15;\n\n      context_menu_element.style.left = left + \"px\";\n      context_menu_element.style.top = top + \"px\";\n\n      // context_menu_element.style.display = 'block';\n    };\n\n    this.buildContextMenu = function(control, e) {\n      if (control === 'marker') {\n        e.pixel = {};\n\n        var overlay = new google.maps.OverlayView();\n        overlay.setMap(self.map);\n\n        overlay.draw = function() {\n          var projection = overlay.getProjection(),\n              position = e.marker.getPosition();\n\n          e.pixel = projection.fromLatLngToContainerPixel(position);\n\n          buildContextMenuHTML(control, e);\n        };\n      }\n      else {\n        buildContextMenuHTML(control, e);\n      }\n\n      var context_menu_element = getElementById('gmaps_context_menu');\n\n      setTimeout(function() {\n        context_menu_element.style.display = 'block';\n      }, 0);\n    };\n\n    /**\n     * Add a context menu for a map or a marker.\n     *\n     * @param {object} options - The `options` object should contain:\n     * * `control` (string): Kind of control the context menu will be attached. Can be \"map\" or \"marker\".\n     * * `options` (array): A collection of context menu items:\n     *   * `title` (string): Item's title shown in the context menu.\n     *   * `name` (string): Item's identifier.\n     *   * `action` (function): Function triggered after selecting the context menu item.\n     */\n    this.setContextMenu = function(options) {\n      window.context_menu[self.el.id][options.control] = {};\n\n      var i,\n          ul = doc.createElement('ul');\n\n      for (i in options.options) {\n        if (options.options.hasOwnProperty(i)) {\n          var option = options.options[i];\n\n          window.context_menu[self.el.id][options.control][option.name] = {\n            title: option.title,\n            action: option.action\n          };\n        }\n      }\n\n      ul.id = 'gmaps_context_menu';\n      ul.style.display = 'none';\n      ul.style.position = 'absolute';\n      ul.style.minWidth = '100px';\n      ul.style.background = 'white';\n      ul.style.listStyle = 'none';\n      ul.style.padding = '8px';\n      ul.style.boxShadow = '2px 2px 6px #ccc';\n\n      if (!getElementById('gmaps_context_menu')) {\n        doc.body.appendChild(ul);\n      }\n\n      var context_menu_element = getElementById('gmaps_context_menu');\n\n      google.maps.event.addDomListener(context_menu_element, 'mouseout', function(ev) {\n        if (!ev.relatedTarget || !this.contains(ev.relatedTarget)) {\n          window.setTimeout(function(){\n            context_menu_element.style.display = 'none';\n          }, 400);\n        }\n      }, false);\n    };\n\n    /**\n     * Hide the current context menu\n     */\n    this.hideContextMenu = function() {\n      var context_menu_element = getElementById('gmaps_context_menu');\n\n      if (context_menu_element) {\n        context_menu_element.style.display = 'none';\n      }\n    };\n\n    var setupListener = function(object, name) {\n      google.maps.event.addListener(object, name, function(e){\n        if (e == undefined) {\n          e = this;\n        }\n\n        options[name].apply(this, [e]);\n\n        self.hideContextMenu();\n      });\n    };\n\n    //google.maps.event.addListener(this.map, 'idle', this.hideContextMenu);\n    google.maps.event.addListener(this.map, 'zoom_changed', this.hideContextMenu);\n\n    for (var ev = 0; ev < events_that_hide_context_menu.length; ev++) {\n      var name = events_that_hide_context_menu[ev];\n\n      if (name in options) {\n        setupListener(this.map, name);\n      }\n    }\n\n    for (var ev = 0; ev < events_that_doesnt_hide_context_menu.length; ev++) {\n      var name = events_that_doesnt_hide_context_menu[ev];\n\n      if (name in options) {\n        setupListener(this.map, name);\n      }\n    }\n\n    google.maps.event.addListener(this.map, 'rightclick', function(e) {\n      if (options.rightclick) {\n        options.rightclick.apply(this, [e]);\n      }\n\n      if(window.context_menu[self.el.id]['map'] != undefined) {\n        self.buildContextMenu('map', e);\n      }\n    });\n\n    /**\n     * Trigger a `resize` event, useful if you need to repaint the current map (for changes in the viewport or display / hide actions).\n     */\n    this.refresh = function() {\n      google.maps.event.trigger(this.map, 'resize');\n    };\n\n    /**\n     * Adjust the map zoom to include all the markers added in the map.\n     */\n    this.fitZoom = function() {\n      var latLngs = [],\n          markers_length = this.markers.length,\n          i;\n\n      for (i = 0; i < markers_length; i++) {\n        if(typeof(this.markers[i].visible) === 'boolean' && this.markers[i].visible) {\n          latLngs.push(this.markers[i].getPosition());\n        }\n      }\n\n      this.fitLatLngBounds(latLngs);\n    };\n\n    /**\n     * Adjust the map zoom to include all the coordinates in the `latLngs` array.\n     *\n     * @param {array} latLngs - Collection of `google.maps.LatLng` objects.\n     */\n    this.fitLatLngBounds = function(latLngs) {\n      var total = latLngs.length,\n          bounds = new google.maps.LatLngBounds(),\n          i;\n\n      for(i = 0; i < total; i++) {\n        bounds.extend(latLngs[i]);\n      }\n\n      this.map.fitBounds(bounds);\n    };\n\n    /**\n     * Center the map using the `lat` and `lng` coordinates.\n     *\n     * @param {number} lat - Latitude of the coordinate.\n     * @param {number} lng - Longitude of the coordinate.\n     * @param {function} [callback] - Callback that will be executed after the map is centered.\n     */\n    this.setCenter = function(lat, lng, callback) {\n      this.map.panTo(new google.maps.LatLng(lat, lng));\n\n      if (callback) {\n        callback();\n      }\n    };\n\n    /**\n     * Return the HTML element container of the map.\n     *\n     * @returns {HTMLElement} the element container.\n     */\n    this.getElement = function() {\n      return this.el;\n    };\n\n    /**\n     * Increase the map's zoom.\n     *\n     * @param {number} [magnitude] - The number of times the map will be zoomed in.\n     */\n    this.zoomIn = function(value) {\n      value = value || 1;\n\n      this.zoom = this.map.getZoom() + value;\n      this.map.setZoom(this.zoom);\n    };\n\n    /**\n     * Decrease the map's zoom.\n     *\n     * @param {number} [magnitude] - The number of times the map will be zoomed out.\n     */\n    this.zoomOut = function(value) {\n      value = value || 1;\n\n      this.zoom = this.map.getZoom() - value;\n      this.map.setZoom(this.zoom);\n    };\n\n    var native_methods = [],\n        method;\n\n    for (method in this.map) {\n      if (typeof(this.map[method]) == 'function' && !this[method]) {\n        native_methods.push(method);\n      }\n    }\n\n    for (i = 0; i < native_methods.length; i++) {\n      (function(gmaps, scope, method_name) {\n        gmaps[method_name] = function(){\n          return scope[method_name].apply(scope, arguments);\n        };\n      })(this, this.map, native_methods[i]);\n    }\n  };\n\n  return GMaps;\n})(this);\n\nGMaps.prototype.createControl = function(options) {\n  var control = document.createElement('div');\n\n  control.style.cursor = 'pointer';\n\n  if (options.disableDefaultStyles !== true) {\n    control.style.fontFamily = 'Roboto, Arial, sans-serif';\n    control.style.fontSize = '11px';\n    control.style.boxShadow = 'rgba(0, 0, 0, 0.298039) 0px 1px 4px -1px';\n  }\n\n  for (var option in options.style) {\n    control.style[option] = options.style[option];\n  }\n\n  if (options.id) {\n    control.id = options.id;\n  }\n\n  if (options.title) {\n    control.title = options.title;\n  }\n\n  if (options.classes) {\n    control.className = options.classes;\n  }\n\n  if (options.content) {\n    if (typeof options.content === 'string') {\n      control.innerHTML = options.content;\n    }\n    else if (options.content instanceof HTMLElement) {\n      control.appendChild(options.content);\n    }\n  }\n\n  if (options.position) {\n    control.position = google.maps.ControlPosition[options.position.toUpperCase()];\n  }\n\n  for (var ev in options.events) {\n    (function(object, name) {\n      google.maps.event.addDomListener(object, name, function(){\n        options.events[name].apply(this, [this]);\n      });\n    })(control, ev);\n  }\n\n  control.index = 1;\n\n  return control;\n};\n\n/**\n * Add a custom control to the map UI.\n *\n * @param {object} options - The `options` object should contain:\n * * `style` (object): The keys and values of this object should be valid CSS properties and values.\n * * `id` (string): The HTML id for the custom control.\n * * `classes` (string): A string containing all the HTML classes for the custom control.\n * * `content` (string or HTML element): The content of the custom control.\n * * `position` (string): Any valid [`google.maps.ControlPosition`](https://developers.google.com/maps/documentation/javascript/controls#ControlPositioning) value, in lower or upper case.\n * * `events` (object): The keys of this object should be valid DOM events. The values should be functions.\n * * `disableDefaultStyles` (boolean): If false, removes the default styles for the controls like font (family and size), and box shadow.\n * @returns {HTMLElement}\n */\nGMaps.prototype.addControl = function(options) {\n  var control = this.createControl(options);\n\n  this.controls.push(control);\n  this.map.controls[control.position].push(control);\n\n  return control;\n};\n\n/**\n * Remove a control from the map. `control` should be a control returned by `addControl()`.\n *\n * @param {HTMLElement} control - One of the controls returned by `addControl()`.\n * @returns {HTMLElement} the removed control.\n */\nGMaps.prototype.removeControl = function(control) {\n  var position = null,\n      i;\n\n  for (i = 0; i < this.controls.length; i++) {\n    if (this.controls[i] == control) {\n      position = this.controls[i].position;\n      this.controls.splice(i, 1);\n    }\n  }\n\n  if (position) {\n    for (i = 0; i < this.map.controls.length; i++) {\n      var controlsForPosition = this.map.controls[control.position];\n\n      if (controlsForPosition.getAt(i) == control) {\n        controlsForPosition.removeAt(i);\n\n        break;\n      }\n    }\n  }\n\n  return control;\n};\n\nGMaps.prototype.createMarker = function(options) {\n  if (options.lat == undefined && options.lng == undefined && options.position == undefined) {\n    throw 'No latitude or longitude defined.';\n  }\n\n  var self = this,\n      details = options.details,\n      fences = options.fences,\n      outside = options.outside,\n      base_options = {\n        position: new google.maps.LatLng(options.lat, options.lng),\n        map: null\n      },\n      marker_options = extend_object(base_options, options);\n\n  delete marker_options.lat;\n  delete marker_options.lng;\n  delete marker_options.fences;\n  delete marker_options.outside;\n\n  var marker = new google.maps.Marker(marker_options);\n\n  marker.fences = fences;\n\n  if (options.infoWindow) {\n    marker.infoWindow = new google.maps.InfoWindow(options.infoWindow);\n\n    var info_window_events = ['closeclick', 'content_changed', 'domready', 'position_changed', 'zindex_changed'];\n\n    for (var ev = 0; ev < info_window_events.length; ev++) {\n      (function(object, name) {\n        if (options.infoWindow[name]) {\n          google.maps.event.addListener(object, name, function(e){\n            options.infoWindow[name].apply(this, [e]);\n          });\n        }\n      })(marker.infoWindow, info_window_events[ev]);\n    }\n  }\n\n  var marker_events = ['animation_changed', 'clickable_changed', 'cursor_changed', 'draggable_changed', 'flat_changed', 'icon_changed', 'position_changed', 'shadow_changed', 'shape_changed', 'title_changed', 'visible_changed', 'zindex_changed'];\n\n  var marker_events_with_mouse = ['dblclick', 'drag', 'dragend', 'dragstart', 'mousedown', 'mouseout', 'mouseover', 'mouseup'];\n\n  for (var ev = 0; ev < marker_events.length; ev++) {\n    (function(object, name) {\n      if (options[name]) {\n        google.maps.event.addListener(object, name, function(){\n          options[name].apply(this, [this]);\n        });\n      }\n    })(marker, marker_events[ev]);\n  }\n\n  for (var ev = 0; ev < marker_events_with_mouse.length; ev++) {\n    (function(map, object, name) {\n      if (options[name]) {\n        google.maps.event.addListener(object, name, function(me){\n          if(!me.pixel){\n            me.pixel = map.getProjection().fromLatLngToPoint(me.latLng)\n          }\n\n          options[name].apply(this, [me]);\n        });\n      }\n    })(this.map, marker, marker_events_with_mouse[ev]);\n  }\n\n  google.maps.event.addListener(marker, 'click', function() {\n    this.details = details;\n\n    if (options.click) {\n      options.click.apply(this, [this]);\n    }\n\n    if (marker.infoWindow) {\n      self.hideInfoWindows();\n      marker.infoWindow.open(self.map, marker);\n    }\n  });\n\n  google.maps.event.addListener(marker, 'rightclick', function(e) {\n    e.marker = this;\n\n    if (options.rightclick) {\n      options.rightclick.apply(this, [e]);\n    }\n\n    if (window.context_menu[self.el.id]['marker'] != undefined) {\n      self.buildContextMenu('marker', e);\n    }\n  });\n\n  if (marker.fences) {\n    google.maps.event.addListener(marker, 'dragend', function() {\n      self.checkMarkerGeofence(marker, function(m, f) {\n        outside(m, f);\n      });\n    });\n  }\n\n  return marker;\n};\n\nGMaps.prototype.addMarker = function(options) {\n  var marker;\n  if(options.hasOwnProperty('gm_accessors_')) {\n    // Native google.maps.Marker object\n    marker = options;\n  }\n  else {\n    if ((options.hasOwnProperty('lat') && options.hasOwnProperty('lng')) || options.position) {\n      marker = this.createMarker(options);\n    }\n    else {\n      throw 'No latitude or longitude defined.';\n    }\n  }\n\n  marker.setMap(this.map);\n\n  if(this.markerClusterer) {\n    this.markerClusterer.addMarker(marker);\n  }\n\n  this.markers.push(marker);\n\n  GMaps.fire('marker_added', marker, this);\n\n  return marker;\n};\n\nGMaps.prototype.addMarkers = function(array) {\n  for (var i = 0, marker; marker=array[i]; i++) {\n    this.addMarker(marker);\n  }\n\n  return this.markers;\n};\n\nGMaps.prototype.hideInfoWindows = function() {\n  for (var i = 0, marker; marker = this.markers[i]; i++){\n    if (marker.infoWindow) {\n      marker.infoWindow.close();\n    }\n  }\n};\n\nGMaps.prototype.removeMarker = function(marker) {\n  for (var i = 0; i < this.markers.length; i++) {\n    if (this.markers[i] === marker) {\n      this.markers[i].setMap(null);\n      this.markers.splice(i, 1);\n\n      if(this.markerClusterer) {\n        this.markerClusterer.removeMarker(marker);\n      }\n\n      GMaps.fire('marker_removed', marker, this);\n\n      break;\n    }\n  }\n\n  return marker;\n};\n\nGMaps.prototype.removeMarkers = function (collection) {\n  var new_markers = [];\n\n  if (typeof collection == 'undefined') {\n    for (var i = 0; i < this.markers.length; i++) {\n      var marker = this.markers[i];\n      marker.setMap(null);\n\n      GMaps.fire('marker_removed', marker, this);\n    }\n\n    if(this.markerClusterer && this.markerClusterer.clearMarkers) {\n      this.markerClusterer.clearMarkers();\n    }\n\n    this.markers = new_markers;\n  }\n  else {\n    for (var i = 0; i < collection.length; i++) {\n      var index = this.markers.indexOf(collection[i]);\n\n      if (index > -1) {\n        var marker = this.markers[index];\n        marker.setMap(null);\n\n        if(this.markerClusterer) {\n          this.markerClusterer.removeMarker(marker);\n        }\n\n        GMaps.fire('marker_removed', marker, this);\n      }\n    }\n\n    for (var i = 0; i < this.markers.length; i++) {\n      var marker = this.markers[i];\n      if (marker.getMap() != null) {\n        new_markers.push(marker);\n      }\n    }\n\n    this.markers = new_markers;\n  }\n};\n\nGMaps.prototype.drawOverlay = function(options) {\n  var overlay = new google.maps.OverlayView(),\n      auto_show = true;\n\n  overlay.setMap(this.map);\n\n  if (options.auto_show != null) {\n    auto_show = options.auto_show;\n  }\n\n  overlay.onAdd = function() {\n    var el = document.createElement('div');\n\n    el.style.borderStyle = \"none\";\n    el.style.borderWidth = \"0px\";\n    el.style.position = \"absolute\";\n    el.style.zIndex = 100;\n    el.innerHTML = options.content;\n\n    overlay.el = el;\n\n    if (!options.layer) {\n      options.layer = 'overlayLayer';\n    }\n\n    var panes = this.getPanes(),\n        overlayLayer = panes[options.layer],\n        stop_overlay_events = ['contextmenu', 'DOMMouseScroll', 'dblclick', 'mousedown'];\n\n    overlayLayer.appendChild(el);\n\n    for (var ev = 0; ev < stop_overlay_events.length; ev++) {\n      (function(object, name) {\n        google.maps.event.addDomListener(object, name, function(e){\n          if (navigator.userAgent.toLowerCase().indexOf('msie') != -1 && document.all) {\n            e.cancelBubble = true;\n            e.returnValue = false;\n          }\n          else {\n            e.stopPropagation();\n          }\n        });\n      })(el, stop_overlay_events[ev]);\n    }\n\n    if (options.click) {\n      panes.overlayMouseTarget.appendChild(overlay.el);\n      google.maps.event.addDomListener(overlay.el, 'click', function() {\n        options.click.apply(overlay, [overlay]);\n      });\n    }\n\n    google.maps.event.trigger(this, 'ready');\n  };\n\n  overlay.draw = function() {\n    var projection = this.getProjection(),\n        pixel = projection.fromLatLngToDivPixel(new google.maps.LatLng(options.lat, options.lng));\n\n    options.horizontalOffset = options.horizontalOffset || 0;\n    options.verticalOffset = options.verticalOffset || 0;\n\n    var el = overlay.el,\n        content = el.children[0],\n        content_height = content.clientHeight,\n        content_width = content.clientWidth;\n\n    switch (options.verticalAlign) {\n      case 'top':\n        el.style.top = (pixel.y - content_height + options.verticalOffset) + 'px';\n        break;\n      default:\n      case 'middle':\n        el.style.top = (pixel.y - (content_height / 2) + options.verticalOffset) + 'px';\n        break;\n      case 'bottom':\n        el.style.top = (pixel.y + options.verticalOffset) + 'px';\n        break;\n    }\n\n    switch (options.horizontalAlign) {\n      case 'left':\n        el.style.left = (pixel.x - content_width + options.horizontalOffset) + 'px';\n        break;\n      default:\n      case 'center':\n        el.style.left = (pixel.x - (content_width / 2) + options.horizontalOffset) + 'px';\n        break;\n      case 'right':\n        el.style.left = (pixel.x + options.horizontalOffset) + 'px';\n        break;\n    }\n\n    el.style.display = auto_show ? 'block' : 'none';\n\n    if (!auto_show) {\n      options.show.apply(this, [el]);\n    }\n  };\n\n  overlay.onRemove = function() {\n    var el = overlay.el;\n\n    if (options.remove) {\n      options.remove.apply(this, [el]);\n    }\n    else {\n      overlay.el.parentNode.removeChild(overlay.el);\n      overlay.el = null;\n    }\n  };\n\n  this.overlays.push(overlay);\n  return overlay;\n};\n\nGMaps.prototype.removeOverlay = function(overlay) {\n  for (var i = 0; i < this.overlays.length; i++) {\n    if (this.overlays[i] === overlay) {\n      this.overlays[i].setMap(null);\n      this.overlays.splice(i, 1);\n\n      break;\n    }\n  }\n};\n\nGMaps.prototype.removeOverlays = function() {\n  for (var i = 0, item; item = this.overlays[i]; i++) {\n    item.setMap(null);\n  }\n\n  this.overlays = [];\n};\n\nGMaps.prototype.drawPolyline = function(options) {\n  var path = [],\n      points = options.path;\n\n  if (points.length) {\n    if (points[0][0] === undefined) {\n      path = points;\n    }\n    else {\n      for (var i = 0, latlng; latlng = points[i]; i++) {\n        path.push(new google.maps.LatLng(latlng[0], latlng[1]));\n      }\n    }\n  }\n\n  var polyline_options = {\n    map: this.map,\n    path: path,\n    strokeColor: options.strokeColor,\n    strokeOpacity: options.strokeOpacity,\n    strokeWeight: options.strokeWeight,\n    geodesic: options.geodesic,\n    clickable: true,\n    editable: false,\n    visible: true\n  };\n\n  if (options.hasOwnProperty(\"clickable\")) {\n    polyline_options.clickable = options.clickable;\n  }\n\n  if (options.hasOwnProperty(\"editable\")) {\n    polyline_options.editable = options.editable;\n  }\n\n  if (options.hasOwnProperty(\"icons\")) {\n    polyline_options.icons = options.icons;\n  }\n\n  if (options.hasOwnProperty(\"zIndex\")) {\n    polyline_options.zIndex = options.zIndex;\n  }\n\n  var polyline = new google.maps.Polyline(polyline_options);\n\n  var polyline_events = ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\n  for (var ev = 0; ev < polyline_events.length; ev++) {\n    (function(object, name) {\n      if (options[name]) {\n        google.maps.event.addListener(object, name, function(e){\n          options[name].apply(this, [e]);\n        });\n      }\n    })(polyline, polyline_events[ev]);\n  }\n\n  this.polylines.push(polyline);\n\n  GMaps.fire('polyline_added', polyline, this);\n\n  return polyline;\n};\n\nGMaps.prototype.removePolyline = function(polyline) {\n  for (var i = 0; i < this.polylines.length; i++) {\n    if (this.polylines[i] === polyline) {\n      this.polylines[i].setMap(null);\n      this.polylines.splice(i, 1);\n\n      GMaps.fire('polyline_removed', polyline, this);\n\n      break;\n    }\n  }\n};\n\nGMaps.prototype.removePolylines = function() {\n  for (var i = 0, item; item = this.polylines[i]; i++) {\n    item.setMap(null);\n  }\n\n  this.polylines = [];\n};\n\nGMaps.prototype.drawCircle = function(options) {\n  options =  extend_object({\n    map: this.map,\n    center: new google.maps.LatLng(options.lat, options.lng)\n  }, options);\n\n  delete options.lat;\n  delete options.lng;\n\n  var polygon = new google.maps.Circle(options),\n      polygon_events = ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\n  for (var ev = 0; ev < polygon_events.length; ev++) {\n    (function(object, name) {\n      if (options[name]) {\n        google.maps.event.addListener(object, name, function(e){\n          options[name].apply(this, [e]);\n        });\n      }\n    })(polygon, polygon_events[ev]);\n  }\n\n  this.polygons.push(polygon);\n\n  return polygon;\n};\n\nGMaps.prototype.drawRectangle = function(options) {\n  options = extend_object({\n    map: this.map\n  }, options);\n\n  var latLngBounds = new google.maps.LatLngBounds(\n    new google.maps.LatLng(options.bounds[0][0], options.bounds[0][1]),\n    new google.maps.LatLng(options.bounds[1][0], options.bounds[1][1])\n  );\n\n  options.bounds = latLngBounds;\n\n  var polygon = new google.maps.Rectangle(options),\n      polygon_events = ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\n  for (var ev = 0; ev < polygon_events.length; ev++) {\n    (function(object, name) {\n      if (options[name]) {\n        google.maps.event.addListener(object, name, function(e){\n          options[name].apply(this, [e]);\n        });\n      }\n    })(polygon, polygon_events[ev]);\n  }\n\n  this.polygons.push(polygon);\n\n  return polygon;\n};\n\nGMaps.prototype.drawPolygon = function(options) {\n  var useGeoJSON = false;\n\n  if(options.hasOwnProperty(\"useGeoJSON\")) {\n    useGeoJSON = options.useGeoJSON;\n  }\n\n  delete options.useGeoJSON;\n\n  options = extend_object({\n    map: this.map\n  }, options);\n\n  if (useGeoJSON == false) {\n    options.paths = [options.paths.slice(0)];\n  }\n\n  if (options.paths.length > 0) {\n    if (options.paths[0].length > 0) {\n      options.paths = array_flat(array_map(options.paths, arrayToLatLng, useGeoJSON));\n    }\n  }\n\n  var polygon = new google.maps.Polygon(options),\n      polygon_events = ['click', 'dblclick', 'mousedown', 'mousemove', 'mouseout', 'mouseover', 'mouseup', 'rightclick'];\n\n  for (var ev = 0; ev < polygon_events.length; ev++) {\n    (function(object, name) {\n      if (options[name]) {\n        google.maps.event.addListener(object, name, function(e){\n          options[name].apply(this, [e]);\n        });\n      }\n    })(polygon, polygon_events[ev]);\n  }\n\n  this.polygons.push(polygon);\n\n  GMaps.fire('polygon_added', polygon, this);\n\n  return polygon;\n};\n\nGMaps.prototype.removePolygon = function(polygon) {\n  for (var i = 0; i < this.polygons.length; i++) {\n    if (this.polygons[i] === polygon) {\n      this.polygons[i].setMap(null);\n      this.polygons.splice(i, 1);\n\n      GMaps.fire('polygon_removed', polygon, this);\n\n      break;\n    }\n  }\n};\n\nGMaps.prototype.removePolygons = function() {\n  for (var i = 0, item; item = this.polygons[i]; i++) {\n    item.setMap(null);\n  }\n\n  this.polygons = [];\n};\n\nGMaps.prototype.getFromFusionTables = function(options) {\n  var events = options.events;\n\n  delete options.events;\n\n  var fusion_tables_options = options,\n      layer = new google.maps.FusionTablesLayer(fusion_tables_options);\n\n  for (var ev in events) {\n    (function(object, name) {\n      google.maps.event.addListener(object, name, function(e) {\n        events[name].apply(this, [e]);\n      });\n    })(layer, ev);\n  }\n\n  this.layers.push(layer);\n\n  return layer;\n};\n\nGMaps.prototype.loadFromFusionTables = function(options) {\n  var layer = this.getFromFusionTables(options);\n  layer.setMap(this.map);\n\n  return layer;\n};\n\nGMaps.prototype.getFromKML = function(options) {\n  var url = options.url,\n      events = options.events;\n\n  delete options.url;\n  delete options.events;\n\n  var kml_options = options,\n      layer = new google.maps.KmlLayer(url, kml_options);\n\n  for (var ev in events) {\n    (function(object, name) {\n      google.maps.event.addListener(object, name, function(e) {\n        events[name].apply(this, [e]);\n      });\n    })(layer, ev);\n  }\n\n  this.layers.push(layer);\n\n  return layer;\n};\n\nGMaps.prototype.loadFromKML = function(options) {\n  var layer = this.getFromKML(options);\n  layer.setMap(this.map);\n\n  return layer;\n};\n\nGMaps.prototype.addLayer = function(layerName, options) {\n  //var default_layers = ['weather', 'clouds', 'traffic', 'transit', 'bicycling', 'panoramio', 'places'];\n  options = options || {};\n  var layer;\n\n  switch(layerName) {\n    case 'weather': this.singleLayers.weather = layer = new google.maps.weather.WeatherLayer();\n      break;\n    case 'clouds': this.singleLayers.clouds = layer = new google.maps.weather.CloudLayer();\n      break;\n    case 'traffic': this.singleLayers.traffic = layer = new google.maps.TrafficLayer();\n      break;\n    case 'transit': this.singleLayers.transit = layer = new google.maps.TransitLayer();\n      break;\n    case 'bicycling': this.singleLayers.bicycling = layer = new google.maps.BicyclingLayer();\n      break;\n    case 'panoramio':\n        this.singleLayers.panoramio = layer = new google.maps.panoramio.PanoramioLayer();\n        layer.setTag(options.filter);\n        delete options.filter;\n\n        //click event\n        if (options.click) {\n          google.maps.event.addListener(layer, 'click', function(event) {\n            options.click(event);\n            delete options.click;\n          });\n        }\n      break;\n      case 'places':\n        this.singleLayers.places = layer = new google.maps.places.PlacesService(this.map);\n\n        //search, nearbySearch, radarSearch callback, Both are the same\n        if (options.search || options.nearbySearch || options.radarSearch) {\n          var placeSearchRequest  = {\n            bounds : options.bounds || null,\n            keyword : options.keyword || null,\n            location : options.location || null,\n            name : options.name || null,\n            radius : options.radius || null,\n            rankBy : options.rankBy || null,\n            types : options.types || null\n          };\n\n          if (options.radarSearch) {\n            layer.radarSearch(placeSearchRequest, options.radarSearch);\n          }\n\n          if (options.search) {\n            layer.search(placeSearchRequest, options.search);\n          }\n\n          if (options.nearbySearch) {\n            layer.nearbySearch(placeSearchRequest, options.nearbySearch);\n          }\n        }\n\n        //textSearch callback\n        if (options.textSearch) {\n          var textSearchRequest  = {\n            bounds : options.bounds || null,\n            location : options.location || null,\n            query : options.query || null,\n            radius : options.radius || null\n          };\n\n          layer.textSearch(textSearchRequest, options.textSearch);\n        }\n      break;\n  }\n\n  if (layer !== undefined) {\n    if (typeof layer.setOptions == 'function') {\n      layer.setOptions(options);\n    }\n    if (typeof layer.setMap == 'function') {\n      layer.setMap(this.map);\n    }\n\n    return layer;\n  }\n};\n\nGMaps.prototype.removeLayer = function(layer) {\n  if (typeof(layer) == \"string\" && this.singleLayers[layer] !== undefined) {\n     this.singleLayers[layer].setMap(null);\n\n     delete this.singleLayers[layer];\n  }\n  else {\n    for (var i = 0; i < this.layers.length; i++) {\n      if (this.layers[i] === layer) {\n        this.layers[i].setMap(null);\n        this.layers.splice(i, 1);\n\n        break;\n      }\n    }\n  }\n};\n\nvar travelMode, unitSystem;\n\nGMaps.prototype.getRoutes = function(options) {\n  switch (options.travelMode) {\n    case 'bicycling':\n      travelMode = google.maps.TravelMode.BICYCLING;\n      break;\n    case 'transit':\n      travelMode = google.maps.TravelMode.TRANSIT;\n      break;\n    case 'driving':\n      travelMode = google.maps.TravelMode.DRIVING;\n      break;\n    default:\n      travelMode = google.maps.TravelMode.WALKING;\n      break;\n  }\n\n  if (options.unitSystem === 'imperial') {\n    unitSystem = google.maps.UnitSystem.IMPERIAL;\n  }\n  else {\n    unitSystem = google.maps.UnitSystem.METRIC;\n  }\n\n  var base_options = {\n        avoidHighways: false,\n        avoidTolls: false,\n        optimizeWaypoints: false,\n        waypoints: []\n      },\n      request_options =  extend_object(base_options, options);\n\n  request_options.origin = /string/.test(typeof options.origin) ? options.origin : new google.maps.LatLng(options.origin[0], options.origin[1]);\n  request_options.destination = /string/.test(typeof options.destination) ? options.destination : new google.maps.LatLng(options.destination[0], options.destination[1]);\n  request_options.travelMode = travelMode;\n  request_options.unitSystem = unitSystem;\n\n  delete request_options.callback;\n  delete request_options.error;\n\n  var self = this,\n      routes = [],\n      service = new google.maps.DirectionsService();\n\n  service.route(request_options, function(result, status) {\n    if (status === google.maps.DirectionsStatus.OK) {\n      for (var r in result.routes) {\n        if (result.routes.hasOwnProperty(r)) {\n          routes.push(result.routes[r]);\n        }\n      }\n\n      if (options.callback) {\n        options.callback(routes, result, status);\n      }\n    }\n    else {\n      if (options.error) {\n        options.error(result, status);\n      }\n    }\n  });\n};\n\nGMaps.prototype.removeRoutes = function() {\n  this.routes.length = 0;\n};\n\nGMaps.prototype.getElevations = function(options) {\n  options = extend_object({\n    locations: [],\n    path : false,\n    samples : 256\n  }, options);\n\n  if (options.locations.length > 0) {\n    if (options.locations[0].length > 0) {\n      options.locations = array_flat(array_map([options.locations], arrayToLatLng,  false));\n    }\n  }\n\n  var callback = options.callback;\n  delete options.callback;\n\n  var service = new google.maps.ElevationService();\n\n  //location request\n  if (!options.path) {\n    delete options.path;\n    delete options.samples;\n\n    service.getElevationForLocations(options, function(result, status) {\n      if (callback && typeof(callback) === \"function\") {\n        callback(result, status);\n      }\n    });\n  //path request\n  } else {\n    var pathRequest = {\n      path : options.locations,\n      samples : options.samples\n    };\n\n    service.getElevationAlongPath(pathRequest, function(result, status) {\n     if (callback && typeof(callback) === \"function\") {\n        callback(result, status);\n      }\n    });\n  }\n};\n\nGMaps.prototype.cleanRoute = GMaps.prototype.removePolylines;\n\nGMaps.prototype.renderRoute = function(options, renderOptions) {\n  var self = this,\n      panel = ((typeof renderOptions.panel === 'string') ? document.getElementById(renderOptions.panel.replace('#', '')) : renderOptions.panel),\n      display;\n\n  renderOptions.panel = panel;\n  renderOptions = extend_object({\n    map: this.map\n  }, renderOptions);\n  display = new google.maps.DirectionsRenderer(renderOptions);\n\n  this.getRoutes({\n    origin: options.origin,\n    destination: options.destination,\n    travelMode: options.travelMode,\n    waypoints: options.waypoints,\n    unitSystem: options.unitSystem,\n    error: options.error,\n    avoidHighways: options.avoidHighways,\n    avoidTolls: options.avoidTolls,\n    optimizeWaypoints: options.optimizeWaypoints,\n    callback: function(routes, response, status) {\n      if (status === google.maps.DirectionsStatus.OK) {\n        display.setDirections(response);\n      }\n    }\n  });\n};\n\nGMaps.prototype.drawRoute = function(options) {\n  var self = this;\n\n  this.getRoutes({\n    origin: options.origin,\n    destination: options.destination,\n    travelMode: options.travelMode,\n    waypoints: options.waypoints,\n    unitSystem: options.unitSystem,\n    error: options.error,\n    avoidHighways: options.avoidHighways,\n    avoidTolls: options.avoidTolls,\n    optimizeWaypoints: options.optimizeWaypoints,\n    callback: function(routes) {\n      if (routes.length > 0) {\n        var polyline_options = {\n          path: routes[routes.length - 1].overview_path,\n          strokeColor: options.strokeColor,\n          strokeOpacity: options.strokeOpacity,\n          strokeWeight: options.strokeWeight\n        };\n\n        if (options.hasOwnProperty(\"icons\")) {\n          polyline_options.icons = options.icons;\n        }\n\n        self.drawPolyline(polyline_options);\n\n        if (options.callback) {\n          options.callback(routes[routes.length - 1]);\n        }\n      }\n    }\n  });\n};\n\nGMaps.prototype.travelRoute = function(options) {\n  if (options.origin && options.destination) {\n    this.getRoutes({\n      origin: options.origin,\n      destination: options.destination,\n      travelMode: options.travelMode,\n      waypoints : options.waypoints,\n      unitSystem: options.unitSystem,\n      error: options.error,\n      callback: function(e) {\n        //start callback\n        if (e.length > 0 && options.start) {\n          options.start(e[e.length - 1]);\n        }\n\n        //step callback\n        if (e.length > 0 && options.step) {\n          var route = e[e.length - 1];\n          if (route.legs.length > 0) {\n            var steps = route.legs[0].steps;\n            for (var i = 0, step; step = steps[i]; i++) {\n              step.step_number = i;\n              options.step(step, (route.legs[0].steps.length - 1));\n            }\n          }\n        }\n\n        //end callback\n        if (e.length > 0 && options.end) {\n           options.end(e[e.length - 1]);\n        }\n      }\n    });\n  }\n  else if (options.route) {\n    if (options.route.legs.length > 0) {\n      var steps = options.route.legs[0].steps;\n      for (var i = 0, step; step = steps[i]; i++) {\n        step.step_number = i;\n        options.step(step);\n      }\n    }\n  }\n};\n\nGMaps.prototype.drawSteppedRoute = function(options) {\n  var self = this;\n\n  if (options.origin && options.destination) {\n    this.getRoutes({\n      origin: options.origin,\n      destination: options.destination,\n      travelMode: options.travelMode,\n      waypoints : options.waypoints,\n      error: options.error,\n      callback: function(e) {\n        //start callback\n        if (e.length > 0 && options.start) {\n          options.start(e[e.length - 1]);\n        }\n\n        //step callback\n        if (e.length > 0 && options.step) {\n          var route = e[e.length - 1];\n          if (route.legs.length > 0) {\n            var steps = route.legs[0].steps;\n            for (var i = 0, step; step = steps[i]; i++) {\n              step.step_number = i;\n              var polyline_options = {\n                path: step.path,\n                strokeColor: options.strokeColor,\n                strokeOpacity: options.strokeOpacity,\n                strokeWeight: options.strokeWeight\n              };\n\n              if (options.hasOwnProperty(\"icons\")) {\n                polyline_options.icons = options.icons;\n              }\n\n              self.drawPolyline(polyline_options);\n              options.step(step, (route.legs[0].steps.length - 1));\n            }\n          }\n        }\n\n        //end callback\n        if (e.length > 0 && options.end) {\n           options.end(e[e.length - 1]);\n        }\n      }\n    });\n  }\n  else if (options.route) {\n    if (options.route.legs.length > 0) {\n      var steps = options.route.legs[0].steps;\n      for (var i = 0, step; step = steps[i]; i++) {\n        step.step_number = i;\n        var polyline_options = {\n          path: step.path,\n          strokeColor: options.strokeColor,\n          strokeOpacity: options.strokeOpacity,\n          strokeWeight: options.strokeWeight\n        };\n\n        if (options.hasOwnProperty(\"icons\")) {\n          polyline_options.icons = options.icons;\n        }\n\n        self.drawPolyline(polyline_options);\n        options.step(step);\n      }\n    }\n  }\n};\n\nGMaps.Route = function(options) {\n  this.origin = options.origin;\n  this.destination = options.destination;\n  this.waypoints = options.waypoints;\n\n  this.map = options.map;\n  this.route = options.route;\n  this.step_count = 0;\n  this.steps = this.route.legs[0].steps;\n  this.steps_length = this.steps.length;\n\n  var polyline_options = {\n    path: new google.maps.MVCArray(),\n    strokeColor: options.strokeColor,\n    strokeOpacity: options.strokeOpacity,\n    strokeWeight: options.strokeWeight\n  };\n\n  if (options.hasOwnProperty(\"icons\")) {\n    polyline_options.icons = options.icons;\n  }\n\n  this.polyline = this.map.drawPolyline(polyline_options).getPath();\n};\n\nGMaps.Route.prototype.getRoute = function(options) {\n  var self = this;\n\n  this.map.getRoutes({\n    origin : this.origin,\n    destination : this.destination,\n    travelMode : options.travelMode,\n    waypoints : this.waypoints || [],\n    error: options.error,\n    callback : function() {\n      self.route = e[0];\n\n      if (options.callback) {\n        options.callback.call(self);\n      }\n    }\n  });\n};\n\nGMaps.Route.prototype.back = function() {\n  if (this.step_count > 0) {\n    this.step_count--;\n    var path = this.route.legs[0].steps[this.step_count].path;\n\n    for (var p in path){\n      if (path.hasOwnProperty(p)){\n        this.polyline.pop();\n      }\n    }\n  }\n};\n\nGMaps.Route.prototype.forward = function() {\n  if (this.step_count < this.steps_length) {\n    var path = this.route.legs[0].steps[this.step_count].path;\n\n    for (var p in path){\n      if (path.hasOwnProperty(p)){\n        this.polyline.push(path[p]);\n      }\n    }\n    this.step_count++;\n  }\n};\n\nGMaps.prototype.checkGeofence = function(lat, lng, fence) {\n  return fence.containsLatLng(new google.maps.LatLng(lat, lng));\n};\n\nGMaps.prototype.checkMarkerGeofence = function(marker, outside_callback) {\n  if (marker.fences) {\n    for (var i = 0, fence; fence = marker.fences[i]; i++) {\n      var pos = marker.getPosition();\n      if (!this.checkGeofence(pos.lat(), pos.lng(), fence)) {\n        outside_callback(marker, fence);\n      }\n    }\n  }\n};\n\nGMaps.prototype.toImage = function(options) {\n  var options = options || {},\n      static_map_options = {};\n\n  static_map_options['size'] = options['size'] || [this.el.clientWidth, this.el.clientHeight];\n  static_map_options['lat'] = this.getCenter().lat();\n  static_map_options['lng'] = this.getCenter().lng();\n\n  if (this.markers.length > 0) {\n    static_map_options['markers'] = [];\n\n    for (var i = 0; i < this.markers.length; i++) {\n      static_map_options['markers'].push({\n        lat: this.markers[i].getPosition().lat(),\n        lng: this.markers[i].getPosition().lng()\n      });\n    }\n  }\n\n  if (this.polylines.length > 0) {\n    var polyline = this.polylines[0];\n\n    static_map_options['polyline'] = {};\n    static_map_options['polyline']['path'] = google.maps.geometry.encoding.encodePath(polyline.getPath());\n    static_map_options['polyline']['strokeColor'] = polyline.strokeColor\n    static_map_options['polyline']['strokeOpacity'] = polyline.strokeOpacity\n    static_map_options['polyline']['strokeWeight'] = polyline.strokeWeight\n  }\n\n  return GMaps.staticMapURL(static_map_options);\n};\n\nGMaps.staticMapURL = function(options){\n  var parameters = [],\n      data,\n      static_root = (location.protocol === 'file:' ? 'http:' : location.protocol ) + '//maps.googleapis.com/maps/api/staticmap';\n\n  if (options.url) {\n    static_root = options.url;\n    delete options.url;\n  }\n\n  static_root += '?';\n\n  var markers = options.markers;\n\n  delete options.markers;\n\n  if (!markers && options.marker) {\n    markers = [options.marker];\n    delete options.marker;\n  }\n\n  var styles = options.styles;\n\n  delete options.styles;\n\n  var polyline = options.polyline;\n  delete options.polyline;\n\n  /** Map options **/\n  if (options.center) {\n    parameters.push('center=' + options.center);\n    delete options.center;\n  }\n  else if (options.address) {\n    parameters.push('center=' + options.address);\n    delete options.address;\n  }\n  else if (options.lat) {\n    parameters.push(['center=', options.lat, ',', options.lng].join(''));\n    delete options.lat;\n    delete options.lng;\n  }\n  else if (options.visible) {\n    var visible = encodeURI(options.visible.join('|'));\n    parameters.push('visible=' + visible);\n  }\n\n  var size = options.size;\n  if (size) {\n    if (size.join) {\n      size = size.join('x');\n    }\n    delete options.size;\n  }\n  else {\n    size = '630x300';\n  }\n  parameters.push('size=' + size);\n\n  if (!options.zoom && options.zoom !== false) {\n    options.zoom = 15;\n  }\n\n  var sensor = options.hasOwnProperty('sensor') ? !!options.sensor : true;\n  delete options.sensor;\n  parameters.push('sensor=' + sensor);\n\n  for (var param in options) {\n    if (options.hasOwnProperty(param)) {\n      parameters.push(param + '=' + options[param]);\n    }\n  }\n\n  /** Markers **/\n  if (markers) {\n    var marker, loc;\n\n    for (var i = 0; data = markers[i]; i++) {\n      marker = [];\n\n      if (data.size && data.size !== 'normal') {\n        marker.push('size:' + data.size);\n        delete data.size;\n      }\n      else if (data.icon) {\n        marker.push('icon:' + encodeURI(data.icon));\n        delete data.icon;\n      }\n\n      if (data.color) {\n        marker.push('color:' + data.color.replace('#', '0x'));\n        delete data.color;\n      }\n\n      if (data.label) {\n        marker.push('label:' + data.label[0].toUpperCase());\n        delete data.label;\n      }\n\n      loc = (data.address ? data.address : data.lat + ',' + data.lng);\n      delete data.address;\n      delete data.lat;\n      delete data.lng;\n\n      for(var param in data){\n        if (data.hasOwnProperty(param)) {\n          marker.push(param + ':' + data[param]);\n        }\n      }\n\n      if (marker.length || i === 0) {\n        marker.push(loc);\n        marker = marker.join('|');\n        parameters.push('markers=' + encodeURI(marker));\n      }\n      // New marker without styles\n      else {\n        marker = parameters.pop() + encodeURI('|' + loc);\n        parameters.push(marker);\n      }\n    }\n  }\n\n  /** Map Styles **/\n  if (styles) {\n    for (var i = 0; i < styles.length; i++) {\n      var styleRule = [];\n      if (styles[i].featureType){\n        styleRule.push('feature:' + styles[i].featureType.toLowerCase());\n      }\n\n      if (styles[i].elementType) {\n        styleRule.push('element:' + styles[i].elementType.toLowerCase());\n      }\n\n      for (var j = 0; j < styles[i].stylers.length; j++) {\n        for (var p in styles[i].stylers[j]) {\n          var ruleArg = styles[i].stylers[j][p];\n          if (p == 'hue' || p == 'color') {\n            ruleArg = '0x' + ruleArg.substring(1);\n          }\n          styleRule.push(p + ':' + ruleArg);\n        }\n      }\n\n      var rule = styleRule.join('|');\n      if (rule != '') {\n        parameters.push('style=' + rule);\n      }\n    }\n  }\n\n  /** Polylines **/\n  function parseColor(color, opacity) {\n    if (color[0] === '#'){\n      color = color.replace('#', '0x');\n\n      if (opacity) {\n        opacity = parseFloat(opacity);\n        opacity = Math.min(1, Math.max(opacity, 0));\n        if (opacity === 0) {\n          return '0x00000000';\n        }\n        opacity = (opacity * 255).toString(16);\n        if (opacity.length === 1) {\n          opacity += opacity;\n        }\n\n        color = color.slice(0,8) + opacity;\n      }\n    }\n    return color;\n  }\n\n  if (polyline) {\n    data = polyline;\n    polyline = [];\n\n    if (data.strokeWeight) {\n      polyline.push('weight:' + parseInt(data.strokeWeight, 10));\n    }\n\n    if (data.strokeColor) {\n      var color = parseColor(data.strokeColor, data.strokeOpacity);\n      polyline.push('color:' + color);\n    }\n\n    if (data.fillColor) {\n      var fillcolor = parseColor(data.fillColor, data.fillOpacity);\n      polyline.push('fillcolor:' + fillcolor);\n    }\n\n    var path = data.path;\n    if (path.join) {\n      for (var j=0, pos; pos=path[j]; j++) {\n        polyline.push(pos.join(','));\n      }\n    }\n    else {\n      polyline.push('enc:' + path);\n    }\n\n    polyline = polyline.join('|');\n    parameters.push('path=' + encodeURI(polyline));\n  }\n\n  /** Retina support **/\n  var dpi = window.devicePixelRatio || 1;\n  parameters.push('scale=' + dpi);\n\n  parameters = parameters.join('&');\n  return static_root + parameters;\n};\n\nGMaps.prototype.addMapType = function(mapTypeId, options) {\n  if (options.hasOwnProperty(\"getTileUrl\") && typeof(options[\"getTileUrl\"]) == \"function\") {\n    options.tileSize = options.tileSize || new google.maps.Size(256, 256);\n\n    var mapType = new google.maps.ImageMapType(options);\n\n    this.map.mapTypes.set(mapTypeId, mapType);\n  }\n  else {\n    throw \"'getTileUrl' function required.\";\n  }\n};\n\nGMaps.prototype.addOverlayMapType = function(options) {\n  if (options.hasOwnProperty(\"getTile\") && typeof(options[\"getTile\"]) == \"function\") {\n    var overlayMapTypeIndex = options.index;\n\n    delete options.index;\n\n    this.map.overlayMapTypes.insertAt(overlayMapTypeIndex, options);\n  }\n  else {\n    throw \"'getTile' function required.\";\n  }\n};\n\nGMaps.prototype.removeOverlayMapType = function(overlayMapTypeIndex) {\n  this.map.overlayMapTypes.removeAt(overlayMapTypeIndex);\n};\n\nGMaps.prototype.addStyle = function(options) {\n  var styledMapType = new google.maps.StyledMapType(options.styles, { name: options.styledMapName });\n\n  this.map.mapTypes.set(options.mapTypeId, styledMapType);\n};\n\nGMaps.prototype.setStyle = function(mapTypeId) {\n  this.map.setMapTypeId(mapTypeId);\n};\n\nGMaps.prototype.createPanorama = function(streetview_options) {\n  if (!streetview_options.hasOwnProperty('lat') || !streetview_options.hasOwnProperty('lng')) {\n    streetview_options.lat = this.getCenter().lat();\n    streetview_options.lng = this.getCenter().lng();\n  }\n\n  this.panorama = GMaps.createPanorama(streetview_options);\n\n  this.map.setStreetView(this.panorama);\n\n  return this.panorama;\n};\n\nGMaps.createPanorama = function(options) {\n  var el = getElementById(options.el, options.context);\n\n  options.position = new google.maps.LatLng(options.lat, options.lng);\n\n  delete options.el;\n  delete options.context;\n  delete options.lat;\n  delete options.lng;\n\n  var streetview_events = ['closeclick', 'links_changed', 'pano_changed', 'position_changed', 'pov_changed', 'resize', 'visible_changed'],\n      streetview_options = extend_object({visible : true}, options);\n\n  for (var i = 0; i < streetview_events.length; i++) {\n    delete streetview_options[streetview_events[i]];\n  }\n\n  var panorama = new google.maps.StreetViewPanorama(el, streetview_options);\n\n  for (var i = 0; i < streetview_events.length; i++) {\n    (function(object, name) {\n      if (options[name]) {\n        google.maps.event.addListener(object, name, function(){\n          options[name].apply(this);\n        });\n      }\n    })(panorama, streetview_events[i]);\n  }\n\n  return panorama;\n};\n\nGMaps.prototype.on = function(event_name, handler) {\n  return GMaps.on(event_name, this, handler);\n};\n\nGMaps.prototype.off = function(event_name) {\n  GMaps.off(event_name, this);\n};\n\nGMaps.prototype.once = function(event_name, handler) {\n  return GMaps.once(event_name, this, handler);\n};\n\nGMaps.custom_events = ['marker_added', 'marker_removed', 'polyline_added', 'polyline_removed', 'polygon_added', 'polygon_removed', 'geolocated', 'geolocation_failed'];\n\nGMaps.on = function(event_name, object, handler) {\n  if (GMaps.custom_events.indexOf(event_name) == -1) {\n    if(object instanceof GMaps) object = object.map;\n    return google.maps.event.addListener(object, event_name, handler);\n  }\n  else {\n    var registered_event = {\n      handler : handler,\n      eventName : event_name\n    };\n\n    object.registered_events[event_name] = object.registered_events[event_name] || [];\n    object.registered_events[event_name].push(registered_event);\n\n    return registered_event;\n  }\n};\n\nGMaps.off = function(event_name, object) {\n  if (GMaps.custom_events.indexOf(event_name) == -1) {\n    if(object instanceof GMaps) object = object.map;\n    google.maps.event.clearListeners(object, event_name);\n  }\n  else {\n    object.registered_events[event_name] = [];\n  }\n};\n\nGMaps.once = function(event_name, object, handler) {\n  if (GMaps.custom_events.indexOf(event_name) == -1) {\n    if(object instanceof GMaps) object = object.map;\n    return google.maps.event.addListenerOnce(object, event_name, handler);\n  }\n};\n\nGMaps.fire = function(event_name, object, scope) {\n  if (GMaps.custom_events.indexOf(event_name) == -1) {\n    google.maps.event.trigger(object, event_name, Array.prototype.slice.apply(arguments).slice(2));\n  }\n  else {\n    if(event_name in scope.registered_events) {\n      var firing_events = scope.registered_events[event_name];\n\n      for(var i = 0; i < firing_events.length; i++) {\n        (function(handler, scope, object) {\n          handler.apply(scope, [object]);\n        })(firing_events[i]['handler'], scope, object);\n      }\n    }\n  }\n};\n\nGMaps.geolocate = function(options) {\n  var complete_callback = options.always || options.complete;\n\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      options.success(position);\n\n      if (complete_callback) {\n        complete_callback();\n      }\n    }, function(error) {\n      options.error(error);\n\n      if (complete_callback) {\n        complete_callback();\n      }\n    }, options.options);\n  }\n  else {\n    options.not_supported();\n\n    if (complete_callback) {\n      complete_callback();\n    }\n  }\n};\n\nGMaps.geocode = function(options) {\n  this.geocoder = new google.maps.Geocoder();\n  var callback = options.callback;\n  if (options.hasOwnProperty('lat') && options.hasOwnProperty('lng')) {\n    options.latLng = new google.maps.LatLng(options.lat, options.lng);\n  }\n\n  delete options.lat;\n  delete options.lng;\n  delete options.callback;\n\n  this.geocoder.geocode(options, function(results, status) {\n    callback(results, status);\n  });\n};\n\nif (typeof window.google === 'object' && window.google.maps) {\n  //==========================\n  // Polygon containsLatLng\n  // https://github.com/tparkin/Google-Maps-Point-in-Polygon\n  // Poygon getBounds extension - google-maps-extensions\n  // http://code.google.com/p/google-maps-extensions/source/browse/google.maps.Polygon.getBounds.js\n  if (!google.maps.Polygon.prototype.getBounds) {\n    google.maps.Polygon.prototype.getBounds = function(latLng) {\n      var bounds = new google.maps.LatLngBounds();\n      var paths = this.getPaths();\n      var path;\n\n      for (var p = 0; p < paths.getLength(); p++) {\n        path = paths.getAt(p);\n        for (var i = 0; i < path.getLength(); i++) {\n          bounds.extend(path.getAt(i));\n        }\n      }\n\n      return bounds;\n    };\n  }\n\n  if (!google.maps.Polygon.prototype.containsLatLng) {\n    // Polygon containsLatLng - method to determine if a latLng is within a polygon\n    google.maps.Polygon.prototype.containsLatLng = function(latLng) {\n      // Exclude points outside of bounds as there is no way they are in the poly\n      var bounds = this.getBounds();\n\n      if (bounds !== null && !bounds.contains(latLng)) {\n        return false;\n      }\n\n      // Raycast point in polygon method\n      var inPoly = false;\n\n      var numPaths = this.getPaths().getLength();\n      for (var p = 0; p < numPaths; p++) {\n        var path = this.getPaths().getAt(p);\n        var numPoints = path.getLength();\n        var j = numPoints - 1;\n\n        for (var i = 0; i < numPoints; i++) {\n          var vertex1 = path.getAt(i);\n          var vertex2 = path.getAt(j);\n\n          if (vertex1.lng() < latLng.lng() && vertex2.lng() >= latLng.lng() || vertex2.lng() < latLng.lng() && vertex1.lng() >= latLng.lng()) {\n            if (vertex1.lat() + (latLng.lng() - vertex1.lng()) / (vertex2.lng() - vertex1.lng()) * (vertex2.lat() - vertex1.lat()) < latLng.lat()) {\n              inPoly = !inPoly;\n            }\n          }\n\n          j = i;\n        }\n      }\n\n      return inPoly;\n    };\n  }\n\n  if (!google.maps.Circle.prototype.containsLatLng) {\n    google.maps.Circle.prototype.containsLatLng = function(latLng) {\n      if (google.maps.geometry) {\n        return google.maps.geometry.spherical.computeDistanceBetween(this.getCenter(), latLng) <= this.getRadius();\n      }\n      else {\n        return true;\n      }\n    };\n  }\n\n  google.maps.Rectangle.prototype.containsLatLng = function(latLng) {\n    return this.getBounds().contains(latLng);\n  };\n\n  google.maps.LatLngBounds.prototype.containsLatLng = function(latLng) {\n    return this.contains(latLng);\n  };\n\n  google.maps.Marker.prototype.setFences = function(fences) {\n    this.fences = fences;\n  };\n\n  google.maps.Marker.prototype.addFence = function(fence) {\n    this.fences.push(fence);\n  };\n\n  google.maps.Marker.prototype.getId = function() {\n    return this['__gm_id'];\n  };\n}\n\n//==========================\n// Array indexOf\n// https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Array/indexOf\nif (!Array.prototype.indexOf) {\n  Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      \"use strict\";\n      if (this == null) {\n          throw new TypeError();\n      }\n      var t = Object(this);\n      var len = t.length >>> 0;\n      if (len === 0) {\n          return -1;\n      }\n      var n = 0;\n      if (arguments.length > 1) {\n          n = Number(arguments[1]);\n          if (n != n) { // shortcut for verifying if it's NaN\n              n = 0;\n          } else if (n != 0 && n != Infinity && n != -Infinity) {\n              n = (n > 0 || -1) * Math.floor(Math.abs(n));\n          }\n      }\n      if (n >= len) {\n          return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n          if (k in t && t[k] === searchElement) {\n              return k;\n          }\n      }\n      return -1;\n  }\n}\n\nreturn GMaps;\n}));\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}