{"version":3,"sources":["build/node_modules/browser-pack/_prelude.js","build/vendors/gritter/build/vendors/gritter/gritter.js"],"names":[],"mappings":"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","file":"gritter.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * Gritter for jQuery\n * http://www.boedesign.com/\n *\n * Copyright (c) 2012 Jordan Boesch\n * Dual licensed under the MIT and GPL licenses.\n *\n * Date: February 24, 2012\n * Version: 1.7.4\n */\n\n(function($){\n\n\t/**\n\t* Set it up as an object under the jQuery namespace\n\t*/\n\t$.gritter = {};\n\n\t/**\n\t* Set up global options that the user can over-ride\n\t*/\n\t$.gritter.options = {\n\t\tposition: '',\n\t\tclass_name: '', // could be set to 'gritter-light' to use white notifications\n\t\tfade_in_speed: 'medium', // how fast notifications fade in\n\t\tfade_out_speed: 1000, // how fast the notices fade out\n\t\ttime: 6000 // hang on the screen for...\n\t}\n\n\t/**\n\t* Add a gritter notification to the screen\n\t* @see Gritter#add();\n\t*/\n\t$.gritter.add = function(params){\n\n\t\ttry {\n\t\t\treturn Gritter.add(params || {});\n\t\t} catch(e) {\n\n\t\t\tvar err = 'Gritter Error: ' + e;\n\t\t\t(typeof(console) != 'undefined' && console.error) ?\n\t\t\t\tconsole.error(err, params) :\n\t\t\t\talert(err);\n\n\t\t}\n\n\t}\n\n\t/**\n\t* Remove a gritter notification from the screen\n\t* @see Gritter#removeSpecific();\n\t*/\n\t$.gritter.remove = function(id, params){\n\t\tGritter.removeSpecific(id, params || {});\n\t}\n\n\t/**\n\t* Remove all notifications\n\t* @see Gritter#stop();\n\t*/\n\t$.gritter.removeAll = function(params){\n\t\tGritter.stop(params || {});\n\t}\n\n\t/**\n\t* Big fat Gritter object\n\t* @constructor (not really since its object literal)\n\t*/\n\tvar Gritter = {\n\n\t\t// Public - options to over-ride with $.gritter.options in \"add\"\n\t\tposition: '',\n\t\tfade_in_speed: '',\n\t\tfade_out_speed: '',\n\t\ttime: '',\n\n\t\t// Private - no touchy the private parts\n\t\t_custom_timer: 0,\n\t\t_item_count: 0,\n\t\t_is_setup: 0,\n\t\t_tpl_close: '<a class=\"gritter-close\" href=\"#\" tabindex=\"1\"><i class=\"pe pe-close\"></i></a>',\n\t\t_tpl_title: '<span class=\"gritter-title\">[[title]]</span>',\n\t\t_tpl_item: '<div id=\"gritter-item-[[number]]\" class=\"gritter-item-wrapper\" style=\"display:none\" role=\"alert\"><div class=\"gritter-item [[item_class]]\">[[close]][[image]]<div class=\"[[class_name]]\">[[title]]<p>[[text]]</p></div><div style=\"clear:both\"></div></div></div>',\n\t\t_tpl_wrap: '<div id=\"gritter-notice-wrapper\"></div>',\n\n\t\t/**\n\t\t* Add a gritter notification to the screen\n\t\t* @param {Object} params The object that contains all the options for drawing the notification\n\t\t* @return {Integer} The specific numeric id to that gritter notification\n\t\t*/\n\t\tadd: function(params){\n\t\t\t// Handle straight text\n\t\t\tif(typeof(params) == 'string'){\n\t\t\t\tparams = {text:params};\n\t\t\t}\n\n\t\t\t// We might have some issues if we don't have a title or text!\n\t\t\tif(params.text === null){\n\t\t\t\tthrow 'You must supply \"text\" parameter.';\n\t\t\t}\n\n\t\t\t// Check the options and set them once\n\t\t\tif(!this._is_setup){\n\t\t\t\tthis._runSetup();\n\t\t\t}\n\n\t\t\t// Basics\n\t\t\tvar title = params.title,\n\t\t\t\ttext = params.text,\n\t\t\t\timage = params.image || '',\n\t\t\t\tsticky = params.sticky || false,\n\t\t\t\titem_class = params.class_name || $.gritter.options.class_name,\n\t\t\t\tposition = $.gritter.options.position,\n\t\t\t\ttime_alive = params.time || '';\n\n\t\t\tthis._verifyWrapper();\n\n\t\t\tthis._item_count++;\n\t\t\tvar number = this._item_count,\n\t\t\t\ttmp = this._tpl_item;\n\n\t\t\t// Assign callbacks\n\t\t\t$(['before_open', 'after_open', 'before_close', 'after_close']).each(function(i, val){\n\t\t\t\tGritter['_' + val + '_' + number] = ($.isFunction(params[val])) ? params[val] : function(){}\n\t\t\t});\n\n\t\t\t// Reset\n\t\t\tthis._custom_timer = 0;\n\n\t\t\t// A custom fade time set\n\t\t\tif(time_alive){\n\t\t\t\tthis._custom_timer = time_alive;\n\t\t\t}\n\n\t\t\tvar image_str = (image != '') ? '<div class=\"gritter-image-wrapper\"><img src=\"' + image + '\" class=\"gritter-image\" /></div>' : '',\n\t\t\t\tclass_name = (image != '') ? 'gritter-with-image' : 'gritter-without-image';\n\n\t\t\t// String replacements on the template\n\t\t\tif(title){\n\t\t\t\ttitle = this._str_replace('[[title]]',title,this._tpl_title);\n\t\t\t}else{\n\t\t\t\ttitle = '';\n\t\t\t}\n\n\t\t\ttmp = this._str_replace(\n\t\t\t\t['[[title]]', '[[text]]', '[[close]]', '[[image]]', '[[number]]', '[[class_name]]', '[[item_class]]'],\n\t\t\t\t[title, text, this._tpl_close, image_str, this._item_count, class_name, item_class], tmp\n\t\t\t);\n\n\t\t\t// If it's false, don't show another gritter message\n\t\t\tif(this['_before_open_' + number]() === false){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t$('#gritter-notice-wrapper').addClass(position).append(tmp);\n\n\t\t\tvar item = $('#gritter-item-' + this._item_count);\n\n\t\t\titem.fadeIn(this.fade_in_speed, function(){\n\t\t\t\tGritter['_after_open_' + number]($(this));\n\t\t\t});\n\n\t\t\tif(!sticky){\n\t\t\t\tthis._setFadeTimer(item, number);\n\t\t\t}\n\n\t\t\t// Bind the hover/unhover states\n\t\t\t$(item).bind('mouseenter mouseleave', function(event){\n\t\t\t\tif(event.type == 'mouseenter'){\n\t\t\t\t\tif(!sticky){\n\t\t\t\t\t\tGritter._restoreItemIfFading($(this), number);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif(!sticky){\n\t\t\t\t\t\tGritter._setFadeTimer($(this), number);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tGritter._hoverState($(this), event.type);\n\t\t\t});\n\n\t\t\t// Clicking (X) makes the perdy thing close\n\t\t\t$(item).find('.gritter-close').click(function(){\n\t\t\t\tGritter.removeSpecific(number, {}, null, true);\n\t\t\t\treturn false;\n\t\t\t});\n\n\t\t\treturn number;\n\n\t\t},\n\n\t\t/**\n\t\t* If we don't have any more gritter notifications, get rid of the wrapper using this check\n\t\t* @private\n\t\t* @param {Integer} unique_id The ID of the element that was just deleted, use it for a callback\n\t\t* @param {Object} e The jQuery element that we're going to perform the remove() action on\n\t\t* @param {Boolean} manual_close Did we close the gritter dialog with the (X) button\n\t\t*/\n\t\t_countRemoveWrapper: function(unique_id, e, manual_close){\n\n\t\t\t// Remove it then run the callback function\n\t\t\te.remove();\n\t\t\tthis['_after_close_' + unique_id](e, manual_close);\n\n\t\t\t// Check if the wrapper is empty, if it is.. remove the wrapper\n\t\t\tif($('.gritter-item-wrapper').length == 0){\n\t\t\t\t$('#gritter-notice-wrapper').remove();\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t* Fade out an element after it's been on the screen for x amount of time\n\t\t* @private\n\t\t* @param {Object} e The jQuery element to get rid of\n\t\t* @param {Integer} unique_id The id of the element to remove\n\t\t* @param {Object} params An optional list of params to set fade speeds etc.\n\t\t* @param {Boolean} unbind_events Unbind the mouseenter/mouseleave events if they click (X)\n\t\t*/\n\t\t_fade: function(e, unique_id, params, unbind_events){\n\n\t\t\tvar params = params || {},\n\t\t\t\tfade = (typeof(params.fade) != 'undefined') ? params.fade : true,\n\t\t\t\tfade_out_speed = params.speed || this.fade_out_speed,\n\t\t\t\tmanual_close = unbind_events;\n\n\t\t\tthis['_before_close_' + unique_id](e, manual_close);\n\n\t\t\t// If this is true, then we are coming from clicking the (X)\n\t\t\tif(unbind_events){\n\t\t\t\te.unbind('mouseenter mouseleave');\n\t\t\t}\n\n\t\t\t// Fade it out or remove it\n\t\t\tif(fade){\n\n\t\t\t\te.animate({\n\t\t\t\t\topacity: 0\n\t\t\t\t}, fade_out_speed, function(){\n\t\t\t\t\te.animate({ height: 0 }, 300, function(){\n\t\t\t\t\t\tGritter._countRemoveWrapper(unique_id, e, manual_close);\n\t\t\t\t\t})\n\t\t\t\t})\n\n\t\t\t}\n\t\t\telse {\n\n\t\t\t\tthis._countRemoveWrapper(unique_id, e);\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t* Perform actions based on the type of bind (mouseenter, mouseleave)\n\t\t* @private\n\t\t* @param {Object} e The jQuery element\n\t\t* @param {String} type The type of action we're performing: mouseenter or mouseleave\n\t\t*/\n\t\t_hoverState: function(e, type){\n\n\t\t\t// Change the border styles and add the (X) close button when you hover\n\t\t\tif(type == 'mouseenter'){\n\n\t\t\t\te.addClass('hover');\n\n\t\t\t\t// Show close button\n\t\t\t\t// e.find('.gritter-close').show();\n\n\t\t\t}\n\t\t\t// Remove the border styles and hide (X) close button when you mouse out\n\t\t\telse {\n\n\t\t\t\te.removeClass('hover');\n\n\t\t\t\t// Hide close button\n\t\t\t\t// e.find('.gritter-close').hide();\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t* Remove a specific notification based on an ID\n\t\t* @param {Integer} unique_id The ID used to delete a specific notification\n\t\t* @param {Object} params A set of options passed in to determine how to get rid of it\n\t\t* @param {Object} e The jQuery element that we're \"fading\" then removing\n\t\t* @param {Boolean} unbind_events If we clicked on the (X) we set this to true to unbind mouseenter/mouseleave\n\t\t*/\n\t\tremoveSpecific: function(unique_id, params, e, unbind_events){\n\n\t\t\tif(!e){\n\t\t\t\tvar e = $('#gritter-item-' + unique_id);\n\t\t\t}\n\n\t\t\t// We set the fourth param to let the _fade function know to\n\t\t\t// unbind the \"mouseleave\" event.  Once you click (X) there's no going back!\n\t\t\tthis._fade(e, unique_id, params || {}, unbind_events);\n\n\t\t},\n\n\t\t/**\n\t\t* If the item is fading out and we hover over it, restore it!\n\t\t* @private\n\t\t* @param {Object} e The HTML element to remove\n\t\t* @param {Integer} unique_id The ID of the element\n\t\t*/\n\t\t_restoreItemIfFading: function(e, unique_id){\n\n\t\t\tclearTimeout(this['_int_id_' + unique_id]);\n\t\t\te.stop().css({ opacity: '', height: '' });\n\n\t\t},\n\n\t\t/**\n\t\t* Setup the global options - only once\n\t\t* @private\n\t\t*/\n\t\t_runSetup: function(){\n\t\t\tfor (var opt in $.gritter.options) { \n\t\t\t\tthis[opt] = $.gritter.options[opt];\n\t\t\t}\n\t\t\tthis._is_setup = 1;\n\n\t\t},\n\n\t\t/**\n\t\t* Set the notification to fade out after a certain amount of time\n\t\t* @private\n\t\t* @param {Object} item The HTML element we're dealing with\n\t\t* @param {Integer} unique_id The ID of the element\n\t\t*/\n\t\t_setFadeTimer: function(e, unique_id){\n\n\t\t\tvar timer_str = (this._custom_timer) ? this._custom_timer : this.time;\n\t\t\tthis['_int_id_' + unique_id] = setTimeout(function(){\n\t\t\t\tGritter._fade(e, unique_id);\n\t\t\t}, timer_str);\n\n\t\t},\n\n\t\t/**\n\t\t* Bring everything to a halt\n\t\t* @param {Object} params A list of callback functions to pass when all notifications are removed\n\t\t*/\n\t\tstop: function(params){\n\n\t\t\t// callbacks (if passed)\n\t\t\tvar before_close = ($.isFunction(params.before_close)) ? params.before_close : function(){};\n\t\t\tvar after_close = ($.isFunction(params.after_close)) ? params.after_close : function(){};\n\n\t\t\tvar wrap = $('#gritter-notice-wrapper');\n\t\t\tbefore_close(wrap);\n\t\t\twrap.fadeOut(function(){\n\t\t\t\t$(this).remove();\n\t\t\t\tafter_close();\n\t\t\t});\n\n\t\t},\n\n\t\t/**\n\t\t* An extremely handy PHP function ported to JS, works well for templating\n\t\t* @private\n\t\t* @param {String/Array} search A list of things to search for\n\t\t* @param {String/Array} replace A list of things to replace the searches with\n\t\t* @return {String} sa The output\n\t\t*/\n\t\t_str_replace: function(search, replace, subject, count){\n\n\t\t\tvar i = 0, j = 0, temp = '', repl = '', sl = 0, fl = 0,\n\t\t\t\tf = [].concat(search),\n\t\t\t\tr = [].concat(replace),\n\t\t\t\ts = subject,\n\t\t\t\tra = r instanceof Array, sa = s instanceof Array;\n\t\t\ts = [].concat(s);\n\n\t\t\tif(count){\n\t\t\t\tthis.window[count] = 0;\n\t\t\t}\n\n\t\t\tfor(i = 0, sl = s.length; i < sl; i++){\n\n\t\t\t\tif(s[i] === ''){\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (j = 0, fl = f.length; j < fl; j++){\n\n\t\t\t\t\ttemp = s[i] + '';\n\t\t\t\t\trepl = ra ? (r[j] !== undefined ? r[j] : '') : r[0];\n\t\t\t\t\ts[i] = (temp).split(f[j]).join(repl);\n\n\t\t\t\t\tif(count && s[i] !== temp){\n\t\t\t\t\t\tthis.window[count] += (temp.length-s[i].length) / f[j].length;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn sa ? s : s[0];\n\n\t\t},\n\n\t\t/**\n\t\t* A check to make sure we have something to wrap our notices with\n\t\t* @private\n\t\t*/\n\t\t_verifyWrapper: function(){\n\n\t\t\tif($('#gritter-notice-wrapper').length == 0){\n\t\t\t\t$('body').append(this._tpl_wrap);\n\t\t\t}\n\n\t\t}\n\n\t}\n\n})(jQuery);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}