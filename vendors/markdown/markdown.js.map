{"version":3,"sources":["build/node_modules/browser-pack/_prelude.js","build/vendors/markdown/build/vendors/markdown/markdown.js"],"names":[],"mappings":"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","file":"markdown.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* ===================================================\n * bootstrap-markdown.js v2.10.0\n * http://github.com/toopay/bootstrap-markdown\n * ===================================================\n * Copyright 2013-2016 Taufan Aditya\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ========================================================== */\n(function(factory) {\n  factory(window.$);\n}(function($) {\n  \"use strict\";\n\n  /* MARKDOWN CLASS DEFINITION\n   * ========================== */\n\n  var Markdown = function(element, options) {\n    // @TODO : remove this BC on next major release\n    // @see : https://github.com/toopay/bootstrap-markdown/issues/109\n    var opts = ['autofocus', 'savable', 'hideable', 'width',\n      'height', 'resize', 'iconlibrary', 'language',\n      'footer', 'fullscreen', 'hiddenButtons', 'disabledButtons'\n    ];\n    $.each(opts, function(_, opt) {\n      if (typeof $(element).data(opt) !== 'undefined') {\n        options = typeof options == 'object' ? options : {};\n        options[opt] = $(element).data(opt);\n      }\n    });\n    // End BC\n\n    // Class Properties\n    this.$ns = 'bootstrap-markdown';\n    this.$element = $(element);\n    this.$editable = {\n      el: null,\n      type: null,\n      attrKeys: [],\n      attrValues: [],\n      content: null\n    };\n    this.$options = $.extend(true, {}, $.fn.markdown.defaults, options, this.$element.data('options'));\n    this.$oldContent = null;\n    this.$isPreview = false;\n    this.$isFullscreen = false;\n    this.$editor = null;\n    this.$textarea = null;\n    this.$handler = [];\n    this.$callback = [];\n    this.$nextTab = [];\n\n    this.showEditor();\n  };\n\n  Markdown.prototype = {\n\n    constructor: Markdown,\n    __alterButtons: function(name, alter) {\n      var handler = this.$handler,\n        isAll = (name == 'all'),\n        that = this;\n\n      $.each(handler, function(k, v) {\n        var halt = true;\n        if (isAll) {\n          halt = false;\n        } else {\n          halt = v.indexOf(name) < 0;\n        }\n\n        if (halt === false) {\n          alter(that.$editor.find('button[data-handler=\"' + v + '\"]'));\n        }\n      });\n    },\n    __buildButtons: function(buttonsArray, container) {\n      var i,\n        ns = this.$ns,\n        handler = this.$handler,\n        callback = this.$callback;\n\n      for (i = 0; i < buttonsArray.length; i++) {\n        // Build each group container\n        var y, btnGroups = buttonsArray[i];\n        for (y = 0; y < btnGroups.length; y++) {\n          // Build each button group\n          var z,\n            buttons = btnGroups[y].data,\n            btnGroupContainer = $('<div/>', {\n              'class': 'btn-group'\n            });\n\n          for (z = 0; z < buttons.length; z++) {\n            var button = buttons[z],\n              buttonContainer, buttonIconContainer,\n              buttonHandler = ns + '-' + button.name,\n              buttonIcon = this.__getIcon(button),\n              btnText = button.btnText ? button.btnText : '',\n              btnClass = button.btnClass ? button.btnClass : 'btn',\n              tabIndex = button.tabIndex ? button.tabIndex : '-1',\n              hotkey = typeof button.hotkey !== 'undefined' ? button.hotkey : '',\n              hotkeyCaption = typeof jQuery.hotkeys !== 'undefined' && hotkey !== '' ? ' (' + hotkey + ')' : '';\n\n            // Construct the button object\n            buttonContainer = $('<button></button>');\n            buttonContainer.text(' ' + this.__localize(btnText)).addClass('-dark').addClass(btnClass);\n            if (btnClass.match(/btn\\-(primary|success|info|warning|danger|link)/)) {\n              buttonContainer.removeClass('btn-default');\n            }\n            buttonContainer.attr({\n              'type': 'button',\n              'title': this.__localize(button.title) + hotkeyCaption,\n              'tabindex': tabIndex,\n              'data-provider': ns,\n              'data-handler': buttonHandler,\n              'data-hotkey': hotkey\n            });\n            if (button.toggle === true) {\n              buttonContainer.attr('data-toggle', 'button');\n            }\n            buttonIconContainer = $('<span/>');\n            buttonIconContainer.addClass(buttonIcon);\n            buttonIconContainer.prependTo(buttonContainer);\n\n            // Attach the button object\n            btnGroupContainer.append(buttonContainer);\n\n            // Register handler and callback\n            handler.push(buttonHandler);\n            callback.push(button.callback);\n          }\n\n          // Attach the button group into container dom\n          container.append(btnGroupContainer);\n        }\n      }\n\n      return container;\n    },\n    __setListener: function() {\n      // Set size and resizable Properties\n      var hasRows = typeof this.$textarea.attr('rows') !== 'undefined',\n        maxRows = this.$textarea.val().split(\"\\n\").length > 5 ? this.$textarea.val().split(\"\\n\").length : '5',\n        rowsVal = hasRows ? this.$textarea.attr('rows') : maxRows;\n\n      this.$textarea.attr('rows', rowsVal);\n      if (this.$options.resize) {\n        this.$textarea.css('resize', this.$options.resize);\n      }\n\n      this.$textarea.on({\n        'focus': $.proxy(this.focus, this),\n        'keyup': $.proxy(this.keyup, this),\n        'change': $.proxy(this.change, this),\n        'select': $.proxy(this.select, this)\n      });\n\n      if (this.eventSupported('keydown')) {\n        this.$textarea.on('keydown', $.proxy(this.keydown, this));\n      }\n\n      if (this.eventSupported('keypress')) {\n        this.$textarea.on('keypress', $.proxy(this.keypress, this));\n      }\n\n      // Re-attach markdown data\n      this.$textarea.data('markdown', this);\n    },\n    __handle: function(e) {\n      var target = $(e.currentTarget),\n        handler = this.$handler,\n        callback = this.$callback,\n        handlerName = target.attr('data-handler'),\n        callbackIndex = handler.indexOf(handlerName),\n        callbackHandler = callback[callbackIndex];\n\n      // Trigger the focusin\n      $(e.currentTarget).focus();\n\n      callbackHandler(this);\n\n      // Trigger onChange for each button handle\n      this.change(this);\n\n      // Unless it was the save handler,\n      // focusin the textarea\n      if (handlerName.indexOf('cmdSave') < 0) {\n        this.$textarea.focus();\n      }\n\n      e.preventDefault();\n    },\n    __localize: function(string) {\n      var messages = $.fn.markdown.messages,\n        language = this.$options.language;\n      if (\n        typeof messages !== 'undefined' &&\n        typeof messages[language] !== 'undefined' &&\n        typeof messages[language][string] !== 'undefined'\n      ) {\n        return messages[language][string];\n      }\n      return string;\n    },\n    __getIcon: function(src) {\n      if(typeof src == 'object'){\n        var customIcon = this.$options.customIcons[src.name];\n        return typeof customIcon == 'undefined' ? src.icon[this.$options.iconlibrary] : customIcon;\n      } else {\n        return src;\n      }\n    },\n    setFullscreen: function(mode) {\n      var $editor = this.$editor,\n        $textarea = this.$textarea;\n\n      if (mode === true) {\n        $editor.addClass('md-fullscreen-mode');\n        $('body').addClass('md-nooverflow');\n        this.$options.onFullscreen(this);\n      } else {\n        $editor.removeClass('md-fullscreen-mode');\n        $('body').removeClass('md-nooverflow');\n        this.$options.onFullscreenExit(this);\n\n        if (this.$isPreview === true)\n          this.hidePreview().showPreview();\n      }\n\n      this.$isFullscreen = mode;\n      $textarea.focus();\n    },\n    showEditor: function() {\n      var instance = this,\n        textarea,\n        ns = this.$ns,\n        container = this.$element,\n        originalHeigth = container.css('height'),\n        originalWidth = container.css('width'),\n        editable = this.$editable,\n        handler = this.$handler,\n        callback = this.$callback,\n        options = this.$options,\n        editor = $('<div/>', {\n          'class': 'md-editor',\n          click: function() {\n            instance.focus();\n          }\n        });\n\n      // Prepare the editor\n      if (this.$editor === null) {\n        // Create the panel\n        var editorHeader = $('<div/>', {\n          'class': 'md-header btn-toolbar'\n        });\n\n        // Merge the main & additional button groups together\n        var allBtnGroups = [];\n        if (options.buttons.length > 0) allBtnGroups = allBtnGroups.concat(options.buttons[0]);\n        if (options.additionalButtons.length > 0) {\n          // iterate the additional button groups\n          $.each(options.additionalButtons[0], function(idx, buttonGroup) {\n\n            // see if the group name of the addional group matches an existing group\n            var matchingGroups = $.grep(allBtnGroups, function(allButtonGroup, allIdx) {\n              return allButtonGroup.name === buttonGroup.name;\n            });\n\n            // if it matches add the addional buttons to that group, if not just add it to the all buttons group\n            if (matchingGroups.length > 0) {\n              matchingGroups[0].data = matchingGroups[0].data.concat(buttonGroup.data);\n            } else {\n              allBtnGroups.push(options.additionalButtons[0][idx]);\n            }\n\n          });\n        }\n\n        // Reduce and/or reorder the button groups\n        if (options.reorderButtonGroups.length > 0) {\n          allBtnGroups = allBtnGroups\n            .filter(function(btnGroup) {\n              return options.reorderButtonGroups.indexOf(btnGroup.name) > -1;\n            })\n            .sort(function(a, b) {\n              if (options.reorderButtonGroups.indexOf(a.name) < options.reorderButtonGroups.indexOf(b.name)) return -1;\n              if (options.reorderButtonGroups.indexOf(a.name) > options.reorderButtonGroups.indexOf(b.name)) return 1;\n              return 0;\n            });\n        }\n\n        // Build the buttons\n        if (allBtnGroups.length > 0) {\n          editorHeader = this.__buildButtons([allBtnGroups], editorHeader);\n        }\n\n        if (options.fullscreen.enable) {\n          editorHeader.append('<div class=\"md-controls\"><a class=\"md-control md-control-fullscreen\" href=\"#\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOn) + '\"></span></a></div>').on('click', '.md-control-fullscreen', function(e) {\n            e.preventDefault();\n            instance.setFullscreen(true);\n          });\n        }\n\n        editor.append(editorHeader);\n\n        // Wrap the textarea\n        if (container.is('textarea')) {\n          container.before(editor);\n          textarea = container;\n          textarea.addClass('md-input');\n          editor.append(textarea);\n        } else {\n          var rawContent = (typeof toMarkdown == 'function') ? toMarkdown(container.html()) : container.html(),\n            currentContent = $.trim(rawContent);\n\n          // This is some arbitrary content that could be edited\n          textarea = $('<textarea/>', {\n            'class': 'md-input',\n            'val': currentContent\n          });\n\n          editor.append(textarea);\n\n          // Save the editable\n          editable.el = container;\n          editable.type = container.prop('tagName').toLowerCase();\n          editable.content = container.html();\n\n          $(container[0].attributes).each(function() {\n            editable.attrKeys.push(this.nodeName);\n            editable.attrValues.push(this.nodeValue);\n          });\n\n          // Set editor to blocked the original container\n          container.replaceWith(editor);\n        }\n\n        var editorFooter = $('<div/>', {\n            'class': 'md-footer'\n          }),\n          createFooter = false,\n          footer = '';\n        // Create the footer if savable\n        if (options.savable) {\n          createFooter = true;\n          var saveHandler = 'cmdSave';\n\n          // Register handler and callback\n          handler.push(saveHandler);\n          callback.push(options.onSave);\n\n          editorFooter.append('<button class=\"btn btn-success\" data-provider=\"' +\n            ns +\n            '\" data-handler=\"' +\n            saveHandler +\n            '\"><i class=\"icon icon-white icon-ok\"></i> ' +\n            this.__localize('Save') +\n            '</button>');\n\n\n        }\n\n        footer = typeof options.footer === 'function' ? options.footer(this) : options.footer;\n\n        if ($.trim(footer) !== '') {\n          createFooter = true;\n          editorFooter.append(footer);\n        }\n\n        if (createFooter) editor.append(editorFooter);\n\n        // Set width\n        if (options.width && options.width !== 'inherit') {\n          if (jQuery.isNumeric(options.width)) {\n            editor.css('display', 'table');\n            textarea.css('width', options.width + 'px');\n          } else {\n            editor.addClass(options.width);\n          }\n        }\n\n        // Set height\n        if (options.height && options.height !== 'inherit') {\n          if (jQuery.isNumeric(options.height)) {\n            var height = options.height;\n            if (editorHeader) height = Math.max(0, height - editorHeader.outerHeight());\n            if (editorFooter) height = Math.max(0, height - editorFooter.outerHeight());\n            textarea.css('height', height + 'px');\n          } else {\n            editor.addClass(options.height);\n          }\n        }\n\n        // Reference\n        this.$editor = editor;\n        this.$textarea = textarea;\n        this.$editable = editable;\n        this.$oldContent = this.getContent();\n\n        this.__setListener();\n\n        // Set editor attributes, data short-hand API and listener\n        this.$editor.attr('id', (new Date()).getTime());\n        this.$editor.on('click', '[data-provider=\"bootstrap-markdown\"]', $.proxy(this.__handle, this));\n\n        if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\n          this.$editor.addClass('md-editor-disabled');\n          this.disableButtons('all');\n        }\n\n        if (this.eventSupported('keydown') && typeof jQuery.hotkeys === 'object') {\n          editorHeader.find('[data-provider=\"bootstrap-markdown\"]').each(function() {\n            var $button = $(this),\n              hotkey = $button.attr('data-hotkey');\n            if (hotkey.toLowerCase() !== '') {\n              textarea.bind('keydown', hotkey, function() {\n                $button.trigger('click');\n                return false;\n              });\n            }\n          });\n        }\n\n        if (options.initialstate === 'preview') {\n          this.showPreview();\n        } else if (options.initialstate === 'fullscreen' && options.fullscreen.enable) {\n          this.setFullscreen(true);\n        }\n\n      } else {\n        this.$editor.show();\n      }\n\n      if (options.autofocus) {\n        this.$textarea.focus();\n        this.$editor.addClass('active');\n      }\n\n      if (options.fullscreen.enable && options.fullscreen !== false) {\n        this.$editor.append('<div class=\"md-fullscreen-controls\">' +\n          '<a href=\"#\" class=\"exit-fullscreen\" title=\"Exit fullscreen\"><span class=\"' + this.__getIcon(options.fullscreen.icons.fullscreenOff) + '\">' +\n          '</span></a>' +\n          '</div>');\n        this.$editor.on('click', '.exit-fullscreen', function(e) {\n          e.preventDefault();\n          instance.setFullscreen(false);\n        });\n      }\n\n      // hide hidden buttons from options\n      this.hideButtons(options.hiddenButtons);\n\n      // disable disabled buttons from options\n      this.disableButtons(options.disabledButtons);\n\n      // enable dropZone if available and configured\n      if (options.dropZoneOptions) {\n        if (this.$editor.dropzone) {\n          if(!options.dropZoneOptions.init) {\n            options.dropZoneOptions.init = function() {\n              var caretPos = 0;\n              this.on('drop', function(e) {\n                  caretPos = textarea.prop('selectionStart');\n                  });\n              this.on('success', function(file, path) {\n                  var text = textarea.val();\n                  textarea.val(text.substring(0, caretPos) + '\\n![description](' + path + ')\\n' + text.substring(caretPos));\n                  });\n              this.on('error', function(file, error, xhr) {\n                  console.log('Error:', error);\n                  });\n            };\n          }\n          this.$textarea.addClass('dropzone');\n          this.$editor.dropzone(options.dropZoneOptions);\n        } else {\n          console.log('dropZoneOptions was configured, but DropZone was not detected.');\n        }\n      }\n\n      // enable data-uris via drag and drop\n      if (options.enableDropDataUri === true) {\n        this.$editor.on('drop', function(e) {\n          var caretPos = textarea.prop('selectionStart');\n          e.stopPropagation();\n          e.preventDefault();\n          $.each(e.originalEvent.dataTransfer.files, function(index, file){\n            var fileReader = new FileReader();\n              fileReader.onload = (function(file) {\n                 return function(e) {\n                    var text = textarea.val();\n                    textarea.val(text.substring(0, caretPos) + '\\n<img src=\"'+ e.target.result  +'\" />\\n' + text.substring(caretPos) );\n                 };\n              })(file);\n            fileReader.readAsDataURL(file);\n          });\n        });\n      }\n\n      // Trigger the onShow hook\n      options.onShow(this);\n\n      return this;\n    },\n    parseContent: function(val) {\n      var content;\n\n      // parse with supported markdown parser\n      val = val || this.$textarea.val();\n\n      if (this.$options.parser) {\n        content = this.$options.parser(val);\n      } else if (typeof markdown == 'object') {\n        content = markdown.toHTML(val);\n      } else if (typeof marked == 'function') {\n        content = marked(val);\n      } else {\n        content = val;\n      }\n\n      return content;\n    },\n    showPreview: function() {\n      var options = this.$options,\n        container = this.$textarea,\n        afterContainer = container.next(),\n        replacementContainer = $('<div/>', {\n          'class': 'md-preview',\n          'data-provider': 'markdown-preview'\n        }),\n        content,\n        callbackContent;\n\n      if (this.$isPreview === true) {\n        // Avoid sequenced element creation on missused scenario\n        // @see https://github.com/toopay/bootstrap-markdown/issues/170\n        return this;\n      }\n\n      // Give flag that tell the editor enter preview mode\n      this.$isPreview = true;\n      // Disable all buttons\n      this.disableButtons('all').enableButtons('cmdPreview');\n\n      // Try to get the content from callback\n      callbackContent = options.onPreview(this);\n      // Set the content based from the callback content if string otherwise parse value from textarea\n      content = typeof callbackContent == 'string' ? callbackContent : this.parseContent();\n\n      // Build preview element\n      replacementContainer.html(content);\n\n      if (afterContainer && afterContainer.attr('class') == 'md-footer') {\n        // If there is footer element, insert the preview container before it\n        replacementContainer.insertBefore(afterContainer);\n      } else {\n        // Otherwise, just append it after textarea\n        container.parent().append(replacementContainer);\n      }\n\n      // Set the preview element dimensions\n      replacementContainer.css({\n        \"width\": container.outerWidth() + 'px',\n        \"min-height\": container.outerHeight() + 'px',\n        \"height\": \"auto\"\n      });\n\n      if (this.$options.resize) {\n        replacementContainer.css('resize', this.$options.resize);\n      }\n\n      // Hide the last-active textarea\n      container.hide();\n\n      // Attach the editor instances\n      replacementContainer.data('markdown', this);\n\n      if (this.$element.is(':disabled') || this.$element.is('[readonly]')) {\n        this.$editor.addClass('md-editor-disabled');\n        this.disableButtons('all');\n      }\n\n      return this;\n    },\n    hidePreview: function() {\n      // Give flag that tell the editor quit preview mode\n      this.$isPreview = false;\n\n      // Obtain the preview container\n      var container = this.$editor.find('div[data-provider=\"markdown-preview\"]');\n\n      // Remove the preview container\n      container.remove();\n\n      // Enable all buttons\n      this.enableButtons('all');\n      // Disable configured disabled buttons\n      this.disableButtons(this.$options.disabledButtons);\n\n      // Perform any callback\n      this.$options.onPreviewEnd(this);\n\n      // Back to the editor\n      this.$textarea.show();\n      this.__setListener();\n\n      return this;\n    },\n    isDirty: function() {\n      return this.$oldContent != this.getContent();\n    },\n    getContent: function() {\n      return this.$textarea.val();\n    },\n    setContent: function(content) {\n      this.$textarea.val(content);\n\n      return this;\n    },\n    findSelection: function(chunk) {\n      var content = this.getContent(),\n        startChunkPosition;\n\n      if (startChunkPosition = content.indexOf(chunk), startChunkPosition >= 0 && chunk.length > 0) {\n        var oldSelection = this.getSelection(),\n          selection;\n\n        this.setSelection(startChunkPosition, startChunkPosition + chunk.length);\n        selection = this.getSelection();\n\n        this.setSelection(oldSelection.start, oldSelection.end);\n\n        return selection;\n      } else {\n        return null;\n      }\n    },\n    getSelection: function() {\n\n      var e = this.$textarea[0];\n\n      return (\n\n        ('selectionStart' in e && function() {\n          var l = e.selectionEnd - e.selectionStart;\n          return {\n            start: e.selectionStart,\n            end: e.selectionEnd,\n            length: l,\n            text: e.value.substr(e.selectionStart, l)\n          };\n        }) ||\n\n        /* browser not supported */\n        function() {\n          return null;\n        }\n\n      )();\n\n    },\n    setSelection: function(start, end) {\n\n      var e = this.$textarea[0];\n\n      return (\n\n        ('selectionStart' in e && function() {\n          e.selectionStart = start;\n          e.selectionEnd = end;\n          return;\n        }) ||\n\n        /* browser not supported */\n        function() {\n          return null;\n        }\n\n      )();\n\n    },\n    replaceSelection: function(text) {\n\n      var e = this.$textarea[0];\n\n      return (\n\n        ('selectionStart' in e && function() {\n          e.value = e.value.substr(0, e.selectionStart) + text + e.value.substr(e.selectionEnd, e.value.length);\n          // Set cursor to the last replacement end\n          e.selectionStart = e.value.length;\n          return this;\n        }) ||\n\n        /* browser not supported */\n        function() {\n          e.value += text;\n          return jQuery(e);\n        }\n\n      )();\n    },\n    getNextTab: function() {\n      // Shift the nextTab\n      if (this.$nextTab.length === 0) {\n        return null;\n      } else {\n        var nextTab, tab = this.$nextTab.shift();\n\n        if (typeof tab == 'function') {\n          nextTab = tab();\n        } else if (typeof tab == 'object' && tab.length > 0) {\n          nextTab = tab;\n        }\n\n        return nextTab;\n      }\n    },\n    setNextTab: function(start, end) {\n      // Push new selection into nextTab collections\n      if (typeof start == 'string') {\n        var that = this;\n        this.$nextTab.push(function() {\n          return that.findSelection(start);\n        });\n      } else if (typeof start == 'number' && typeof end == 'number') {\n        var oldSelection = this.getSelection();\n\n        this.setSelection(start, end);\n        this.$nextTab.push(this.getSelection());\n\n        this.setSelection(oldSelection.start, oldSelection.end);\n      }\n\n      return;\n    },\n    __parseButtonNameParam: function(names) {\n      return typeof names == 'string' ?\n        names.split(' ') :\n        names;\n\n    },\n    enableButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.removeAttr('disabled');\n        });\n      });\n\n      return this;\n    },\n    disableButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.attr('disabled', 'disabled');\n        });\n      });\n\n      return this;\n    },\n    hideButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.addClass('hidden');\n        });\n      });\n\n      return this;\n    },\n    showButtons: function(name) {\n      var buttons = this.__parseButtonNameParam(name),\n        that = this;\n\n      $.each(buttons, function(i, v) {\n        that.__alterButtons(buttons[i], function(el) {\n          el.removeClass('hidden');\n        });\n      });\n\n      return this;\n    },\n    eventSupported: function(eventName) {\n      var isSupported = eventName in this.$element;\n      if (!isSupported) {\n        this.$element.setAttribute(eventName, 'return;');\n        isSupported = typeof this.$element[eventName] === 'function';\n      }\n      return isSupported;\n    },\n    keyup: function(e) {\n      var blocked = false;\n      switch (e.keyCode) {\n        case 40: // down arrow\n        case 38: // up arrow\n        case 16: // shift\n        case 17: // ctrl\n        case 18: // alt\n          break;\n\n        case 9: // tab\n          var nextTab;\n          if (nextTab = this.getNextTab(), nextTab !== null) {\n            // Get the nextTab if exists\n            var that = this;\n            setTimeout(function() {\n              that.setSelection(nextTab.start, nextTab.end);\n            }, 500);\n\n            blocked = true;\n          } else {\n            // The next tab memory contains nothing...\n            // check the cursor position to determine tab action\n            var cursor = this.getSelection();\n\n            if (cursor.start == cursor.end && cursor.end == this.getContent().length) {\n              // The cursor already reach the end of the content\n              blocked = false;\n            } else {\n              // Put the cursor to the end\n              this.setSelection(this.getContent().length, this.getContent().length);\n\n              blocked = true;\n            }\n          }\n\n          break;\n\n        case 13: // enter\n          blocked = false;\n          break;\n        case 27: // escape\n          if (this.$isFullscreen) this.setFullscreen(false);\n          blocked = false;\n          break;\n\n        default:\n          blocked = false;\n      }\n\n      if (blocked) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      this.$options.onChange(this);\n    },\n    change: function(e) {\n      this.$options.onChange(this);\n      return this;\n    },\n    select: function(e) {\n      this.$options.onSelect(this);\n      return this;\n    },\n    focus: function(e) {\n      var options = this.$options,\n        isHideable = options.hideable,\n        editor = this.$editor;\n\n      editor.addClass('active');\n\n      // Blur other markdown(s)\n      $(document).find('.md-editor').each(function() {\n        if ($(this).attr('id') !== editor.attr('id')) {\n          var attachedMarkdown;\n\n          if (attachedMarkdown = $(this).find('textarea').data('markdown'),\n            attachedMarkdown === null) {\n            attachedMarkdown = $(this).find('div[data-provider=\"markdown-preview\"]').data('markdown');\n          }\n\n          if (attachedMarkdown) {\n            attachedMarkdown.blur();\n          }\n        }\n      });\n\n      // Trigger the onFocus hook\n      options.onFocus(this);\n\n      return this;\n    },\n    blur: function(e) {\n      var options = this.$options,\n        isHideable = options.hideable,\n        editor = this.$editor,\n        editable = this.$editable;\n\n      if (editor.hasClass('active') || this.$element.parent().length === 0) {\n        editor.removeClass('active');\n\n        if (isHideable) {\n          // Check for editable elements\n          if (editable.el !== null) {\n            // Build the original element\n            var oldElement = $('<' + editable.type + '/>'),\n              content = this.getContent(),\n              currentContent = this.parseContent(content);\n\n            $(editable.attrKeys).each(function(k, v) {\n              oldElement.attr(editable.attrKeys[k], editable.attrValues[k]);\n            });\n\n            // Get the editor content\n            oldElement.html(currentContent);\n\n            editor.replaceWith(oldElement);\n          } else {\n            editor.hide();\n          }\n        }\n\n        // Trigger the onBlur hook\n        options.onBlur(this);\n      }\n\n      return this;\n    }\n\n  };\n\n  /* MARKDOWN PLUGIN DEFINITION\n   * ========================== */\n\n  var old = $.fn.markdown;\n\n  $.fn.markdown = function(option) {\n    return this.each(function() {\n      var $this = $(this),\n        data = $this.data('markdown'),\n        options = typeof option == 'object' && option;\n      if (!data)\n        $this.data('markdown', (data = new Markdown(this, options)));\n    });\n  };\n\n  $.fn.markdown.messages = {};\n\n  $.fn.markdown.defaults = {\n    /* Editor Properties */\n    autofocus: false,\n    hideable: false,\n    savable: false,\n    width: 'inherit',\n    height: 'inherit',\n    resize: 'none',\n    iconlibrary: 'fa',\n    language: 'en',\n    initialstate: 'editor',\n    parser: null,\n    dropZoneOptions: null,\n    enableDropDataUri: false,\n\n    /* Buttons Properties */\n    buttons: [\n      [{\n        name: 'groupFont',\n        data: [{\n          name: 'cmdBold',\n          hotkey: 'Ctrl+B',\n          title: 'Bold',\n          icon: {\n            glyph: 'glyphicon glyphicon-bold',\n            fa: 'fa fa-bold',\n            'fa-3': 'icon-bold',\n            octicons: 'octicon octicon-bold'\n          },\n          callback: function(e) {\n            // Give/remove ** surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('strong text');\n            } else {\n              chunk = selected.text;\n            }\n\n            // transform selection and set the cursor into chunked text\n            if (content.substr(selected.start - 2, 2) === '**' &&\n              content.substr(selected.end, 2) === '**') {\n              e.setSelection(selected.start - 2, selected.end + 2);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 2;\n            } else {\n              e.replaceSelection('**' + chunk + '**');\n              cursor = selected.start + 2;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdItalic',\n          title: 'Italic',\n          hotkey: 'Ctrl+I',\n          icon: {\n            glyph: 'glyphicon glyphicon-italic',\n            fa: 'fa fa-italic',\n            'fa-3': 'icon-italic',\n            octicons: 'octicon octicon-italic'\n          },\n          callback: function(e) {\n            // Give/remove * surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('emphasized text');\n            } else {\n              chunk = selected.text;\n            }\n\n            // transform selection and set the cursor into chunked text\n            if (content.substr(selected.start - 1, 1) === '_' &&\n              content.substr(selected.end, 1) === '_') {\n              e.setSelection(selected.start - 1, selected.end + 1);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 1;\n            } else {\n              e.replaceSelection('_' + chunk + '_');\n              cursor = selected.start + 1;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdHeading',\n          title: 'Heading',\n          hotkey: 'Ctrl+H',\n          icon: {\n            glyph: 'glyphicon glyphicon-header',\n            fa: 'fa fa-header',\n            'fa-3': 'icon-font',\n            octicons: 'octicon octicon-text-size'\n          },\n          callback: function(e) {\n            // Append/remove ### surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent(),\n              pointer, prevChar;\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('heading text');\n            } else {\n              chunk = selected.text + '\\n';\n            }\n\n            // transform selection and set the cursor into chunked text\n            if ((pointer = 4, content.substr(selected.start - pointer, pointer) === '### ') ||\n              (pointer = 3, content.substr(selected.start - pointer, pointer) === '###')) {\n              e.setSelection(selected.start - pointer, selected.end);\n              e.replaceSelection(chunk);\n              cursor = selected.start - pointer;\n            } else if (selected.start > 0 && (prevChar = content.substr(selected.start - 1, 1), !!prevChar && prevChar != '\\n')) {\n              e.replaceSelection('\\n\\n### ' + chunk);\n              cursor = selected.start + 6;\n            } else {\n              // Empty string before element\n              e.replaceSelection('### ' + chunk);\n              cursor = selected.start + 4;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }]\n      }, {\n        name: 'groupLink',\n        data: [{\n          name: 'cmdUrl',\n          title: 'URL/Link',\n          hotkey: 'Ctrl+L',\n          icon: {\n            glyph: 'glyphicon glyphicon-link',\n            fa: 'fa fa-link',\n            'fa-3': 'icon-link',\n            octicons: 'octicon octicon-link'\n          },\n          callback: function(e) {\n            // Give [] surround the selection and prepend the link\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent(),\n              link;\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('enter link description here');\n            } else {\n              chunk = selected.text;\n            }\n\n            link = prompt(e.__localize('Insert Hyperlink'), 'http://');\n\n            var urlRegex = new RegExp('^((http|https)://|(mailto:)|(//))[a-z0-9]', 'i');\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\n              var sanitizedLink = $('<div>' + link + '</div>').text();\n\n              // transform selection and set the cursor into chunked text\n              e.replaceSelection('[' + chunk + '](' + sanitizedLink + ')');\n              cursor = selected.start + 1;\n\n              // Set the cursor\n              e.setSelection(cursor, cursor + chunk.length);\n            }\n          }\n        }, {\n          name: 'cmdImage',\n          title: 'Image',\n          hotkey: 'Ctrl+G',\n          icon: {\n            glyph: 'glyphicon glyphicon-picture',\n            fa: 'fa fa-picture-o',\n            'fa-3': 'icon-picture',\n            octicons: 'octicon octicon-file-media'\n          },\n          callback: function(e) {\n            // Give ![] surround the selection and prepend the image link\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent(),\n              link;\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('enter image description here');\n            } else {\n              chunk = selected.text;\n            }\n\n            link = prompt(e.__localize('Insert Image Hyperlink'), 'http://');\n\n            var urlRegex = new RegExp('^((http|https)://|(//))[a-z0-9]', 'i');\n            if (link !== null && link !== '' && link !== 'http://' && urlRegex.test(link)) {\n              var sanitizedLink = $('<div>' + link + '</div>').text();\n\n              // transform selection and set the cursor into chunked text\n              e.replaceSelection('![' + chunk + '](' + sanitizedLink + ' \"' + e.__localize('enter image title here') + '\")');\n              cursor = selected.start + 2;\n\n              // Set the next tab\n              e.setNextTab(e.__localize('enter image title here'));\n\n              // Set the cursor\n              e.setSelection(cursor, cursor + chunk.length);\n            }\n          }\n        }]\n      }, {\n        name: 'groupMisc',\n        data: [{\n          name: 'cmdList',\n          hotkey: 'Ctrl+U',\n          title: 'Unordered List',\n          icon: {\n            glyph: 'glyphicon glyphicon-list',\n            fa: 'fa fa-list',\n            'fa-3': 'icon-list-ul',\n            octicons: 'octicon octicon-list-unordered'\n          },\n          callback: function(e) {\n            // Prepend/Give - surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            // transform selection and set the cursor into chunked text\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('list text here');\n\n              e.replaceSelection('- ' + chunk);\n              // Set the cursor\n              cursor = selected.start + 2;\n            } else {\n              if (selected.text.indexOf('\\n') < 0) {\n                chunk = selected.text;\n\n                e.replaceSelection('- ' + chunk);\n\n                // Set the cursor\n                cursor = selected.start + 2;\n              } else {\n                var list = [];\n\n                list = selected.text.split('\\n');\n                chunk = list[0];\n\n                $.each(list, function(k, v) {\n                  list[k] = '- ' + v;\n                });\n\n                e.replaceSelection('\\n\\n' + list.join('\\n'));\n\n                // Set the cursor\n                cursor = selected.start + 4;\n              }\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdListO',\n          hotkey: 'Ctrl+O',\n          title: 'Ordered List',\n          icon: {\n            glyph: 'glyphicon glyphicon-th-list',\n            fa: 'fa fa-list-ol',\n            'fa-3': 'icon-list-ol',\n            octicons: 'octicon octicon-list-ordered'\n          },\n          callback: function(e) {\n\n            // Prepend/Give - surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            // transform selection and set the cursor into chunked text\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('list text here');\n              e.replaceSelection('1. ' + chunk);\n              // Set the cursor\n              cursor = selected.start + 3;\n            } else {\n              if (selected.text.indexOf('\\n') < 0) {\n                chunk = selected.text;\n\n                e.replaceSelection('1. ' + chunk);\n\n                // Set the cursor\n                cursor = selected.start + 3;\n              } else {\n                var i = 1;\n                var list = [];\n\n                list = selected.text.split('\\n');\n                chunk = list[0];\n\n                $.each(list, function(k, v) {\n                  list[k] = i + '. ' + v;\n                  i++;\n                });\n\n                e.replaceSelection('\\n\\n' + list.join('\\n'));\n\n                // Set the cursor\n                cursor = selected.start + 5;\n              }\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdCode',\n          hotkey: 'Ctrl+K',\n          title: 'Code',\n          icon: {\n            glyph: 'glyphicon glyphicon-console',\n            fa: 'fa fa-code',\n            'fa-3': 'icon-code',\n            octicons: 'octicon octicon-code'\n          },\n          callback: function(e) {\n            // Give/remove ** surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('code text here');\n            } else {\n              chunk = selected.text;\n            }\n\n            // transform selection and set the cursor into chunked text\n            if (content.substr(selected.start - 4, 4) === '```\\n' &&\n              content.substr(selected.end, 4) === '\\n```') {\n              e.setSelection(selected.start - 4, selected.end + 4);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 4;\n            } else if (content.substr(selected.start - 1, 1) === '`' &&\n              content.substr(selected.end, 1) === '`') {\n              e.setSelection(selected.start - 1, selected.end + 1);\n              e.replaceSelection(chunk);\n              cursor = selected.start - 1;\n            } else if (content.indexOf('\\n') > -1) {\n              e.replaceSelection('```\\n' + chunk + '\\n```');\n              cursor = selected.start + 4;\n            } else {\n              e.replaceSelection('`' + chunk + '`');\n              cursor = selected.start + 1;\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }, {\n          name: 'cmdQuote',\n          hotkey: 'Ctrl+Q',\n          title: 'Quote',\n          icon: {\n            glyph: 'glyphicon glyphicon-comment',\n            fa: 'fa fa-quote-left',\n            'fa-3': 'icon-quote-left',\n            octicons: 'octicon octicon-quote'\n          },\n          callback: function(e) {\n            // Prepend/Give - surround the selection\n            var chunk, cursor, selected = e.getSelection(),\n              content = e.getContent();\n\n            // transform selection and set the cursor into chunked text\n            if (selected.length === 0) {\n              // Give extra word\n              chunk = e.__localize('quote here');\n\n              e.replaceSelection('> ' + chunk);\n\n              // Set the cursor\n              cursor = selected.start + 2;\n            } else {\n              if (selected.text.indexOf('\\n') < 0) {\n                chunk = selected.text;\n\n                e.replaceSelection('> ' + chunk);\n\n                // Set the cursor\n                cursor = selected.start + 2;\n              } else {\n                var list = [];\n\n                list = selected.text.split('\\n');\n                chunk = list[0];\n\n                $.each(list, function(k, v) {\n                  list[k] = '> ' + v;\n                });\n\n                e.replaceSelection('\\n\\n' + list.join('\\n'));\n\n                // Set the cursor\n                cursor = selected.start + 4;\n              }\n            }\n\n            // Set the cursor\n            e.setSelection(cursor, cursor + chunk.length);\n          }\n        }]\n      }, {\n        name: 'groupUtil',\n        data: [{\n          name: 'cmdPreview',\n          toggle: true,\n          hotkey: 'Ctrl+P',\n          title: 'Preview',\n          btnText: 'Preview',\n          btnClass: 'btn -dark',\n          icon: {\n            glyph: 'glyphicon glyphicon-search',\n            fa: 'fa fa-search',\n            'fa-3': 'icon-search',\n            octicons: 'octicon octicon-search'\n          },\n          callback: function(e) {\n            // Check the preview mode and toggle based on this flag\n            var isPreview = e.$isPreview,\n              content;\n\n            if (isPreview === false) {\n              // Give flag that tell the editor enter preview mode\n              e.showPreview();\n            } else {\n              e.hidePreview();\n            }\n          }\n        }]\n      }]\n    ],\n    customIcons: {},\n    additionalButtons: [], // Place to hook more buttons by code\n    reorderButtonGroups: [],\n    hiddenButtons: [], // Default hidden buttons\n    disabledButtons: [], // Default disabled buttons\n    footer: '',\n    fullscreen: {\n      enable: true,\n      icons: {\n        fullscreenOn: {\n          name: \"fullscreenOn\",\n          icon: {\n            fa: 'fa fa-expand',\n            glyph: 'glyphicon glyphicon-fullscreen',\n            'fa-3': 'icon-resize-full',\n            octicons: 'octicon octicon-link-external'\n          }\n        },\n        fullscreenOff: {\n          name: \"fullscreenOff\",\n          icon: {\n            fa: 'fa fa-compress',\n            glyph: 'glyphicon glyphicon-fullscreen',\n            'fa-3': 'icon-resize-small',\n            octicons: 'octicon octicon-browser'\n          }\n        }\n      }\n    },\n\n    /* Events hook */\n    onShow: function(e) {},\n    onPreview: function(e) {},\n    onPreviewEnd: function(e) {},\n    onSave: function(e) {},\n    onBlur: function(e) {},\n    onFocus: function(e) {},\n    onChange: function(e) {},\n    onFullscreen: function(e) {},\n    onFullscreenExit: function(e) {},\n    onSelect: function(e) {}\n  };\n\n  $.fn.markdown.Constructor = Markdown;\n\n\n  /* MARKDOWN NO CONFLICT\n   * ==================== */\n\n  $.fn.markdown.noConflict = function() {\n    $.fn.markdown = old;\n    return this;\n  };\n\n  /* MARKDOWN GLOBAL FUNCTION & DATA-API\n   * ==================================== */\n  var initMarkdown = function(el) {\n    var $this = el;\n\n    if ($this.data('markdown')) {\n      $this.data('markdown').showEditor();\n      return;\n    }\n\n    $this.markdown();\n  };\n\n  var blurNonFocused = function(e) {\n    var $activeElement = $(document.activeElement);\n\n    // Blur event\n    $(document).find('.md-editor').each(function() {\n      var $this = $(this),\n        focused = $activeElement.closest('.md-editor')[0] === this,\n        attachedMarkdown = $this.find('textarea').data('markdown') ||\n        $this.find('div[data-provider=\"markdown-preview\"]').data('markdown');\n\n      if (attachedMarkdown && !focused) {\n        attachedMarkdown.blur();\n      }\n    });\n  };\n\n  $(document)\n    .on('click.markdown.data-api', '[data-provide=\"markdown-editable\"]', function(e) {\n      initMarkdown($(this));\n      e.preventDefault();\n    })\n    .on('click focusin', function(e) {\n      blurNonFocused(e);\n    })\n    .ready(function() {\n      $('textarea[data-provide=\"markdown\"]').each(function() {\n        initMarkdown($(this));\n      });\n    });\n\n}));\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}