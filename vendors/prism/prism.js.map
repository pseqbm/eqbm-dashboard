{"version":3,"sources":["build/node_modules/browser-pack/_prelude.js","build/vendors/prism/build/vendors/prism/prism.js"],"names":[],"mappings":"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","file":"prism.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* http://prismjs.com/download.html?themes=prism-okaidia&languages=markup+css+clike+javascript+coffeescript+ruby+json+yaml&plugins=line-highlight+line-numbers+autolinker+show-language+previewer-base+previewer-color+previewer-gradient+previewer-easing+previewer-time */\r\nvar _self = (typeof window !== 'undefined')\r\n\t? window   // if in browser\r\n\t: (\r\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\r\n\t\t? self // if in worker\r\n\t\t: {}   // if in node js\r\n\t);\r\n\r\n/**\r\n * Prism: Lightweight, robust, elegant syntax highlighting\r\n * MIT license http://www.opensource.org/licenses/mit-license.php/\r\n * @author Lea Verou http://lea.verou.me\r\n */\r\n\r\nvar Prism = (function(){\r\n\r\n// Private helper vars\r\nvar lang = /\\blang(?:uage)?-(\\w+)\\b/i;\r\nvar uniqueId = 0;\r\n\r\nvar _ = _self.Prism = {\r\n\tutil: {\r\n\t\tencode: function (tokens) {\r\n\t\t\tif (tokens instanceof Token) {\r\n\t\t\t\treturn new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);\r\n\t\t\t} else if (_.util.type(tokens) === 'Array') {\r\n\t\t\t\treturn tokens.map(_.util.encode);\r\n\t\t\t} else {\r\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttype: function (o) {\r\n\t\t\treturn Object.prototype.toString.call(o).match(/\\[object (\\w+)\\]/)[1];\r\n\t\t},\r\n\r\n\t\tobjId: function (obj) {\r\n\t\t\tif (!obj['__id']) {\r\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\r\n\t\t\t}\r\n\t\t\treturn obj['__id'];\r\n\t\t},\r\n\r\n\t\t// Deep clone a language definition (e.g. to extend it)\r\n\t\tclone: function (o) {\r\n\t\t\tvar type = _.util.type(o);\r\n\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'Object':\r\n\t\t\t\t\tvar clone = {};\r\n\r\n\t\t\t\t\tfor (var key in o) {\r\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\r\n\t\t\t\t\t\t\tclone[key] = _.util.clone(o[key]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn clone;\r\n\r\n\t\t\t\tcase 'Array':\r\n\t\t\t\t\t// Check for existence for IE8\r\n\t\t\t\t\treturn o.map && o.map(function(v) { return _.util.clone(v); });\r\n\t\t\t}\r\n\r\n\t\t\treturn o;\r\n\t\t}\r\n\t},\r\n\r\n\tlanguages: {\r\n\t\textend: function (id, redef) {\r\n\t\t\tvar lang = _.util.clone(_.languages[id]);\r\n\r\n\t\t\tfor (var key in redef) {\r\n\t\t\t\tlang[key] = redef[key];\r\n\t\t\t}\r\n\r\n\t\t\treturn lang;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Insert a token before another token in a language literal\r\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\r\n\t\t * we cannot just provide an object, we need anobject and a key.\r\n\t\t * @param inside The key (or language id) of the parent\r\n\t\t * @param before The key to insert before. If not provided, the function appends instead.\r\n\t\t * @param insert Object with the key/value pairs to insert\r\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\r\n\t\t */\r\n\t\tinsertBefore: function (inside, before, insert, root) {\r\n\t\t\troot = root || _.languages;\r\n\t\t\tvar grammar = root[inside];\r\n\r\n\t\t\tif (arguments.length == 2) {\r\n\t\t\t\tinsert = arguments[1];\r\n\r\n\t\t\t\tfor (var newToken in insert) {\r\n\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\r\n\t\t\t\t\t\tgrammar[newToken] = insert[newToken];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn grammar;\r\n\t\t\t}\r\n\r\n\t\t\tvar ret = {};\r\n\r\n\t\t\tfor (var token in grammar) {\r\n\r\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\r\n\r\n\t\t\t\t\tif (token == before) {\r\n\r\n\t\t\t\t\t\tfor (var newToken in insert) {\r\n\r\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\r\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tret[token] = grammar[token];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Update references in other language definitions\r\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\r\n\t\t\t\tif (value === root[inside] && key != inside) {\r\n\t\t\t\t\tthis[key] = ret;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\treturn root[inside] = ret;\r\n\t\t},\r\n\r\n\t\t// Traverse a language definition with Depth First Search\r\n\t\tDFS: function(o, callback, type, visited) {\r\n\t\t\tvisited = visited || {};\r\n\t\t\tfor (var i in o) {\r\n\t\t\t\tif (o.hasOwnProperty(i)) {\r\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\r\n\r\n\t\t\t\t\tif (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {\r\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\r\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, null, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {\r\n\t\t\t\t\t\tvisited[_.util.objId(o[i])] = true;\r\n\t\t\t\t\t\t_.languages.DFS(o[i], callback, i, visited);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tplugins: {},\r\n\r\n\thighlightAll: function(async, callback) {\r\n\t\tvar env = {\r\n\t\t\tcallback: callback,\r\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\r\n\t\t};\r\n\r\n\t\t_.hooks.run(\"before-highlightall\", env);\r\n\r\n\t\tvar elements = env.elements || document.querySelectorAll(env.selector);\r\n\r\n\t\tfor (var i=0, element; element = elements[i++];) {\r\n\t\t\t_.highlightElement(element, async === true, env.callback);\r\n\t\t}\r\n\t},\r\n\r\n\thighlightElement: function(element, async, callback) {\r\n\t\t// Find language\r\n\t\tvar language, grammar, parent = element;\r\n\r\n\t\twhile (parent && !lang.test(parent.className)) {\r\n\t\t\tparent = parent.parentNode;\r\n\t\t}\r\n\r\n\t\tif (parent) {\r\n\t\t\tlanguage = (parent.className.match(lang) || [,''])[1].toLowerCase();\r\n\t\t\tgrammar = _.languages[language];\r\n\t\t}\r\n\r\n\t\t// Set language on the element, if not present\r\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\r\n\t\t// Set language on the parent, for styling\r\n\t\tparent = element.parentNode;\r\n\r\n\t\tif (/pre/i.test(parent.nodeName)) {\r\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\r\n\t\t}\r\n\r\n\t\tvar code = element.textContent;\r\n\r\n\t\tvar env = {\r\n\t\t\telement: element,\r\n\t\t\tlanguage: language,\r\n\t\t\tgrammar: grammar,\r\n\t\t\tcode: code\r\n\t\t};\r\n\r\n\t\t_.hooks.run('before-sanity-check', env);\r\n\r\n\t\tif (!env.code || !env.grammar) {\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t_.hooks.run('before-highlight', env);\r\n\r\n\t\tif (async && _self.Worker) {\r\n\t\t\tvar worker = new Worker(_.filename);\r\n\r\n\t\t\tworker.onmessage = function(evt) {\r\n\t\t\t\tenv.highlightedCode = evt.data;\r\n\r\n\t\t\t\t_.hooks.run('before-insert', env);\r\n\r\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\r\n\r\n\t\t\t\tcallback && callback.call(env.element);\r\n\t\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t\t_.hooks.run('complete', env);\r\n\t\t\t};\r\n\r\n\t\t\tworker.postMessage(JSON.stringify({\r\n\t\t\t\tlanguage: env.language,\r\n\t\t\t\tcode: env.code,\r\n\t\t\t\timmediateClose: true\r\n\t\t\t}));\r\n\t\t}\r\n\t\telse {\r\n\t\t\tenv.highlightedCode = _.highlight(env.code, env.grammar, env.language);\r\n\r\n\t\t\t_.hooks.run('before-insert', env);\r\n\r\n\t\t\tenv.element.innerHTML = env.highlightedCode;\r\n\r\n\t\t\tcallback && callback.call(element);\r\n\r\n\t\t\t_.hooks.run('after-highlight', env);\r\n\t\t\t_.hooks.run('complete', env);\r\n\t\t}\r\n\t},\r\n\r\n\thighlight: function (text, grammar, language) {\r\n\t\tvar tokens = _.tokenize(text, grammar);\r\n\t\treturn Token.stringify(_.util.encode(tokens), language);\r\n\t},\r\n\r\n\ttokenize: function(text, grammar, language) {\r\n\t\tvar Token = _.Token;\r\n\r\n\t\tvar strarr = [text];\r\n\r\n\t\tvar rest = grammar.rest;\r\n\r\n\t\tif (rest) {\r\n\t\t\tfor (var token in rest) {\r\n\t\t\t\tgrammar[token] = rest[token];\r\n\t\t\t}\r\n\r\n\t\t\tdelete grammar.rest;\r\n\t\t}\r\n\r\n\t\ttokenloop: for (var token in grammar) {\r\n\t\t\tif(!grammar.hasOwnProperty(token) || !grammar[token]) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tvar patterns = grammar[token];\r\n\t\t\tpatterns = (_.util.type(patterns) === \"Array\") ? patterns : [patterns];\r\n\r\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\r\n\t\t\t\tvar pattern = patterns[j],\r\n\t\t\t\t\tinside = pattern.inside,\r\n\t\t\t\t\tlookbehind = !!pattern.lookbehind,\r\n\t\t\t\t\tgreedy = !!pattern.greedy,\r\n\t\t\t\t\tlookbehindLength = 0,\r\n\t\t\t\t\talias = pattern.alias;\r\n\r\n\t\t\t\tif (greedy && !pattern.pattern.global) {\r\n\t\t\t\t\t// Without the global flag, lastIndex won't work\r\n\t\t\t\t\tvar flags = pattern.pattern.toString().match(/[imuy]*$/)[0];\r\n\t\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + \"g\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpattern = pattern.pattern || pattern;\r\n\r\n\t\t\t\t// Don’t cache length as it changes during the loop\r\n\t\t\t\tfor (var i=0, pos = 0; i<strarr.length; pos += (strarr[i].matchedStr || strarr[i]).length, ++i) {\r\n\r\n\t\t\t\t\tvar str = strarr[i];\r\n\r\n\t\t\t\t\tif (strarr.length > text.length) {\r\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\r\n\t\t\t\t\t\tbreak tokenloop;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (str instanceof Token) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpattern.lastIndex = 0;\r\n\r\n\t\t\t\t\tvar match = pattern.exec(str),\r\n\t\t\t\t\t    delNum = 1;\r\n\r\n\t\t\t\t\t// Greedy patterns can override/remove up to two previously matched tokens\r\n\t\t\t\t\tif (!match && greedy && i != strarr.length - 1) {\r\n\t\t\t\t\t\tpattern.lastIndex = pos;\r\n\t\t\t\t\t\tmatch = pattern.exec(text);\r\n\t\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar from = match.index + (lookbehind ? match[1].length : 0),\r\n\t\t\t\t\t\t    to = match.index + match[0].length,\r\n\t\t\t\t\t\t    k = i,\r\n\t\t\t\t\t\t    p = pos;\r\n\r\n\t\t\t\t\t\tfor (var len = strarr.length; k < len && p < to; ++k) {\r\n\t\t\t\t\t\t\tp += (strarr[k].matchedStr || strarr[k]).length;\r\n\t\t\t\t\t\t\t// Move the index i to the element in strarr that is closest to from\r\n\t\t\t\t\t\t\tif (from >= p) {\r\n\t\t\t\t\t\t\t\t++i;\r\n\t\t\t\t\t\t\t\tpos = p;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t/*\r\n\t\t\t\t\t\t * If strarr[i] is a Token, then the match starts inside another Token, which is invalid\r\n\t\t\t\t\t\t * If strarr[k - 1] is greedy we are in conflict with another greedy pattern\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tif (strarr[i] instanceof Token || strarr[k - 1].greedy) {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Number of tokens to delete and replace with the new match\r\n\t\t\t\t\t\tdelNum = k - i;\r\n\t\t\t\t\t\tstr = text.slice(pos, p);\r\n\t\t\t\t\t\tmatch.index -= pos;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (!match) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(lookbehind) {\r\n\t\t\t\t\t\tlookbehindLength = match[1].length;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar from = match.index + lookbehindLength,\r\n\t\t\t\t\t    match = match[0].slice(lookbehindLength),\r\n\t\t\t\t\t    to = from + match.length,\r\n\t\t\t\t\t    before = str.slice(0, from),\r\n\t\t\t\t\t    after = str.slice(to);\r\n\r\n\t\t\t\t\tvar args = [i, delNum];\r\n\r\n\t\t\t\t\tif (before) {\r\n\t\t\t\t\t\targs.push(before);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);\r\n\r\n\t\t\t\t\targs.push(wrapped);\r\n\r\n\t\t\t\t\tif (after) {\r\n\t\t\t\t\t\targs.push(after);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tArray.prototype.splice.apply(strarr, args);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn strarr;\r\n\t},\r\n\r\n\thooks: {\r\n\t\tall: {},\r\n\r\n\t\tadd: function (name, callback) {\r\n\t\t\tvar hooks = _.hooks.all;\r\n\r\n\t\t\thooks[name] = hooks[name] || [];\r\n\r\n\t\t\thooks[name].push(callback);\r\n\t\t},\r\n\r\n\t\trun: function (name, env) {\r\n\t\t\tvar callbacks = _.hooks.all[name];\r\n\r\n\t\t\tif (!callbacks || !callbacks.length) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\r\n\t\t\t\tcallback(env);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar Token = _.Token = function(type, content, alias, matchedStr, greedy) {\r\n\tthis.type = type;\r\n\tthis.content = content;\r\n\tthis.alias = alias;\r\n\t// Copy of the full string this token was created from\r\n\tthis.matchedStr = matchedStr || null;\r\n\tthis.greedy = !!greedy;\r\n};\r\n\r\nToken.stringify = function(o, language, parent) {\r\n\tif (typeof o == 'string') {\r\n\t\treturn o;\r\n\t}\r\n\r\n\tif (_.util.type(o) === 'Array') {\r\n\t\treturn o.map(function(element) {\r\n\t\t\treturn Token.stringify(element, language, o);\r\n\t\t}).join('');\r\n\t}\r\n\r\n\tvar env = {\r\n\t\ttype: o.type,\r\n\t\tcontent: Token.stringify(o.content, language, parent),\r\n\t\ttag: 'span',\r\n\t\tclasses: ['token', o.type],\r\n\t\tattributes: {},\r\n\t\tlanguage: language,\r\n\t\tparent: parent\r\n\t};\r\n\r\n\tif (env.type == 'comment') {\r\n\t\tenv.attributes['spellcheck'] = 'true';\r\n\t}\r\n\r\n\tif (o.alias) {\r\n\t\tvar aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];\r\n\t\tArray.prototype.push.apply(env.classes, aliases);\r\n\t}\r\n\r\n\t_.hooks.run('wrap', env);\r\n\r\n\tvar attributes = '';\r\n\r\n\tfor (var name in env.attributes) {\r\n\t\tattributes += (attributes ? ' ' : '') + name + '=\"' + (env.attributes[name] || '') + '\"';\r\n\t}\r\n\r\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';\r\n\r\n};\r\n\r\nif (!_self.document) {\r\n\tif (!_self.addEventListener) {\r\n\t\t// in Node.js\r\n\t\treturn _self.Prism;\r\n\t}\r\n \t// In worker\r\n\t_self.addEventListener('message', function(evt) {\r\n\t\tvar message = JSON.parse(evt.data),\r\n\t\t    lang = message.language,\r\n\t\t    code = message.code,\r\n\t\t    immediateClose = message.immediateClose;\r\n\r\n\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\r\n\t\tif (immediateClose) {\r\n\t\t\t_self.close();\r\n\t\t}\r\n\t}, false);\r\n\r\n\treturn _self.Prism;\r\n}\r\n\r\n//Get current script and highlight\r\nvar script = document.currentScript || [].slice.call(document.getElementsByTagName(\"script\")).pop();\r\n\r\nif (script) {\r\n\t_.filename = script.src;\r\n\r\n\tif (document.addEventListener && !script.hasAttribute('data-manual')) {\r\n\t\tif(document.readyState !== \"loading\") {\r\n\t\t\tif (window.requestAnimationFrame) {\r\n\t\t\t\twindow.requestAnimationFrame(_.highlightAll);\r\n\t\t\t} else {\r\n\t\t\t\twindow.setTimeout(_.highlightAll, 16);\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdocument.addEventListener('DOMContentLoaded', _.highlightAll);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nreturn _self.Prism;\r\n\r\n})();\r\n\r\nif (typeof module !== 'undefined' && module.exports) {\r\n\tmodule.exports = Prism;\r\n}\r\n\r\n// hack for components to work correctly in node.js\r\nif (typeof global !== 'undefined') {\r\n\tglobal.Prism = Prism;\r\n}\r\n;\r\nPrism.languages.markup = {\r\n\t'comment': /<!--[\\w\\W]*?-->/,\r\n\t'prolog': /<\\?[\\w\\W]+?\\?>/,\r\n\t'doctype': /<!DOCTYPE[\\w\\W]+?>/i,\r\n\t'cdata': /<!\\[CDATA\\[[\\w\\W]*?]]>/i,\r\n\t'tag': {\r\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\\\1|\\\\?(?!\\1)[\\w\\W])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i,\r\n\t\tinside: {\r\n\t\t\t'tag': {\r\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /^<\\/?/,\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'attr-value': {\r\n\t\t\t\tpattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/i,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'punctuation': /[=>\"']/\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'punctuation': /\\/?>/,\r\n\t\t\t'attr-name': {\r\n\t\t\t\tpattern: /[^\\s>\\/]+/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t},\r\n\t'entity': /&#?[\\da-z]{1,8};/i\r\n};\r\n\r\n// Plugin to make entity title show the real entity, idea by Roman Komarov\r\nPrism.hooks.add('wrap', function(env) {\r\n\r\n\tif (env.type === 'entity') {\r\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\r\n\t}\r\n});\r\n\r\nPrism.languages.xml = Prism.languages.markup;\r\nPrism.languages.html = Prism.languages.markup;\r\nPrism.languages.mathml = Prism.languages.markup;\r\nPrism.languages.svg = Prism.languages.markup;\r\n\r\nPrism.languages.css = {\r\n\t'comment': /\\/\\*[\\w\\W]*?\\*\\//,\r\n\t'atrule': {\r\n\t\tpattern: /@[\\w-]+?.*?(;|(?=\\s*\\{))/i,\r\n\t\tinside: {\r\n\t\t\t'rule': /@[\\w-]+/\r\n\t\t\t// See rest below\r\n\t\t}\r\n\t},\r\n\t'url': /url\\((?:([\"'])(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1|.*?)\\)/i,\r\n\t'selector': /[^\\{\\}\\s][^\\{\\};]*?(?=\\s*\\{)/,\r\n\t'string': {\r\n\t\tpattern: /(\"|')(\\\\(?:\\r\\n|[\\w\\W])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'property': /(\\b|\\B)[\\w-]+(?=\\s*:)/i,\r\n\t'important': /\\B!important\\b/i,\r\n\t'function': /[-a-z0-9]+(?=\\()/i,\r\n\t'punctuation': /[(){};:]/\r\n};\r\n\r\nPrism.languages.css['atrule'].inside.rest = Prism.util.clone(Prism.languages.css);\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.insertBefore('markup', 'tag', {\r\n\t\t'style': {\r\n\t\t\tpattern: /(<style[\\w\\W]*?>)[\\w\\W]*?(?=<\\/style>)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.css,\r\n\t\t\talias: 'language-css'\r\n\t\t}\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('inside', 'attr-value', {\r\n\t\t'style-attr': {\r\n\t\t\tpattern: /\\s*style=(\"|').*?\\1/i,\r\n\t\t\tinside: {\r\n\t\t\t\t'attr-name': {\r\n\t\t\t\t\tpattern: /^\\s*style/i,\r\n\t\t\t\t\tinside: Prism.languages.markup.tag.inside\r\n\t\t\t\t},\r\n\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\r\n\t\t\t\t'attr-value': {\r\n\t\t\t\t\tpattern: /.+/i,\r\n\t\t\t\t\tinside: Prism.languages.css\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\talias: 'language-css'\r\n\t\t}\r\n\t}, Prism.languages.markup.tag);\r\n};\r\nPrism.languages.clike = {\r\n\t'comment': [\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\w\\W]*?\\*\\//,\r\n\t\t\tlookbehind: true\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\r\n\t\t\tlookbehind: true\r\n\t\t}\r\n\t],\r\n\t'string': {\r\n\t\tpattern: /([\"'])(\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\r\n\t\tgreedy: true\r\n\t},\r\n\t'class-name': {\r\n\t\tpattern: /((?:\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+)|(?:catch\\s+\\())[a-z0-9_\\.\\\\]+/i,\r\n\t\tlookbehind: true,\r\n\t\tinside: {\r\n\t\t\tpunctuation: /(\\.|\\\\)/\r\n\t\t}\r\n\t},\r\n\t'keyword': /\\b(if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\r\n\t'boolean': /\\b(true|false)\\b/,\r\n\t'function': /[a-z0-9_]+(?=\\()/i,\r\n\t'number': /\\b-?(?:0x[\\da-f]+|\\d*\\.?\\d+(?:e[+-]?\\d+)?)\\b/i,\r\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\r\n\t'punctuation': /[{}[\\];(),.:]/\r\n};\r\n\r\nPrism.languages.javascript = Prism.languages.extend('clike', {\r\n\t'keyword': /\\b(as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\\b/,\r\n\t'number': /\\b-?(0x[\\dA-Fa-f]+|0b[01]+|0o[0-7]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?|NaN|Infinity)\\b/,\r\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\r\n\t'function': /[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*(?=\\()/i,\r\n\t'operator': /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&?|\\|\\|?|\\?|\\*\\*?|\\/|~|\\^|%|\\.{3}/\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'keyword', {\r\n\t'regex': {\r\n\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gimyu]{0,5}(?=\\s*($|[\\r\\n,.;})]))/,\r\n\t\tlookbehind: true,\r\n\t\tgreedy: true\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('javascript', 'string', {\r\n\t'template-string': {\r\n\t\tpattern: /`(?:\\\\\\\\|\\\\?[^\\\\])*?`/,\r\n\t\tgreedy: true,\r\n\t\tinside: {\r\n\t\t\t'interpolation': {\r\n\t\t\t\tpattern: /\\$\\{[^}]+\\}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation-punctuation': {\r\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\r\n\t\t\t\t\t\talias: 'punctuation'\r\n\t\t\t\t\t},\r\n\t\t\t\t\trest: Prism.languages.javascript\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'string': /[\\s\\S]+/\r\n\t\t}\r\n\t}\r\n});\r\n\r\nif (Prism.languages.markup) {\r\n\tPrism.languages.insertBefore('markup', 'tag', {\r\n\t\t'script': {\r\n\t\t\tpattern: /(<script[\\w\\W]*?>)[\\w\\W]*?(?=<\\/script>)/i,\r\n\t\t\tlookbehind: true,\r\n\t\t\tinside: Prism.languages.javascript,\r\n\t\t\talias: 'language-javascript'\r\n\t\t}\r\n\t});\r\n}\r\n\r\nPrism.languages.js = Prism.languages.javascript;\r\n(function(Prism) {\r\n\r\n// Ignore comments starting with { to privilege string interpolation highlighting\r\nvar comment = /#(?!\\{).+/,\r\n    interpolation = {\r\n    \tpattern: /#\\{[^}]+\\}/,\r\n    \talias: 'variable'\r\n    };\r\n\r\nPrism.languages.coffeescript = Prism.languages.extend('javascript', {\r\n\t'comment': comment,\r\n\t'string': [\r\n\r\n\t\t// Strings are multiline\r\n\t\t{\r\n\t\t\tpattern: /'(?:\\\\?[^\\\\])*?'/,\r\n\t\t\tgreedy: true,\r\n\t\t},\r\n\r\n\t\t{\r\n\t\t\t// Strings are multiline\r\n\t\t\tpattern: /\"(?:\\\\?[^\\\\])*?\"/,\r\n\t\t\tgreedy: true,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t}\r\n\t],\r\n\t'keyword': /\\b(and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\r\n\t'class-member': {\r\n\t\tpattern: /@(?!\\d)\\w+/,\r\n\t\talias: 'variable'\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('coffeescript', 'comment', {\r\n\t'multiline-comment': {\r\n\t\tpattern: /###[\\s\\S]+?###/,\r\n\t\talias: 'comment'\r\n\t},\r\n\r\n\t// Block regexp can contain comments and interpolation\r\n\t'block-regex': {\r\n\t\tpattern: /\\/{3}[\\s\\S]*?\\/{3}/,\r\n\t\talias: 'regex',\r\n\t\tinside: {\r\n\t\t\t'comment': comment,\r\n\t\t\t'interpolation': interpolation\r\n\t\t}\r\n\t}\r\n});\r\n\r\nPrism.languages.insertBefore('coffeescript', 'string', {\r\n\t'inline-javascript': {\r\n\t\tpattern: /`(?:\\\\?[\\s\\S])*?`/,\r\n\t\tinside: {\r\n\t\t\t'delimiter': {\r\n\t\t\t\tpattern: /^`|`$/,\r\n\t\t\t\talias: 'punctuation'\r\n\t\t\t},\r\n\t\t\trest: Prism.languages.javascript\r\n\t\t}\r\n\t},\r\n\r\n\t// Block strings\r\n\t'multiline-string': [\r\n\t\t{\r\n\t\t\tpattern: /'''[\\s\\S]*?'''/,\r\n\t\t\tgreedy: true,\r\n\t\t\talias: 'string'\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /\"\"\"[\\s\\S]*?\"\"\"/,\r\n\t\t\tgreedy: true,\r\n\t\t\talias: 'string',\r\n\t\t\tinside: {\r\n\t\t\t\tinterpolation: interpolation\r\n\t\t\t}\r\n\t\t}\r\n\t]\r\n\r\n});\r\n\r\nPrism.languages.insertBefore('coffeescript', 'keyword', {\r\n\t// Object property\r\n\t'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\r\n});\r\n\r\ndelete Prism.languages.coffeescript['template-string'];\r\n\r\n}(Prism));\r\n/**\r\n * Original by Samuel Flores\r\n *\r\n * Adds the following new token classes:\r\n * \t\tconstant, builtin, variable, symbol, regex\r\n */\r\n(function(Prism) {\r\n\tPrism.languages.ruby = Prism.languages.extend('clike', {\r\n\t\t'comment': /#(?!\\{[^\\r\\n]*?\\}).*/,\r\n\t\t'keyword': /\\b(alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\r\n\t});\r\n\r\n\tvar interpolation = {\r\n\t\tpattern: /#\\{[^}]+\\}/,\r\n\t\tinside: {\r\n\t\t\t'delimiter': {\r\n\t\t\t\tpattern: /^#\\{|\\}$/,\r\n\t\t\t\talias: 'tag'\r\n\t\t\t},\r\n\t\t\trest: Prism.util.clone(Prism.languages.ruby)\r\n\t\t}\r\n\t};\r\n\r\n\tPrism.languages.insertBefore('ruby', 'keyword', {\r\n\t\t'regex': [\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1[gim]{0,3}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t// Here we need to specifically allow interpolation\r\n\t\t\t\tpattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\r\n\t\t\t\tinside: {\r\n\t\t\t\t\t'interpolation': interpolation\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tpattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\r\n\t\t\t\tlookbehind: true\r\n\t\t\t}\r\n\t\t],\r\n\t\t'variable': /[@$]+[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/,\r\n\t\t'symbol': /:[a-zA-Z_][a-zA-Z_0-9]*(?:[?!]|\\b)/\r\n\t});\r\n\r\n\tPrism.languages.insertBefore('ruby', 'number', {\r\n\t\t'builtin': /\\b(Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|File|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\r\n\t\t'constant': /\\b[A-Z][a-zA-Z_0-9]*(?:[?!]|\\b)/\r\n\t});\r\n\r\n\tPrism.languages.ruby.string = [\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s\\{\\(\\[<])(?:[^\\\\]|\\\\[\\s\\S])*?\\1/,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\t// Here we need to specifically allow interpolation\r\n\t\t\tpattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t},\r\n\t\t{\r\n\t\t\tpattern: /(\"|')(#\\{[^}]+\\}|\\\\(?:\\r?\\n|\\r)|\\\\?.)*?\\1/,\r\n\t\t\tinside: {\r\n\t\t\t\t'interpolation': interpolation\r\n\t\t\t}\r\n\t\t}\r\n\t];\r\n}(Prism));\r\nPrism.languages.json = {\r\n    'property': /\"(?:\\\\.|[^|\"])*\"(?=\\s*:)/ig,\r\n    'string': /\"(?!:)(?:\\\\.|[^|\"])*\"(?!:)/g,\r\n    'number': /\\b-?(0x[\\dA-Fa-f]+|\\d*\\.?\\d+([Ee][+-]?\\d+)?)\\b/g,\r\n    'punctuation': /[{}[\\]);,]/g,\r\n    'operator': /:/g,\r\n    'boolean': /\\b(true|false)\\b/gi,\r\n    'null': /\\bnull\\b/gi\r\n};\r\n\r\nPrism.languages.jsonp = Prism.languages.json;\r\n\r\nPrism.languages.yaml = {\r\n\t'scalar': {\r\n\t\tpattern: /([\\-:]\\s*(![^\\s]+)?[ \\t]*[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)[^\\r\\n]+(?:\\3[^\\r\\n]+)*)/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'string'\r\n\t},\r\n\t'comment': /#.*/,\r\n\t'key': {\r\n\t\tpattern: /(\\s*(?:^|[:\\-,[{\\r\\n?])[ \\t]*(![^\\s]+)?[ \\t]*)[^\\r\\n{[\\]},#\\s]+?(?=\\s*:\\s)/,\r\n\t\tlookbehind: true,\r\n\t\talias: 'atrule'\r\n\t},\r\n\t'directive': {\r\n\t\tpattern: /(^[ \\t]*)%.+/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'important'\r\n\t},\r\n\t'datetime': {\r\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\\d{4}-\\d\\d?-\\d\\d?([tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(\\.\\d*)?[ \\t]*(Z|[-+]\\d\\d?(:\\d{2})?)?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(:\\d{2}(\\.\\d*)?)?)(?=[ \\t]*($|,|]|}))/m,\r\n\t\tlookbehind: true,\r\n\t\talias: 'number'\r\n\t},\r\n\t'boolean': {\r\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(true|false)[ \\t]*(?=$|,|]|})/im,\r\n\t\tlookbehind: true,\r\n\t\talias: 'important'\r\n\t},\r\n\t'null': {\r\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(null|~)[ \\t]*(?=$|,|]|})/im,\r\n\t\tlookbehind: true,\r\n\t\talias: 'important'\r\n\t},\r\n\t'string': {\r\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)(\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')(?=[ \\t]*($|,|]|}))/m,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'number': {\r\n\t\tpattern: /([:\\-,[{]\\s*(![^\\s]+)?[ \\t]*)[+\\-]?(0x[\\da-f]+|0o[0-7]+|(\\d+\\.?\\d*|\\.?\\d+)(e[\\+\\-]?\\d+)?|\\.inf|\\.nan)[ \\t]*(?=$|,|]|})/im,\r\n\t\tlookbehind: true\r\n\t},\r\n\t'tag': /![^\\s]+/,\r\n\t'important': /[&*][\\w]+/,\r\n\t'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\r\n};\r\n\r\n(function(){\r\n\r\nif (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {\r\n\treturn;\r\n}\r\n\r\nfunction $$(expr, con) {\r\n\treturn Array.prototype.slice.call((con || document).querySelectorAll(expr));\r\n}\r\n\r\nfunction hasClass(element, className) {\r\n  className = \" \" + className + \" \";\r\n  return (\" \" + element.className + \" \").replace(/[\\n\\t]/g, \" \").indexOf(className) > -1\r\n}\r\n\r\n// Some browsers round the line-height, others don't.\r\n// We need to test for it to position the elements properly.\r\nvar isLineHeightRounded = (function() {\r\n\tvar res;\r\n\treturn function() {\r\n\t\tif(typeof res === 'undefined') {\r\n\t\t\tvar d = document.createElement('div');\r\n\t\t\td.style.fontSize = '13px';\r\n\t\t\td.style.lineHeight = '1.5';\r\n\t\t\td.style.padding = 0;\r\n\t\t\td.style.border = 0;\r\n\t\t\td.innerHTML = '&nbsp;<br />&nbsp;';\r\n\t\t\tdocument.body.appendChild(d);\r\n\t\t\t// Browsers that round the line-height should have offsetHeight === 38\r\n\t\t\t// The others should have 39.\r\n\t\t\tres = d.offsetHeight === 38;\r\n\t\t\tdocument.body.removeChild(d);\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n}());\r\n\r\nfunction highlightLines(pre, lines, classes) {\r\n\tvar ranges = lines.replace(/\\s+/g, '').split(','),\r\n\t    offset = +pre.getAttribute('data-line-offset') || 0;\r\n\r\n\tvar parseMethod = isLineHeightRounded() ? parseInt : parseFloat;\r\n\tvar lineHeight = parseMethod(getComputedStyle(pre).lineHeight);\r\n\r\n\tfor (var i=0, range; range = ranges[i++];) {\r\n\t\trange = range.split('-');\r\n\r\n\t\tvar start = +range[0],\r\n\t\t    end = +range[1] || start;\r\n\r\n\t\tvar line = document.createElement('div');\r\n\r\n\t\tline.textContent = Array(end - start + 2).join(' \\n');\r\n\t\tline.setAttribute('aria-hidden', 'true');\r\n\t\tline.className = (classes || '') + ' line-highlight';\r\n\r\n\t\t//if the line-numbers plugin is enabled, then there is no reason for this plugin to display the line numbers\r\n\t\tif(!hasClass(pre, 'line-numbers')) {\r\n\t\t\tline.setAttribute('data-start', start);\r\n\r\n\t\t\tif(end > start) {\r\n\t\t\t\tline.setAttribute('data-end', end);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tline.style.top = (start - offset - 1) * lineHeight + 'px';\r\n\r\n\t\t//allow this to play nicely with the line-numbers plugin\r\n\t\tif(hasClass(pre, 'line-numbers')) {\r\n\t\t\t//need to attack to pre as when line-numbers is enabled, the code tag is relatively which screws up the positioning\r\n\t\t\tpre.appendChild(line);\r\n\t\t} else {\r\n\t\t\t(pre.querySelector('code') || pre).appendChild(line);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyHash() {\r\n\tvar hash = location.hash.slice(1);\r\n\r\n\t// Remove pre-existing temporary lines\r\n\t$$('.temporary.line-highlight').forEach(function (line) {\r\n\t\tline.parentNode.removeChild(line);\r\n\t});\r\n\r\n\tvar range = (hash.match(/\\.([\\d,-]+)$/) || [,''])[1];\r\n\r\n\tif (!range || document.getElementById(hash)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar id = hash.slice(0, hash.lastIndexOf('.')),\r\n\t    pre = document.getElementById(id);\r\n\r\n\tif (!pre) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (!pre.hasAttribute('data-line')) {\r\n\t\tpre.setAttribute('data-line', '');\r\n\t}\r\n\r\n\thighlightLines(pre, range, 'temporary ');\r\n\r\n\tdocument.querySelector('.temporary.line-highlight').scrollIntoView();\r\n}\r\n\r\nvar fakeTimer = 0; // Hack to limit the number of times applyHash() runs\r\n\r\nPrism.hooks.add('complete', function(env) {\r\n\tvar pre = env.element.parentNode;\r\n\tvar lines = pre && pre.getAttribute('data-line');\r\n\r\n\tif (!pre || !lines || !/pre/i.test(pre.nodeName)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tclearTimeout(fakeTimer);\r\n\r\n\t$$('.line-highlight', pre).forEach(function (line) {\r\n\t\tline.parentNode.removeChild(line);\r\n\t});\r\n\r\n\thighlightLines(pre, lines);\r\n\r\n\tfakeTimer = setTimeout(applyHash, 1);\r\n});\r\n\r\nif(window.addEventListener) {\r\n\twindow.addEventListener('hashchange', applyHash);\r\n}\r\n\r\n})();\r\n\r\n(function() {\r\n\r\nif (typeof self === 'undefined' || !self.Prism || !self.document) {\r\n\treturn;\r\n}\r\n\r\nPrism.hooks.add('complete', function (env) {\r\n\tif (!env.code) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t// works only for <code> wrapped inside <pre> (not inline)\r\n\tvar pre = env.element.parentNode;\r\n\tvar clsReg = /\\s*\\bline-numbers\\b\\s*/;\r\n\tif (\r\n\t\t!pre || !/pre/i.test(pre.nodeName) ||\r\n\t\t\t// Abort only if nor the <pre> nor the <code> have the class\r\n\t\t(!clsReg.test(pre.className) && !clsReg.test(env.element.className))\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (env.element.querySelector(\".line-numbers-rows\")) {\r\n\t\t// Abort if line numbers already exists\r\n\t\treturn;\r\n\t}\r\n\r\n\tif (clsReg.test(env.element.className)) {\r\n\t\t// Remove the class \"line-numbers\" from the <code>\r\n\t\tenv.element.className = env.element.className.replace(clsReg, '');\r\n\t}\r\n\tif (!clsReg.test(pre.className)) {\r\n\t\t// Add the class \"line-numbers\" to the <pre>\r\n\t\tpre.className += ' line-numbers';\r\n\t}\r\n\r\n\tvar match = env.code.match(/\\n(?!$)/g);\r\n\tvar linesNum = match ? match.length + 1 : 1;\r\n\tvar lineNumbersWrapper;\r\n\r\n\tvar lines = new Array(linesNum + 1);\r\n\tlines = lines.join('<span></span>');\r\n\r\n\tlineNumbersWrapper = document.createElement('span');\r\n\tlineNumbersWrapper.setAttribute('aria-hidden', 'true');\r\n\tlineNumbersWrapper.className = 'line-numbers-rows';\r\n\tlineNumbersWrapper.innerHTML = lines;\r\n\r\n\tif (pre.hasAttribute('data-start')) {\r\n\t\tpre.style.counterReset = 'linenumber ' + (parseInt(pre.getAttribute('data-start'), 10) - 1);\r\n\t}\r\n\r\n\tenv.element.appendChild(lineNumbersWrapper);\r\n\r\n});\r\n\r\n}());\r\n(function(){\r\n\r\nif (\r\n\ttypeof self !== 'undefined' && !self.Prism ||\r\n\ttypeof global !== 'undefined' && !global.Prism\r\n) {\r\n\treturn;\r\n}\r\n\r\nvar url = /\\b([a-z]{3,7}:\\/\\/|tel:)[\\w\\-+%~/.:#=?&amp;]+/,\r\n    email = /\\b\\S+@[\\w.]+[a-z]{2}/,\r\n    linkMd = /\\[([^\\]]+)]\\(([^)]+)\\)/,\r\n\r\n\t// Tokens that may contain URLs and emails\r\n    candidates = ['comment', 'url', 'attr-value', 'string'];\r\n\r\nPrism.plugins.autolinker = {\r\n\tprocessGrammar: function (grammar) {\r\n\t\t// Abort if grammar has already been processed\r\n\t\tif (!grammar || grammar['url-link']) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tPrism.languages.DFS(grammar, function (key, def, type) {\r\n\t\t\tif (candidates.indexOf(type) > -1 && Prism.util.type(def) !== 'Array') {\r\n\t\t\t\tif (!def.pattern) {\r\n\t\t\t\t\tdef = this[key] = {\r\n\t\t\t\t\t\tpattern: def\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdef.inside = def.inside || {};\r\n\r\n\t\t\t\tif (type == 'comment') {\r\n\t\t\t\t\tdef.inside['md-link'] = linkMd;\r\n\t\t\t\t}\r\n\t\t\t\tif (type == 'attr-value') {\r\n\t\t\t\t\tPrism.languages.insertBefore('inside', 'punctuation', { 'url-link': url }, def);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdef.inside['url-link'] = url;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdef.inside['email-link'] = email;\r\n\t\t\t}\r\n\t\t});\r\n\t\tgrammar['url-link'] = url;\r\n\t\tgrammar['email-link'] = email;\r\n\t}\r\n};\r\n\r\nPrism.hooks.add('before-highlight', function(env) {\r\n\tPrism.plugins.autolinker.processGrammar(env.grammar);\r\n});\r\n\r\nPrism.hooks.add('wrap', function(env) {\r\n\tif (/-link$/.test(env.type)) {\r\n\t\tenv.tag = 'a';\r\n\r\n\t\tvar href = env.content;\r\n\r\n\t\tif (env.type == 'email-link' && href.indexOf('mailto:') != 0) {\r\n\t\t\thref = 'mailto:' + href;\r\n\t\t}\r\n\t\telse if (env.type == 'md-link') {\r\n\t\t\t// Markdown\r\n\t\t\tvar match = env.content.match(linkMd);\r\n\r\n\t\t\thref = match[2];\r\n\t\t\tenv.content = match[1];\r\n\t\t}\r\n\r\n\t\tenv.attributes.href = href;\r\n\t}\r\n});\r\n\r\n})();\r\n(function(){\r\n\r\nif (typeof self === 'undefined' || !self.Prism || !self.document) {\r\n\treturn;\r\n}\r\n\r\n// The languages map is built automatically with gulp\r\nvar Languages = /*languages_placeholder[*/{\"html\":\"HTML\",\"xml\":\"XML\",\"svg\":\"SVG\",\"mathml\":\"MathML\",\"css\":\"CSS\",\"clike\":\"C-like\",\"javascript\":\"JavaScript\",\"abap\":\"ABAP\",\"actionscript\":\"ActionScript\",\"apacheconf\":\"Apache Configuration\",\"apl\":\"APL\",\"applescript\":\"AppleScript\",\"asciidoc\":\"AsciiDoc\",\"aspnet\":\"ASP.NET (C#)\",\"autoit\":\"AutoIt\",\"autohotkey\":\"AutoHotkey\",\"basic\":\"BASIC\",\"csharp\":\"C#\",\"cpp\":\"C++\",\"coffeescript\":\"CoffeeScript\",\"css-extras\":\"CSS Extras\",\"fsharp\":\"F#\",\"glsl\":\"GLSL\",\"graphql\":\"GraphQL\",\"http\":\"HTTP\",\"inform7\":\"Inform 7\",\"json\":\"JSON\",\"latex\":\"LaTeX\",\"livescript\":\"LiveScript\",\"lolcode\":\"LOLCODE\",\"matlab\":\"MATLAB\",\"mel\":\"MEL\",\"nasm\":\"NASM\",\"nginx\":\"nginx\",\"nsis\":\"NSIS\",\"objectivec\":\"Objective-C\",\"ocaml\":\"OCaml\",\"parigp\":\"PARI/GP\",\"php\":\"PHP\",\"php-extras\":\"PHP Extras\",\"powershell\":\"PowerShell\",\"properties\":\".properties\",\"protobuf\":\"Protocol Buffers\",\"jsx\":\"React JSX\",\"rest\":\"reST (reStructuredText)\",\"sas\":\"SAS\",\"sass\":\"Sass (Sass)\",\"scss\":\"Sass (Scss)\",\"sql\":\"SQL\",\"typescript\":\"TypeScript\",\"vhdl\":\"VHDL\",\"vim\":\"vim\",\"wiki\":\"Wiki markup\",\"xojo\":\"Xojo (REALbasic)\",\"yaml\":\"YAML\"}/*]*/;\r\nPrism.hooks.add('before-highlight', function(env) {\r\n\tvar pre = env.element.parentNode;\r\n\tif (!pre || !/pre/i.test(pre.nodeName)) {\r\n\t\treturn;\r\n\t}\r\n\tvar language = pre.getAttribute('data-language') || Languages[env.language] || (env.language.substring(0, 1).toUpperCase() + env.language.substring(1));\r\n\r\n\t/* check if the divs already exist */\r\n\tvar sib = pre.previousSibling;\r\n\tvar div, div2;\r\n\tif (sib && /\\s*\\bprism-show-language\\b\\s*/.test(sib.className) &&\r\n\t\tsib.firstChild &&\r\n\t\t/\\s*\\bprism-show-language-label\\b\\s*/.test(sib.firstChild.className)) {\r\n\t\tdiv2 = sib.firstChild;\r\n\t} else {\r\n\t\tdiv = document.createElement('div');\r\n\t\tdiv2 = document.createElement('div');\r\n\r\n\t\tdiv2.className = 'prism-show-language-label';\r\n\r\n\t\tdiv.className = 'prism-show-language';\r\n\t\tdiv.appendChild(div2);\r\n\r\n\t\tpre.parentNode.insertBefore(div, pre);\r\n\t}\r\n\r\n\tdiv2.innerHTML = language;\r\n});\r\n\r\n})();\r\n\r\n(function() {\r\n\r\n\tif (typeof self === 'undefined' || !self.Prism || !self.document || !Function.prototype.bind) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the absolute X, Y offsets for an element\r\n\t * @param {HTMLElement} element\r\n\t * @returns {{top: number, right: number, bottom: number, left: number}}\r\n\t */\r\n\tvar getOffset = function (element) {\r\n\t\tvar left = 0, top = 0, el = element;\r\n\r\n\t\tif (el.parentNode) {\r\n\t\t\tdo {\r\n\t\t\t\tleft += el.offsetLeft;\r\n\t\t\t\ttop += el.offsetTop;\r\n\t\t\t} while ((el = el.offsetParent) && el.nodeType < 9);\r\n\r\n\t\t\tel = element;\r\n\r\n\t\t\tdo {\r\n\t\t\t\tleft -= el.scrollLeft;\r\n\t\t\t\ttop -= el.scrollTop;\r\n\t\t\t} while ((el = el.parentNode) && !/body/i.test(el.nodeName));\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: top,\r\n\t\t\tright: innerWidth - left - element.offsetWidth,\r\n\t\t\tbottom: innerHeight - top - element.offsetHeight,\r\n\t\t\tleft: left\r\n\t\t};\r\n\t};\r\n\r\n\tvar tokenRegexp = /(?:^|\\s)token(?=$|\\s)/;\r\n\tvar activeRegexp = /(?:^|\\s)active(?=$|\\s)/g;\r\n\tvar flippedRegexp = /(?:^|\\s)flipped(?=$|\\s)/g;\r\n\r\n\t/**\r\n\t * Previewer constructor\r\n\t * @param {string} type Unique previewer type\r\n\t * @param {function} updater Function that will be called on mouseover.\r\n\t * @param {string[]|string=} supportedLanguages Aliases of the languages this previewer must be enabled for. Defaults to \"*\", all languages.\r\n\t * @constructor\r\n\t */\r\n\tvar Previewer = function (type, updater, supportedLanguages, initializer) {\r\n\t\tthis._elt = null;\r\n\t\tthis._type = type;\r\n\t\tthis._clsRegexp = RegExp('(?:^|\\\\s)' + type + '(?=$|\\\\s)');\r\n\t\tthis._token = null;\r\n\t\tthis.updater = updater;\r\n\t\tthis._mouseout = this.mouseout.bind(this);\r\n\t\tthis.initializer = initializer;\r\n\r\n\t\tvar self = this;\r\n\r\n\t\tif (!supportedLanguages) {\r\n\t\t\tsupportedLanguages = ['*'];\r\n\t\t}\r\n\t\tif (Prism.util.type(supportedLanguages) !== 'Array') {\r\n\t\t\tsupportedLanguages = [supportedLanguages];\r\n\t\t}\r\n\t\tsupportedLanguages.forEach(function (lang) {\r\n\t\t\tif (typeof lang !== 'string') {\r\n\t\t\t\tlang = lang.lang;\r\n\t\t\t}\r\n\t\t\tif (!Previewer.byLanguages[lang]) {\r\n\t\t\t\tPreviewer.byLanguages[lang] = [];\r\n\t\t\t}\r\n\t\t\tif (Previewer.byLanguages[lang].indexOf(self) < 0) {\r\n\t\t\t\tPreviewer.byLanguages[lang].push(self);\r\n\t\t\t}\r\n\t\t});\r\n\t\tPreviewer.byType[type] = this;\r\n\t};\r\n\r\n\t/**\r\n\t * Creates the HTML element for the previewer.\r\n\t */\r\n\tPreviewer.prototype.init = function () {\r\n\t\tif (this._elt) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._elt = document.createElement('div');\r\n\t\tthis._elt.className = 'prism-previewer prism-previewer-' + this._type;\r\n\t\tdocument.body.appendChild(this._elt);\r\n\t\tif(this.initializer) {\r\n\t\t\tthis.initializer();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Checks the class name of each hovered element\r\n\t * @param token\r\n\t */\r\n\tPreviewer.prototype.check = function (token) {\r\n\t\tdo {\r\n\t\t\tif (tokenRegexp.test(token.className) && this._clsRegexp.test(token.className)) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} while(token = token.parentNode);\r\n\r\n\t\tif (token && token !== this._token) {\r\n\t\t\tthis._token = token;\r\n\t\t\tthis.show();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Called on mouseout\r\n\t */\r\n\tPreviewer.prototype.mouseout = function() {\r\n\t\tthis._token.removeEventListener('mouseout', this._mouseout, false);\r\n\t\tthis._token = null;\r\n\t\tthis.hide();\r\n\t};\r\n\r\n\t/**\r\n\t * Shows the previewer positioned properly for the current token.\r\n\t */\r\n\tPreviewer.prototype.show = function () {\r\n\t\tif (!this._elt) {\r\n\t\t\tthis.init();\r\n\t\t}\r\n\t\tif (!this._token) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.updater.call(this._elt, this._token.textContent)) {\r\n\t\t\tthis._token.addEventListener('mouseout', this._mouseout, false);\r\n\r\n\t\t\tvar offset = getOffset(this._token);\r\n\t\t\tthis._elt.className += ' active';\r\n\r\n\t\t\tif (offset.top - this._elt.offsetHeight > 0) {\r\n\t\t\t\tthis._elt.className = this._elt.className.replace(flippedRegexp, '');\r\n\t\t\t\tthis._elt.style.top = offset.top + 'px';\r\n\t\t\t\tthis._elt.style.bottom = '';\r\n\t\t\t} else {\r\n\t\t\t\tthis._elt.className +=  ' flipped';\r\n\t\t\t\tthis._elt.style.bottom = offset.bottom + 'px';\r\n\t\t\t\tthis._elt.style.top = '';\r\n\t\t\t}\r\n\r\n\t\t\tthis._elt.style.left = offset.left + Math.min(200, this._token.offsetWidth / 2) + 'px';\r\n\t\t} else {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Hides the previewer.\r\n\t */\r\n\tPreviewer.prototype.hide = function () {\r\n\t\tthis._elt.className = this._elt.className.replace(activeRegexp, '');\r\n\t};\r\n\r\n\t/**\r\n\t * Map of all registered previewers by language\r\n\t * @type {{}}\r\n\t */\r\n\tPreviewer.byLanguages = {};\r\n\r\n\t/**\r\n\t * Map of all registered previewers by type\r\n\t * @type {{}}\r\n\t */\r\n\tPreviewer.byType = {};\r\n\r\n\t/**\r\n\t * Initializes the mouseover event on the code block.\r\n\t * @param {HTMLElement} elt The code block (env.element)\r\n\t * @param {string} lang The language (env.language)\r\n\t */\r\n\tPreviewer.initEvents = function (elt, lang) {\r\n\t\tvar previewers = [];\r\n\t\tif (Previewer.byLanguages[lang]) {\r\n\t\t\tpreviewers = previewers.concat(Previewer.byLanguages[lang]);\r\n\t\t}\r\n\t\tif (Previewer.byLanguages['*']) {\r\n\t\t\tpreviewers = previewers.concat(Previewer.byLanguages['*']);\r\n\t\t}\r\n\t\telt.addEventListener('mouseover', function (e) {\r\n\t\t\tvar target = e.target;\r\n\t\t\tpreviewers.forEach(function (previewer) {\r\n\t\t\t\tpreviewer.check(target);\r\n\t\t\t});\r\n\t\t}, false);\r\n\t};\r\n\tPrism.plugins.Previewer = Previewer;\r\n\r\n\t// Initialize the previewers only when needed\r\n\tPrism.hooks.add('after-highlight', function (env) {\r\n\t\tif(Previewer.byLanguages['*'] || Previewer.byLanguages[env.language]) {\r\n\t\t\tPreviewer.initEvents(env.element, env.language);\r\n\t\t}\r\n\t});\r\n\r\n}());\r\n(function() {\r\n\r\n\tif (\r\n\t\ttypeof self !== 'undefined' && !self.Prism ||\r\n\t\ttypeof global !== 'undefined' && !global.Prism\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar languages = {\r\n\t\t'css': true,\r\n\t\t'less': true,\r\n\t\t'markup': {\r\n\t\t\tlang: 'markup',\r\n\t\t\tbefore: 'punctuation',\r\n\t\t\tinside: 'inside',\r\n\t\t\troot: Prism.languages.markup && Prism.languages.markup['tag'].inside['attr-value']\r\n\t\t},\r\n\t\t'sass': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tbefore: 'punctuation',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']\r\n\t\t\t}\r\n\t\t],\r\n\t\t'scss': true,\r\n\t\t'stylus': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'hexcode',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'hexcode',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\r\n\tPrism.hooks.add('before-highlight', function (env) {\r\n\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {\r\n\t\t\tvar lang = languages[env.language];\r\n\t\t\tif (Prism.util.type(lang) !== 'Array') {\r\n\t\t\t\tlang = [lang];\r\n\t\t\t}\r\n\t\t\tlang.forEach(function(lang) {\r\n\t\t\t\tvar before, inside, root, skip;\r\n\t\t\t\tif (lang === true) {\r\n\t\t\t\t\tbefore = 'important';\r\n\t\t\t\t\tinside = env.language;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbefore = lang.before || 'important';\r\n\t\t\t\t\tinside = lang.inside || lang.lang;\r\n\t\t\t\t\troot = lang.root || Prism.languages;\r\n\t\t\t\t\tskip = lang.skip;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!skip && Prism.languages[lang]) {\r\n\t\t\t\t\tPrism.languages.insertBefore(inside, before, {\r\n\t\t\t\t\t\t'color': /\\B#(?:[0-9a-f]{3}){1,2}\\b|\\b(?:rgb|hsl)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:rgb|hsl)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B|\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGray|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGray|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGray|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gray|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGray|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGray|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGray|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i\r\n\t\t\t\t\t}, root);\r\n\t\t\t\t\tenv.grammar = Prism.languages[lang];\r\n\r\n\t\t\t\t\tlanguages[env.language] = {initialized: true};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tif (Prism.plugins.Previewer) {\r\n\t\tnew Prism.plugins.Previewer('color', function(value) {\r\n\t\t\tthis.style.backgroundColor = '';\r\n\t\t\tthis.style.backgroundColor = value;\r\n\t\t\treturn !!this.style.backgroundColor;\r\n\t\t});\r\n\t}\r\n\r\n}());\r\n(function() {\r\n\r\n\tif (\r\n\t\ttypeof self !== 'undefined' && !self.Prism ||\r\n\t\ttypeof global !== 'undefined' && !global.Prism\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar languages = {\r\n\t\t'css': true,\r\n\t\t'less': true,\r\n\t\t'sass': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tbefore: 'punctuation',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tbefore: 'punctuation',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']\r\n\t\t\t}\r\n\t\t],\r\n\t\t'scss': true,\r\n\t\t'stylus': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'func',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'func',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\r\n\tPrism.hooks.add('before-highlight', function (env) {\r\n\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {\r\n\t\t\tvar lang = languages[env.language];\r\n\t\t\tif (Prism.util.type(lang) !== 'Array') {\r\n\t\t\t\tlang = [lang];\r\n\t\t\t}\r\n\t\t\tlang.forEach(function(lang) {\r\n\t\t\t\tvar before, inside, root, skip;\r\n\t\t\t\tif (lang === true) {\r\n\t\t\t\t\t// Insert before color previewer if it exists\r\n\t\t\t\t\tbefore = Prism.plugins.Previewer && Prism.plugins.Previewer.byType['color'] ? 'color' : 'important';\r\n\t\t\t\t\tinside = env.language;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbefore = lang.before || 'important';\r\n\t\t\t\t\tinside = lang.inside || lang.lang;\r\n\t\t\t\t\troot = lang.root || Prism.languages;\r\n\t\t\t\t\tskip = lang.skip;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!skip && Prism.languages[lang]) {\r\n\t\t\t\t\tPrism.languages.insertBefore(inside, before, {\r\n\t\t\t\t\t\t'gradient': {\r\n\t\t\t\t\t\t\tpattern: /(?:\\b|\\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\\((?:(?:rgb|hsl)a?\\(.+?\\)|[^\\)])+\\)/gi,\r\n\t\t\t\t\t\t\tinside: {\r\n\t\t\t\t\t\t\t\t'function': /[\\w-]+(?=\\()/,\r\n\t\t\t\t\t\t\t\t'punctuation': /[(),]/\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, root);\r\n\t\t\t\t\tenv.grammar = Prism.languages[lang];\r\n\r\n\t\t\t\t\tlanguages[env.language] = {initialized: true};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\t// Stores already processed gradients so that we don't\r\n\t// make the conversion every time the previewer is shown\r\n\tvar cache = {};\r\n\r\n\t/**\r\n\t * Returns a W3C-valid linear gradient\r\n\t * @param {string} prefix Vendor prefix if any (\"-moz-\", \"-webkit-\", etc.)\r\n\t * @param {string} func Gradient function name (\"linear-gradient\")\r\n\t * @param {string[]} values Array of the gradient function parameters ([\"0deg\", \"red 0%\", \"blue 100%\"])\r\n\t */\r\n\tvar convertToW3CLinearGradient = function(prefix, func, values) {\r\n\t\t// Default value for angle\r\n\t\tvar angle = '180deg';\r\n\r\n\t\tif (/^(?:-?\\d*\\.?\\d+(?:deg|rad)|to\\b|top|right|bottom|left)/.test(values[0])) {\r\n\t\t\tangle = values.shift();\r\n\t\t\tif (angle.indexOf('to ') < 0) {\r\n\t\t\t\t// Angle uses old keywords\r\n\t\t\t\t// W3C syntax uses \"to\" + opposite keywords\r\n\t\t\t\tif (angle.indexOf('top') >= 0) {\r\n\t\t\t\t\tif (angle.indexOf('left') >= 0) {\r\n\t\t\t\t\t\tangle = 'to bottom right';\r\n\t\t\t\t\t} else if (angle.indexOf('right') >= 0) {\r\n\t\t\t\t\t\tangle = 'to bottom left';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tangle = 'to bottom';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (angle.indexOf('bottom') >= 0) {\r\n\t\t\t\t\tif (angle.indexOf('left') >= 0) {\r\n\t\t\t\t\t\tangle = 'to top right';\r\n\t\t\t\t\t} else if (angle.indexOf('right') >= 0) {\r\n\t\t\t\t\t\tangle = 'to top left';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tangle = 'to top';\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (angle.indexOf('left') >= 0) {\r\n\t\t\t\t\tangle = 'to right';\r\n\t\t\t\t} else if (angle.indexOf('right') >= 0) {\r\n\t\t\t\t\tangle = 'to left';\r\n\t\t\t\t} else if (prefix) {\r\n\t\t\t\t\t// Angle is shifted by 90deg in prefixed gradients\r\n\t\t\t\t\tif (angle.indexOf('deg') >= 0) {\r\n\t\t\t\t\t\tangle = (90 - parseFloat(angle)) + 'deg';\r\n\t\t\t\t\t} else if (angle.indexOf('rad') >= 0) {\r\n\t\t\t\t\t\tangle = (Math.PI / 2 - parseFloat(angle)) + 'rad';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn func + '(' + angle + ',' + values.join(',') + ')';\r\n\t};\r\n\r\n\t/**\r\n\t * Returns a W3C-valid radial gradient\r\n\t * @param {string} prefix Vendor prefix if any (\"-moz-\", \"-webkit-\", etc.)\r\n\t * @param {string} func Gradient function name (\"linear-gradient\")\r\n\t * @param {string[]} values Array of the gradient function parameters ([\"0deg\", \"red 0%\", \"blue 100%\"])\r\n\t */\r\n\tvar convertToW3CRadialGradient = function(prefix, func, values) {\r\n\t\tif (values[0].indexOf('at') < 0) {\r\n\t\t\t// Looks like old syntax\r\n\r\n\t\t\t// Default values\r\n\t\t\tvar position = 'center';\r\n\t\t\tvar shape = 'ellipse';\r\n\t\t\tvar size = 'farthest-corner';\r\n\r\n\t\t\tif (/\\bcenter|top|right|bottom|left\\b|^\\d+/.test(values[0])) {\r\n\t\t\t\t// Found a position\r\n\t\t\t\t// Remove angle value, if any\r\n\t\t\t\tposition = values.shift().replace(/\\s*-?\\d+(?:rad|deg)\\s*/, '');\r\n\t\t\t}\r\n\t\t\tif (/\\bcircle|ellipse|closest|farthest|contain|cover\\b/.test(values[0])) {\r\n\t\t\t\t// Found a shape and/or size\r\n\t\t\t\tvar shapeSizeParts = values.shift().split(/\\s+/);\r\n\t\t\t\tif (shapeSizeParts[0] && (shapeSizeParts[0] === 'circle' || shapeSizeParts[0] === 'ellipse')) {\r\n\t\t\t\t\tshape = shapeSizeParts.shift();\r\n\t\t\t\t}\r\n\t\t\t\tif (shapeSizeParts[0]) {\r\n\t\t\t\t\tsize = shapeSizeParts.shift();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Old keywords are converted to their synonyms\r\n\t\t\t\tif (size === 'cover') {\r\n\t\t\t\t\tsize = 'farthest-corner';\r\n\t\t\t\t} else if (size === 'contain') {\r\n\t\t\t\t\tsize = 'clothest-side';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn func + '(' + shape + ' ' + size + ' at ' + position + ',' + values.join(',') + ')';\r\n\t\t}\r\n\t\treturn func + '(' + values.join(',') + ')';\r\n\t};\r\n\r\n\t/**\r\n\t * Converts a gradient to a W3C-valid one\r\n\t * Does not support old webkit syntax (-webkit-gradient(linear...) and -webkit-gradient(radial...))\r\n\t * @param {string} gradient The CSS gradient\r\n\t */\r\n\tvar convertToW3CGradient = function(gradient) {\r\n\t\tif (cache[gradient]) {\r\n\t\t\treturn cache[gradient];\r\n\t\t}\r\n\t\tvar parts = gradient.match(/^(\\b|\\B-[a-z]{1,10}-)((?:repeating-)?(?:linear|radial)-gradient)/);\r\n\t\t// \"\", \"-moz-\", etc.\r\n\t\tvar prefix = parts && parts[1];\r\n\t\t// \"linear-gradient\", \"radial-gradient\", etc.\r\n\t\tvar func = parts && parts[2];\r\n\r\n\t\tvar values = gradient.replace(/^(?:\\b|\\B-[a-z]{1,10}-)(?:repeating-)?(?:linear|radial)-gradient\\(|\\)$/g, '').split(/\\s*,\\s*/);\r\n\r\n\t\tif (func.indexOf('linear') >= 0) {\r\n\t\t\treturn cache[gradient] = convertToW3CLinearGradient(prefix, func, values);\r\n\t\t} else if (func.indexOf('radial') >= 0) {\r\n\t\t\treturn cache[gradient] = convertToW3CRadialGradient(prefix, func, values);\r\n\t\t}\r\n\t\treturn cache[gradient] = func + '(' + values.join(',') + ')';\r\n\t};\r\n\r\n\r\n\r\n\tif (Prism.plugins.Previewer) {\r\n\t\tnew Prism.plugins.Previewer('gradient', function(value) {\r\n\t\t\tthis.firstChild.style.backgroundImage = '';\r\n\t\t\tthis.firstChild.style.backgroundImage = convertToW3CGradient(value);\r\n\t\t\treturn !!this.firstChild.style.backgroundImage;\r\n\t\t}, '*', function () {\r\n\t\t\tthis._elt.innerHTML = '<div></div>';\r\n\t\t});\r\n\t}\r\n\r\n}());\r\n(function() {\r\n\r\n\tif (\r\n\t\ttypeof self !== 'undefined' && !self.Prism ||\r\n\t\ttypeof global !== 'undefined' && !global.Prism\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar languages = {\r\n\t\t'css': true,\r\n\t\t'less': true,\r\n\t\t'sass': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\tbefore: 'punctuation',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']\r\n\t\t\t}\r\n\t\t],\r\n\t\t'scss': true,\r\n\t\t'stylus': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'hexcode',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'hexcode',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\r\n\tPrism.hooks.add('before-highlight', function (env) {\r\n\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {\r\n\t\t\tvar lang = languages[env.language];\r\n\t\t\tif (Prism.util.type(lang) !== 'Array') {\r\n\t\t\t\tlang = [lang];\r\n\t\t\t}\r\n\t\t\tlang.forEach(function(lang) {\r\n\t\t\t\tvar before, inside, root, skip;\r\n\t\t\t\tif (lang === true) {\r\n\t\t\t\t\tbefore = 'important';\r\n\t\t\t\t\tinside = env.language;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbefore = lang.before || 'important';\r\n\t\t\t\t\tinside = lang.inside || lang.lang;\r\n\t\t\t\t\troot = lang.root || Prism.languages;\r\n\t\t\t\t\tskip = lang.skip;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!skip && Prism.languages[lang]) {\r\n\t\t\t\t\tPrism.languages.insertBefore(inside, before, {\r\n\t\t\t\t\t\t'easing': /\\bcubic-bezier\\((?:-?\\d*\\.?\\d+,\\s*){3}-?\\d*\\.?\\d+\\)\\B|\\b(?:linear|ease(?:-in)?(?:-out)?)(?=\\s|[;}]|$)/i\r\n\t\t\t\t\t}, root);\r\n\t\t\t\t\tenv.grammar = Prism.languages[lang];\r\n\r\n\t\t\t\t\tlanguages[env.language] = {initialized: true};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tif (Prism.plugins.Previewer) {\r\n\t\tnew Prism.plugins.Previewer('easing', function (value) {\r\n\r\n\t\t\tvalue = {\r\n\t\t\t\t'linear': '0,0,1,1',\r\n\t\t\t\t'ease': '.25,.1,.25,1',\r\n\t\t\t\t'ease-in': '.42,0,1,1',\r\n\t\t\t\t'ease-out': '0,0,.58,1',\r\n\t\t\t\t'ease-in-out':'.42,0,.58,1'\r\n\t\t\t}[value] || value;\r\n\r\n\t\t\tvar p = value.match(/-?\\d*\\.?\\d+/g);\r\n\r\n\t\t\tif(p.length === 4) {\r\n\t\t\t\tp = p.map(function(p, i) { return (i % 2? 1 - p : p) * 100; });\r\n\r\n\t\t\t\tthis.querySelector('path').setAttribute('d', 'M0,100 C' + p[0] + ',' + p[1] + ', ' + p[2] + ',' + p[3] + ', 100,0');\r\n\r\n\t\t\t\tvar lines = this.querySelectorAll('line');\r\n\t\t\t\tlines[0].setAttribute('x2', p[0]);\r\n\t\t\t\tlines[0].setAttribute('y2', p[1]);\r\n\t\t\t\tlines[1].setAttribute('x2', p[2]);\r\n\t\t\t\tlines[1].setAttribute('y2', p[3]);\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}, '*', function () {\r\n\t\t\tthis._elt.innerHTML = '<svg viewBox=\"-20 -20 140 140\" width=\"100\" height=\"100\">' +\r\n\t\t\t\t'<defs>' +\r\n\t\t\t\t\t'<marker id=\"prism-previewer-easing-marker\" viewBox=\"0 0 4 4\" refX=\"2\" refY=\"2\" markerUnits=\"strokeWidth\">' +\r\n\t\t\t\t\t\t'<circle cx=\"2\" cy=\"2\" r=\"1.5\" />' +\r\n\t\t\t\t\t'</marker>' +\r\n\t\t\t\t'</defs>' +\r\n\t\t\t\t'<path d=\"M0,100 C20,50, 40,30, 100,0\" />' +\r\n\t\t\t\t'<line x1=\"0\" y1=\"100\" x2=\"20\" y2=\"50\" marker-start=\"url(' + location.href + '#prism-previewer-easing-marker)\" marker-end=\"url(' + location.href + '#prism-previewer-easing-marker)\" />' +\r\n\t\t\t\t'<line x1=\"100\" y1=\"0\" x2=\"40\" y2=\"30\" marker-start=\"url(' + location.href + '#prism-previewer-easing-marker)\" marker-end=\"url(' + location.href + '#prism-previewer-easing-marker)\" />' +\r\n\t\t\t'</svg>';\r\n\t\t});\r\n\t}\r\n\r\n}());\r\n(function() {\r\n\r\n\tif (\r\n\t\ttypeof self !== 'undefined' && !self.Prism ||\r\n\t\ttypeof global !== 'undefined' && !global.Prism\r\n\t) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tvar languages = {\r\n\t\t'css': true,\r\n\t\t'less': true,\r\n\t\t'markup': {\r\n\t\t\tlang: 'markup',\r\n\t\t\tbefore: 'punctuation',\r\n\t\t\tinside: 'inside',\r\n\t\t\troot: Prism.languages.markup && Prism.languages.markup['tag'].inside['attr-value']\r\n\t\t},\r\n\t\t'sass': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['property-line']\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'sass',\r\n\t\t\t\tbefore: 'operator',\r\n\t\t\t\tinside: 'inside',\r\n\t\t\t\troot: Prism.languages.sass && Prism.languages.sass['variable-line']\r\n\t\t\t}\r\n\t\t],\r\n\t\t'scss': true,\r\n\t\t'stylus': [\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'hexcode',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['property-declaration'].inside\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tlang: 'stylus',\r\n\t\t\t\tbefore: 'hexcode',\r\n\t\t\t\tinside: 'rest',\r\n\t\t\t\troot: Prism.languages.stylus && Prism.languages.stylus['variable-declaration'].inside\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\r\n\tPrism.hooks.add('before-highlight', function (env) {\r\n\t\tif (env.language && languages[env.language] && !languages[env.language].initialized) {\r\n\t\t\tvar lang = languages[env.language];\r\n\t\t\tif (Prism.util.type(lang) !== 'Array') {\r\n\t\t\t\tlang = [lang];\r\n\t\t\t}\r\n\t\t\tlang.forEach(function(lang) {\r\n\t\t\t\tvar before, inside, root, skip;\r\n\t\t\t\tif (lang === true) {\r\n\t\t\t\t\tbefore = 'important';\r\n\t\t\t\t\tinside = env.language;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbefore = lang.before || 'important';\r\n\t\t\t\t\tinside = lang.inside || lang.lang;\r\n\t\t\t\t\troot = lang.root || Prism.languages;\r\n\t\t\t\t\tskip = lang.skip;\r\n\t\t\t\t\tlang = env.language;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!skip && Prism.languages[lang]) {\r\n\t\t\t\t\tPrism.languages.insertBefore(inside, before, {\r\n\t\t\t\t\t\t'time': /(?:\\b|\\B-|(?=\\B\\.))\\d*\\.?\\d+m?s\\b/i\r\n\t\t\t\t\t}, root);\r\n\t\t\t\t\tenv.grammar = Prism.languages[lang];\r\n\r\n\t\t\t\t\tlanguages[env.language] = {initialized: true};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n\r\n\tif (Prism.plugins.Previewer) {\r\n\t\tnew Prism.plugins.Previewer('time', function(value) {\r\n\t\t\tvar num = parseFloat(value);\r\n\t\t\tvar unit = value.match(/[a-z]+$/i);\r\n\t\t\tif (!num || !unit) { \r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tunit = unit[0];\r\n\t\t\tthis.querySelector('circle').style.animationDuration = 2 * num + unit;\r\n\t\t\treturn true;\r\n\t\t}, '*', function () {\r\n\t\t\tthis._elt.innerHTML = '<svg viewBox=\"0 0 64 64\">' +\r\n\t\t\t\t'<circle r=\"16\" cy=\"32\" cx=\"32\"></circle>' +\r\n\t\t\t'</svg>';\r\n\t\t});\r\n\t}\r\n\r\n}());\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}