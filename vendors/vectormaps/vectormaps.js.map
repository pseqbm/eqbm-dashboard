{"version":3,"sources":["build/node_modules/browser-pack/_prelude.js","build/vendors/vectormaps/build/vendors/vectormaps/vectormaps.js"],"names":[],"mappings":"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","file":"vectormaps.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*!\n * JQVMap: jQuery Vector Map Library\n * @author JQVMap <me@peterschmalfeldt.com>\n * @version 1.5.1\n * @link http://jqvmap.com\n * @license https://github.com/manifestinteractive/jqvmap/blob/master/LICENSE\n * @builddate 2016/06/02\n */\n\nvar VectorCanvas = function (width, height, params) {\n  this.mode = window.SVGAngle ? 'svg' : 'vml';\n  this.params = params;\n\n  if (this.mode === 'svg') {\n    this.createSvgNode = function (nodeName) {\n      return document.createElementNS(this.svgns, nodeName);\n    };\n  } else {\n    try {\n      if (!document.namespaces.rvml) {\n        document.namespaces.add('rvml', 'urn:schemas-microsoft-com:vml');\n      }\n      this.createVmlNode = function (tagName) {\n        return document.createElement('<rvml:' + tagName + ' class=\"rvml\">');\n      };\n    } catch (e) {\n      this.createVmlNode = function (tagName) {\n        return document.createElement('<' + tagName + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n      };\n    }\n\n    document.createStyleSheet().addRule('.rvml', 'behavior:url(#default#VML)');\n  }\n\n  if (this.mode === 'svg') {\n    this.canvas = this.createSvgNode('svg');\n  } else {\n    this.canvas = this.createVmlNode('group');\n    this.canvas.style.position = 'absolute';\n  }\n\n  this.setSize(width, height);\n};\n\nVectorCanvas.prototype = {\n  svgns: 'http://www.w3.org/2000/svg',\n  mode: 'svg',\n  width: 0,\n  height: 0,\n  canvas: null\n};\n\nvar ColorScale = function (colors, normalizeFunction, minValue, maxValue) {\n  if (colors) {\n    this.setColors(colors);\n  }\n  if (normalizeFunction) {\n    this.setNormalizeFunction(normalizeFunction);\n  }\n  if (minValue) {\n    this.setMin(minValue);\n  }\n  if (minValue) {\n    this.setMax(maxValue);\n  }\n};\n\nColorScale.prototype = {\n  colors: []\n};\n\nvar JQVMap = function (params) {\n  params = params || {};\n  var map = this;\n  var mapData = JQVMap.maps[params.map];\n  var mapPins;\n\n  if( !mapData){\n    throw new Error('Invalid \"' + params.map + '\" map parameter. Please make sure you have loaded this map file in your HTML.');\n  }\n\n  this.selectedRegions = [];\n  this.multiSelectRegion = params.multiSelectRegion;\n\n  this.container = params.container;\n\n  this.defaultWidth = mapData.width;\n  this.defaultHeight = mapData.height;\n\n  this.color = params.color;\n  this.selectedColor = params.selectedColor;\n  this.hoverColor = params.hoverColor;\n  this.hoverColors = params.hoverColors;\n  this.hoverOpacity = params.hoverOpacity;\n  this.setBackgroundColor(params.backgroundColor);\n\n  this.width = params.container.width();\n  this.height = params.container.height();\n\n  this.resize();\n\n  jQuery(window).resize(function () {\n    var newWidth = params.container.width();\n    var newHeight = params.container.height();\n\n    if(newWidth && newHeight){\n      map.width = newWidth;\n      map.height = newHeight;\n      map.resize();\n      map.canvas.setSize(map.width, map.height);\n      map.applyTransform();\n\n      var resizeEvent = jQuery.Event('resize.jqvmap');\n      jQuery(params.container).trigger(resizeEvent, [newWidth, newHeight]);\n\n      if(mapPins){\n        jQuery('.jqvmap-pin').remove();\n        map.pinHandlers = false;\n        map.placePins(mapPins.pins, mapPins.mode);\n      }\n    }\n  });\n\n  this.canvas = new VectorCanvas(this.width, this.height, params);\n  params.container.append(this.canvas.canvas);\n\n  this.makeDraggable();\n\n  this.rootGroup = this.canvas.createGroup(true);\n\n  this.index = JQVMap.mapIndex;\n  this.label = jQuery('<div/>').addClass('jqvmap-label').appendTo(jQuery('body')).hide();\n\n  if (params.enableZoom) {\n    jQuery('<div/>').addClass('jqvmap-zoomin').text('+').appendTo(params.container);\n    jQuery('<div/>').addClass('jqvmap-zoomout').html('&#x2212;').appendTo(params.container);\n  }\n\n  map.countries = [];\n\n  for (var key in mapData.paths) {\n    var path = this.canvas.createPath({\n      path: mapData.paths[key].path\n    });\n\n    path.setFill(this.color);\n    path.id = map.getCountryId(key);\n    map.countries[key] = path;\n\n    if (this.canvas.mode === 'svg') {\n      path.setAttribute('class', 'jqvmap-region');\n    } else {\n      jQuery(path).addClass('jqvmap-region');\n    }\n\n    jQuery(this.rootGroup).append(path);\n  }\n\n  jQuery(params.container).delegate(this.canvas.mode === 'svg' ? 'path' : 'shape', 'mouseover mouseout', function (e) {\n    var containerPath = e.target,\n      code = e.target.id.split('_').pop(),\n      labelShowEvent = jQuery.Event('labelShow.jqvmap'),\n      regionMouseOverEvent = jQuery.Event('regionMouseOver.jqvmap');\n\n    code = code.toLowerCase();\n\n    if (e.type === 'mouseover') {\n      jQuery(params.container).trigger(regionMouseOverEvent, [code, mapData.paths[code].name]);\n      if (!regionMouseOverEvent.isDefaultPrevented()) {\n        map.highlight(code, containerPath);\n      }\n      if (params.showTooltip) {\n        map.label.text(mapData.paths[code].name);\n        jQuery(params.container).trigger(labelShowEvent, [map.label, code]);\n\n        if (!labelShowEvent.isDefaultPrevented()) {\n          map.label.show();\n          map.labelWidth = map.label.width();\n          map.labelHeight = map.label.height();\n        }\n      }\n    } else {\n      map.unhighlight(code, containerPath);\n\n      map.label.hide();\n      jQuery(params.container).trigger('regionMouseOut.jqvmap', [code, mapData.paths[code].name]);\n    }\n  });\n\n  jQuery(params.container).delegate(this.canvas.mode === 'svg' ? 'path' : 'shape', 'click', function (regionClickEvent) {\n\n    var targetPath = regionClickEvent.target;\n    var code = regionClickEvent.target.id.split('_').pop();\n    var mapClickEvent = jQuery.Event('regionClick.jqvmap');\n\n    code = code.toLowerCase();\n\n    jQuery(params.container).trigger(mapClickEvent, [code, mapData.paths[code].name]);\n\n    if ( !params.multiSelectRegion && !mapClickEvent.isDefaultPrevented()) {\n      for (var keyPath in mapData.paths) {\n        map.countries[keyPath].currentFillColor = map.countries[keyPath].getOriginalFill();\n        map.countries[keyPath].setFill(map.countries[keyPath].getOriginalFill());\n      }\n    }\n\n    if ( !mapClickEvent.isDefaultPrevented()) {\n      if (map.isSelected(code)) {\n        map.deselect(code, targetPath);\n      } else {\n        map.select(code, targetPath);\n      }\n    }\n  });\n\n  if (params.showTooltip) {\n    params.container.mousemove(function (e) {\n      if (map.label.is(':visible')) {\n        var left = e.pageX - 15 - map.labelWidth;\n        var top = e.pageY - 15 - map.labelHeight;\n\n        if(left < 0) {\n          left = e.pageX + 15;\n        }\n        if(top < 0) {\n          top = e.pageY + 15;\n        }\n\n        map.label.css({\n          left: left,\n          top: top\n        });\n      }\n    });\n  }\n\n  this.setColors(params.colors);\n\n  this.canvas.canvas.appendChild(this.rootGroup);\n\n  this.applyTransform();\n\n  this.colorScale = new ColorScale(params.scaleColors, params.normalizeFunction, params.valueMin, params.valueMax);\n\n  if (params.values) {\n    this.values = params.values;\n    this.setValues(params.values);\n  }\n\n  if (params.selectedRegions) {\n    if (params.selectedRegions instanceof Array) {\n      for(var k in params.selectedRegions) {\n        this.select(params.selectedRegions[k].toLowerCase());\n      }\n    } else {\n      this.select(params.selectedRegions.toLowerCase());\n    }\n  }\n\n  this.bindZoomButtons();\n\n  if(params.pins) {\n    mapPins = {\n      pins: params.pins,\n      mode: params.pinMode\n    };\n\n    this.pinHandlers = false;\n    this.placePins(params.pins, params.pinMode);\n  }\n\n  if(params.showLabels){\n    this.pinHandlers = false;\n\n    var pins = {};\n    for (key in map.countries){\n      if (typeof map.countries[key] !== 'function') {\n        if( !params.pins || !params.pins[key] ){\n          pins[key] = key.toUpperCase();\n        }\n      }\n    }\n\n    mapPins = {\n      pins: pins,\n      mode: 'content'\n    };\n\n    this.placePins(pins, 'content');\n  }\n\n  JQVMap.mapIndex++;\n};\n\nJQVMap.prototype = {\n  transX: 0,\n  transY: 0,\n  scale: 1,\n  baseTransX: 0,\n  baseTransY: 0,\n  baseScale: 1,\n  width: 0,\n  height: 0,\n  countries: {},\n  countriesColors: {},\n  countriesData: {},\n  zoomStep: 1.4,\n  zoomMaxStep: 4,\n  zoomCurStep: 1\n};\n\nJQVMap.xlink = 'http://www.w3.org/1999/xlink';\nJQVMap.mapIndex = 1;\nJQVMap.maps = {};\n\n(function(){\n\n  var apiParams = {\n    colors: 1,\n    values: 1,\n    backgroundColor: 1,\n    scaleColors: 1,\n    normalizeFunction: 1,\n    enableZoom: 1,\n    showTooltip: 1,\n    borderColor: 1,\n    borderWidth: 1,\n    borderOpacity: 1,\n    selectedRegions: 1,\n    multiSelectRegion: 1\n  };\n\n  var apiEvents = {\n    onLabelShow: 'labelShow',\n    onLoad: 'load',\n    onRegionOver: 'regionMouseOver',\n    onRegionOut: 'regionMouseOut',\n    onRegionClick: 'regionClick',\n    onRegionSelect: 'regionSelect',\n    onRegionDeselect: 'regionDeselect',\n    onResize: 'resize'\n  };\n\n  jQuery.fn.vectorMap = function (options) {\n\n    var defaultParams = {\n      map: 'world_en',\n      backgroundColor: '#a5bfdd',\n      color: '#f4f3f0',\n      hoverColor: '#c9dfaf',\n      hoverColors: {},\n      selectedColor: '#c9dfaf',\n      scaleColors: ['#b6d6ff', '#005ace'],\n      normalizeFunction: 'linear',\n      enableZoom: true,\n      showTooltip: true,\n      borderColor: '#818181',\n      borderWidth: 1,\n      borderOpacity: 0.25,\n      selectedRegions: null,\n      multiSelectRegion: false\n    }, map = this.data('mapObject');\n\n    if (options === 'addMap') {\n      JQVMap.maps[arguments[1]] = arguments[2];\n    } else if (options === 'set' && apiParams[arguments[1]]) {\n      map['set' + arguments[1].charAt(0).toUpperCase() + arguments[1].substr(1)].apply(map, Array.prototype.slice.call(arguments, 2));\n    } else if (typeof options === 'string' &&\n      typeof map[options] === 'function') {\n      return map[options].apply(map, Array.prototype.slice.call(arguments, 1));\n    } else {\n      jQuery.extend(defaultParams, options);\n      defaultParams.container = this;\n      this.css({ position: 'relative', overflow: 'hidden' });\n\n      map = new JQVMap(defaultParams);\n\n      this.data('mapObject', map);\n\n      this.unbind('.jqvmap');\n\n      for (var e in apiEvents) {\n        if (defaultParams[e]) {\n          this.bind(apiEvents[e] + '.jqvmap', defaultParams[e]);\n        }\n      }\n\n      var loadEvent = jQuery.Event('load.jqvmap');\n      jQuery(defaultParams.container).trigger(loadEvent, map);\n\n      return map;\n    }\n  };\n\n})(jQuery);\n\nColorScale.arrayToRgb = function (ar) {\n  var rgb = '#';\n  var d;\n  for (var i = 0; i < ar.length; i++) {\n    d = ar[i].toString(16);\n    rgb += d.length === 1 ? '0' + d : d;\n  }\n  return rgb;\n};\n\nColorScale.prototype.getColor = function (value) {\n  if (typeof this.normalize === 'function') {\n    value = this.normalize(value);\n  }\n\n  var lengthes = [];\n  var fullLength = 0;\n  var l;\n\n  for (var i = 0; i < this.colors.length - 1; i++) {\n    l = this.vectorLength(this.vectorSubtract(this.colors[i + 1], this.colors[i]));\n    lengthes.push(l);\n    fullLength += l;\n  }\n\n  var c = (this.maxValue - this.minValue) / fullLength;\n\n  for (i = 0; i < lengthes.length; i++) {\n    lengthes[i] *= c;\n  }\n\n  i = 0;\n  value -= this.minValue;\n\n  while (value - lengthes[i] >= 0) {\n    value -= lengthes[i];\n    i++;\n  }\n\n  var color;\n  if (i === this.colors.length - 1) {\n    color = this.vectorToNum(this.colors[i]).toString(16);\n  } else {\n    color = (this.vectorToNum(this.vectorAdd(this.colors[i], this.vectorMult(this.vectorSubtract(this.colors[i + 1], this.colors[i]), (value) / (lengthes[i]))))).toString(16);\n  }\n\n  while (color.length < 6) {\n    color = '0' + color;\n  }\n  return '#' + color;\n};\n\nColorScale.rgbToArray = function (rgb) {\n  rgb = rgb.substr(1);\n  return [parseInt(rgb.substr(0, 2), 16), parseInt(rgb.substr(2, 2), 16), parseInt(rgb.substr(4, 2), 16)];\n};\n\nColorScale.prototype.setColors = function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    colors[i] = ColorScale.rgbToArray(colors[i]);\n  }\n  this.colors = colors;\n};\n\nColorScale.prototype.setMax = function (max) {\n  this.clearMaxValue = max;\n  if (typeof this.normalize === 'function') {\n    this.maxValue = this.normalize(max);\n  } else {\n    this.maxValue = max;\n  }\n};\n\nColorScale.prototype.setMin = function (min) {\n  this.clearMinValue = min;\n\n  if (typeof this.normalize === 'function') {\n    this.minValue = this.normalize(min);\n  } else {\n    this.minValue = min;\n  }\n};\n\nColorScale.prototype.setNormalizeFunction = function (f) {\n  if (f === 'polynomial') {\n    this.normalize = function (value) {\n      return Math.pow(value, 0.2);\n    };\n  } else if (f === 'linear') {\n    delete this.normalize;\n  } else {\n    this.normalize = f;\n  }\n  this.setMin(this.clearMinValue);\n  this.setMax(this.clearMaxValue);\n};\n\nColorScale.prototype.vectorAdd = function (vector1, vector2) {\n  var vector = [];\n  for (var i = 0; i < vector1.length; i++) {\n    vector[i] = vector1[i] + vector2[i];\n  }\n  return vector;\n};\n\nColorScale.prototype.vectorLength = function (vector) {\n  var result = 0;\n  for (var i = 0; i < vector.length; i++) {\n    result += vector[i] * vector[i];\n  }\n  return Math.sqrt(result);\n};\n\nColorScale.prototype.vectorMult = function (vector, num) {\n  var result = [];\n  for (var i = 0; i < vector.length; i++) {\n    result[i] = vector[i] * num;\n  }\n  return result;\n};\n\nColorScale.prototype.vectorSubtract = function (vector1, vector2) {\n  var vector = [];\n  for (var i = 0; i < vector1.length; i++) {\n    vector[i] = vector1[i] - vector2[i];\n  }\n  return vector;\n};\n\nColorScale.prototype.vectorToNum = function (vector) {\n  var num = 0;\n  for (var i = 0; i < vector.length; i++) {\n    num += Math.round(vector[i]) * Math.pow(256, vector.length - i - 1);\n  }\n  return num;\n};\n\nJQVMap.prototype.applyTransform = function () {\n  var maxTransX, maxTransY, minTransX, minTransY;\n  if (this.defaultWidth * this.scale <= this.width) {\n    maxTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);\n    minTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);\n  } else {\n    maxTransX = 0;\n    minTransX = (this.width - this.defaultWidth * this.scale) / this.scale;\n  }\n\n  if (this.defaultHeight * this.scale <= this.height) {\n    maxTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);\n    minTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);\n  } else {\n    maxTransY = 0;\n    minTransY = (this.height - this.defaultHeight * this.scale) / this.scale;\n  }\n\n  if (this.transY > maxTransY) {\n    this.transY = maxTransY;\n  } else if (this.transY < minTransY) {\n    this.transY = minTransY;\n  }\n  if (this.transX > maxTransX) {\n    this.transX = maxTransX;\n  } else if (this.transX < minTransX) {\n    this.transX = minTransX;\n  }\n\n  this.canvas.applyTransformParams(this.scale, this.transX, this.transY);\n};\n\nJQVMap.prototype.bindZoomButtons = function () {\n  var map = this;\n  this.container.find('.jqvmap-zoomin').click(function(){\n    map.zoomIn();\n  });\n  this.container.find('.jqvmap-zoomout').click(function(){\n    map.zoomOut();\n  });\n};\n\nJQVMap.prototype.deselect = function (cc, path) {\n  cc = cc.toLowerCase();\n  path = path || jQuery('#' + this.getCountryId(cc))[0];\n\n  if (this.isSelected(cc)) {\n    this.selectedRegions.splice(this.selectIndex(cc), 1);\n\n    jQuery(this.container).trigger('regionDeselect.jqvmap', [cc]);\n    path.currentFillColor = path.getOriginalFill();\n    path.setFill(path.getOriginalFill());\n  } else {\n    for (var key in this.countries) {\n      this.selectedRegions.splice(this.selectedRegions.indexOf(key), 1);\n      this.countries[key].currentFillColor = this.color;\n      this.countries[key].setFill(this.color);\n    }\n  }\n};\n\nJQVMap.prototype.getCountryId = function (cc) {\n  return 'jqvmap' + this.index + '_' + cc;\n};\n\nJQVMap.prototype.getPin = function(cc){\n  var pinObj = jQuery('#' + this.getPinId(cc));\n  return pinObj.html();\n};\n\nJQVMap.prototype.getPinId = function (cc) {\n  return this.getCountryId(cc) + '_pin';\n};\n\nJQVMap.prototype.getPins = function(){\n  var pins = this.container.find('.jqvmap-pin');\n  var ret = {};\n  jQuery.each(pins, function(index, pinObj){\n    pinObj = jQuery(pinObj);\n    var cc = pinObj.attr('for').toLowerCase();\n    var pinContent = pinObj.html();\n    ret[cc] = pinContent;\n  });\n  return JSON.stringify(ret);\n};\n\nJQVMap.prototype.highlight = function (cc, path) {\n  path = path || jQuery('#' + this.getCountryId(cc))[0];\n  if (this.hoverOpacity) {\n    path.setOpacity(this.hoverOpacity);\n  } else if (this.hoverColors && (cc in this.hoverColors)) {\n    path.currentFillColor = path.getFill() + '';\n    path.setFill(this.hoverColors[cc]);\n  } else if (this.hoverColor) {\n    path.currentFillColor = path.getFill() + '';\n    path.setFill(this.hoverColor);\n  }\n};\n\nJQVMap.prototype.isSelected = function(cc) {\n  return this.selectIndex(cc) >= 0;\n};\n\nJQVMap.prototype.makeDraggable = function () {\n  var mouseDown = false;\n  var oldPageX, oldPageY;\n  var self = this;\n\n  self.isMoving = false;\n  self.isMovingTimeout = false;\n\n  var lastTouchCount;\n  var touchCenterX;\n  var touchCenterY;\n  var touchStartDistance;\n  var touchStartScale;\n  var touchX;\n  var touchY;\n\n  this.container.mousemove(function (e) {\n\n    if (mouseDown) {\n      self.transX -= (oldPageX - e.pageX) / self.scale;\n      self.transY -= (oldPageY - e.pageY) / self.scale;\n\n      self.applyTransform();\n\n      oldPageX = e.pageX;\n      oldPageY = e.pageY;\n\n      self.isMoving = true;\n      if (self.isMovingTimeout) {\n        clearTimeout(self.isMovingTimeout);\n      }\n\n      self.container.trigger('drag');\n    }\n\n    return false;\n\n  }).mousedown(function (e) {\n\n    mouseDown = true;\n    oldPageX = e.pageX;\n    oldPageY = e.pageY;\n\n    return false;\n\n  }).mouseup(function () {\n\n    mouseDown = false;\n\n    clearTimeout(self.isMovingTimeout);\n    self.isMovingTimeout = setTimeout(function () {\n      self.isMoving = false;\n    }, 100);\n\n    return false;\n\n  }).mouseout(function () {\n\n    if(mouseDown && self.isMoving){\n\n      clearTimeout(self.isMovingTimeout);\n      self.isMovingTimeout = setTimeout(function () {\n        mouseDown = false;\n        self.isMoving = false;\n      }, 100);\n\n      return false;\n    }\n  });\n\n  jQuery(this.container).bind('touchmove', function (e) {\n\n    var offset;\n    var scale;\n    var touches = e.originalEvent.touches;\n    var transformXOld;\n    var transformYOld;\n\n    if (touches.length === 1) {\n      if (lastTouchCount === 1) {\n\n        if(touchX === touches[0].pageX && touchY === touches[0].pageY){\n          return;\n        }\n\n        transformXOld = self.transX;\n        transformYOld = self.transY;\n\n        self.transX -= (touchX - touches[0].pageX) / self.scale;\n        self.transY -= (touchY - touches[0].pageY) / self.scale;\n\n        self.applyTransform();\n\n        if (transformXOld !== self.transX || transformYOld !== self.transY) {\n          e.preventDefault();\n        }\n\n        self.isMoving = true;\n        if (self.isMovingTimeout) {\n          clearTimeout(self.isMovingTimeout);\n        }\n      }\n\n      touchX = touches[0].pageX;\n      touchY = touches[0].pageY;\n\n    } else if (touches.length === 2) {\n\n      if (lastTouchCount === 2) {\n        scale = Math.sqrt(\n            Math.pow(touches[0].pageX - touches[1].pageX, 2) +\n            Math.pow(touches[0].pageY - touches[1].pageY, 2)\n          ) / touchStartDistance;\n\n        self.setScale(\n          touchStartScale * scale,\n          touchCenterX,\n          touchCenterY\n        );\n\n        e.preventDefault();\n\n      } else {\n\n        offset = jQuery(self.container).offset();\n        if (touches[0].pageX > touches[1].pageX) {\n          touchCenterX = touches[1].pageX + (touches[0].pageX - touches[1].pageX) / 2;\n        } else {\n          touchCenterX = touches[0].pageX + (touches[1].pageX - touches[0].pageX) / 2;\n        }\n\n        if (touches[0].pageY > touches[1].pageY) {\n          touchCenterY = touches[1].pageY + (touches[0].pageY - touches[1].pageY) / 2;\n        } else {\n          touchCenterY = touches[0].pageY + (touches[1].pageY - touches[0].pageY) / 2;\n        }\n\n        touchCenterX -= offset.left;\n        touchCenterY -= offset.top;\n        touchStartScale = self.scale;\n\n        touchStartDistance = Math.sqrt(\n          Math.pow(touches[0].pageX - touches[1].pageX, 2) +\n          Math.pow(touches[0].pageY - touches[1].pageY, 2)\n        );\n      }\n    }\n\n    lastTouchCount = touches.length;\n  });\n\n  jQuery(this.container).bind('touchstart', function () {\n    lastTouchCount = 0;\n  });\n\n  jQuery(this.container).bind('touchend', function () {\n    lastTouchCount = 0;\n  });\n};\n\nJQVMap.prototype.placePins = function(pins, pinMode){\n  var map = this;\n\n  if(!pinMode || (pinMode !== 'content' && pinMode !== 'id')) {\n    pinMode = 'content';\n  }\n\n  if(pinMode === 'content') {//treat pin as content\n    jQuery.each(pins, function(index, pin){\n      if(jQuery('#' + map.getCountryId(index)).length === 0){\n        return;\n      }\n\n      var pinIndex = map.getPinId(index);\n      var $pin = jQuery('#' + pinIndex);\n      if($pin.length > 0){\n        $pin.remove();\n      }\n      map.container.append('<div id=\"' + pinIndex + '\" for=\"' + index + '\" class=\"jqvmap-pin\" style=\"position:absolute\">' + pin + '</div>');\n    });\n  } else { //treat pin as id of an html content\n    jQuery.each(pins, function(index, pin){\n      if(jQuery('#' + map.getCountryId(index)).length === 0){\n        return;\n      }\n      var pinIndex = map.getPinId(index);\n      var $pin = jQuery('#' + pinIndex);\n      if($pin.length > 0){\n        $pin.remove();\n      }\n      map.container.append('<div id=\"' + pinIndex + '\" for=\"' + index + '\" class=\"jqvmap-pin\" style=\"position:absolute\"></div>');\n      $pin.append(jQuery('#' + pin));\n    });\n  }\n\n  this.positionPins();\n  if(!this.pinHandlers){\n    this.pinHandlers = true;\n    var positionFix = function(){\n      map.positionPins();\n    };\n    this.container.bind('zoomIn', positionFix)\n      .bind('zoomOut', positionFix)\n      .bind('drag', positionFix);\n  }\n};\n\nJQVMap.prototype.positionPins = function(){\n  var map = this;\n  var pins = this.container.find('.jqvmap-pin');\n  jQuery.each(pins, function(index, pinObj){\n    pinObj = jQuery(pinObj);\n    var countryId = map.getCountryId(pinObj.attr('for').toLowerCase());\n    var countryObj = jQuery('#' + countryId);\n    var bbox = countryObj[0].getBBox();\n\n    var scale = map.scale;\n    var rootCoords = map.canvas.rootGroup.getBoundingClientRect();\n    var mapCoords = map.container[0].getBoundingClientRect();\n    var coords = {\n      left: rootCoords.left - mapCoords.left,\n      top: rootCoords.top - mapCoords.top\n    };\n\n    var middleX = (bbox.x * scale) + ((bbox.width * scale) / 2);\n    var middleY = (bbox.y * scale) + ((bbox.height * scale) / 2);\n\n    pinObj.css({\n      left: coords.left + middleX - (pinObj.width() / 2),\n      top: coords.top + middleY - (pinObj.height() / 2)\n    });\n  });\n};\n\nJQVMap.prototype.removePin = function(cc) {\n  cc = cc.toLowerCase();\n  jQuery('#' + this.getPinId(cc)).remove();\n};\n\nJQVMap.prototype.removePins = function(){\n  this.container.find('.jqvmap-pin').remove();\n};\n\nJQVMap.prototype.reset = function () {\n  for (var key in this.countries) {\n    this.countries[key].setFill(this.color);\n  }\n  this.scale = this.baseScale;\n  this.transX = this.baseTransX;\n  this.transY = this.baseTransY;\n  this.applyTransform();\n};\n\nJQVMap.prototype.resize = function () {\n  var curBaseScale = this.baseScale;\n  if (this.width / this.height > this.defaultWidth / this.defaultHeight) {\n    this.baseScale = this.height / this.defaultHeight;\n    this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale);\n  } else {\n    this.baseScale = this.width / this.defaultWidth;\n    this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale);\n  }\n  this.scale *= this.baseScale / curBaseScale;\n  this.transX *= this.baseScale / curBaseScale;\n  this.transY *= this.baseScale / curBaseScale;\n};\n\nJQVMap.prototype.select = function (cc, path) {\n  cc = cc.toLowerCase();\n  path = path || jQuery('#' + this.getCountryId(cc))[0];\n\n  if (!this.isSelected(cc)) {\n    if (this.multiSelectRegion) {\n      this.selectedRegions.push(cc);\n    } else {\n      this.selectedRegions = [cc];\n    }\n\n    jQuery(this.container).trigger('regionSelect.jqvmap', [cc]);\n    if (this.selectedColor && path) {\n      path.currentFillColor = this.selectedColor;\n      path.setFill(this.selectedColor);\n    }\n  }\n};\n\nJQVMap.prototype.selectIndex = function (cc) {\n  cc = cc.toLowerCase();\n  for (var i = 0; i < this.selectedRegions.length; i++) {\n    if (cc === this.selectedRegions[i]) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nJQVMap.prototype.setBackgroundColor = function (backgroundColor) {\n  this.container.css('background-color', backgroundColor);\n};\n\nJQVMap.prototype.setColors = function (key, color) {\n  if (typeof key === 'string') {\n    this.countries[key].setFill(color);\n    this.countries[key].setAttribute('original', color);\n  } else {\n    var colors = key;\n\n    for (var code in colors) {\n      if (this.countries[code]) {\n        this.countries[code].setFill(colors[code]);\n        this.countries[code].setAttribute('original', colors[code]);\n      }\n    }\n  }\n};\n\nJQVMap.prototype.setNormalizeFunction = function (f) {\n  this.colorScale.setNormalizeFunction(f);\n\n  if (this.values) {\n    this.setValues(this.values);\n  }\n};\n\nJQVMap.prototype.setScale = function (scale) {\n  this.scale = scale;\n  this.applyTransform();\n};\n\nJQVMap.prototype.setScaleColors = function (colors) {\n  this.colorScale.setColors(colors);\n\n  if (this.values) {\n    this.setValues(this.values);\n  }\n};\n\nJQVMap.prototype.setValues = function (values) {\n  var max = 0,\n    min = Number.MAX_VALUE,\n    val;\n\n  for (var cc in values) {\n    cc = cc.toLowerCase();\n    val = parseFloat(values[cc]);\n\n    if (isNaN(val)) {\n      continue;\n    }\n    if (val > max) {\n      max = values[cc];\n    }\n    if (val < min) {\n      min = val;\n    }\n  }\n\n  if (min === max) {\n    max++;\n  }\n\n  this.colorScale.setMin(min);\n  this.colorScale.setMax(max);\n\n  var colors = {};\n  for (cc in values) {\n    cc = cc.toLowerCase();\n    val = parseFloat(values[cc]);\n    colors[cc] = isNaN(val) ? this.color : this.colorScale.getColor(val);\n  }\n  this.setColors(colors);\n  this.values = values;\n};\n\nJQVMap.prototype.unhighlight = function (cc, path) {\n  cc = cc.toLowerCase();\n  path = path || jQuery('#' + this.getCountryId(cc))[0];\n  path.setOpacity(1);\n  if (path.currentFillColor) {\n    path.setFill(path.currentFillColor);\n  }\n};\n\nJQVMap.prototype.zoomIn = function () {\n  var map = this;\n  var sliderDelta = (jQuery('#zoom').innerHeight() - 6 * 2 - 15 * 2 - 3 * 2 - 7 - 6) / (this.zoomMaxStep - this.zoomCurStep);\n\n  if (map.zoomCurStep < map.zoomMaxStep) {\n    map.transX -= (map.width / map.scale - map.width / (map.scale * map.zoomStep)) / 2;\n    map.transY -= (map.height / map.scale - map.height / (map.scale * map.zoomStep)) / 2;\n    map.setScale(map.scale * map.zoomStep);\n    map.zoomCurStep++;\n\n    var $slider = jQuery('#zoomSlider');\n\n    $slider.css('top', parseInt($slider.css('top'), 10) - sliderDelta);\n\n    map.container.trigger('zoomIn');\n  }\n};\n\nJQVMap.prototype.zoomOut = function () {\n  var map = this;\n  var sliderDelta = (jQuery('#zoom').innerHeight() - 6 * 2 - 15 * 2 - 3 * 2 - 7 - 6) / (this.zoomMaxStep - this.zoomCurStep);\n\n  if (map.zoomCurStep > 1) {\n    map.transX += (map.width / (map.scale / map.zoomStep) - map.width / map.scale) / 2;\n    map.transY += (map.height / (map.scale / map.zoomStep) - map.height / map.scale) / 2;\n    map.setScale(map.scale / map.zoomStep);\n    map.zoomCurStep--;\n\n    var $slider = jQuery('#zoomSlider');\n\n    $slider.css('top', parseInt($slider.css('top'), 10) + sliderDelta);\n\n    map.container.trigger('zoomOut');\n  }\n};\n\nVectorCanvas.prototype.applyTransformParams = function (scale, transX, transY) {\n  if (this.mode === 'svg') {\n    this.rootGroup.setAttribute('transform', 'scale(' + scale + ') translate(' + transX + ', ' + transY + ')');\n  } else {\n    this.rootGroup.coordorigin = (this.width - transX) + ',' + (this.height - transY);\n    this.rootGroup.coordsize = this.width / scale + ',' + this.height / scale;\n  }\n};\n\nVectorCanvas.prototype.createGroup = function (isRoot) {\n  var node;\n  if (this.mode === 'svg') {\n    node = this.createSvgNode('g');\n  } else {\n    node = this.createVmlNode('group');\n    node.style.width = this.width + 'px';\n    node.style.height = this.height + 'px';\n    node.style.left = '0px';\n    node.style.top = '0px';\n    node.coordorigin = '0 0';\n    node.coordsize = this.width + ' ' + this.height;\n  }\n\n  if (isRoot) {\n    this.rootGroup = node;\n  }\n  return node;\n};\n\nVectorCanvas.prototype.createPath = function (config) {\n  var node;\n  if (this.mode === 'svg') {\n    node = this.createSvgNode('path');\n    node.setAttribute('d', config.path);\n\n    if (this.params.borderColor !== null) {\n      node.setAttribute('stroke', this.params.borderColor);\n    }\n    if (this.params.borderWidth > 0) {\n      node.setAttribute('stroke-width', this.params.borderWidth);\n      node.setAttribute('stroke-linecap', 'round');\n      node.setAttribute('stroke-linejoin', 'round');\n    }\n    if (this.params.borderOpacity > 0) {\n      node.setAttribute('stroke-opacity', this.params.borderOpacity);\n    }\n\n    node.setFill = function (color) {\n      this.setAttribute('fill', color);\n      if (this.getAttribute('original') === null) {\n        this.setAttribute('original', color);\n      }\n    };\n\n    node.getFill = function () {\n      return this.getAttribute('fill');\n    };\n\n    node.getOriginalFill = function () {\n      return this.getAttribute('original');\n    };\n\n    node.setOpacity = function (opacity) {\n      this.setAttribute('fill-opacity', opacity);\n    };\n  } else {\n    node = this.createVmlNode('shape');\n    node.coordorigin = '0 0';\n    node.coordsize = this.width + ' ' + this.height;\n    node.style.width = this.width + 'px';\n    node.style.height = this.height + 'px';\n    node.fillcolor = JQVMap.defaultFillColor;\n    node.stroked = false;\n    node.path = VectorCanvas.pathSvgToVml(config.path);\n\n    var scale = this.createVmlNode('skew');\n    scale.on = true;\n    scale.matrix = '0.01,0,0,0.01,0,0';\n    scale.offset = '0,0';\n\n    node.appendChild(scale);\n\n    var fill = this.createVmlNode('fill');\n    node.appendChild(fill);\n\n    node.setFill = function (color) {\n      this.getElementsByTagName('fill')[0].color = color;\n      if (this.getAttribute('original') === null) {\n        this.setAttribute('original', color);\n      }\n    };\n\n    node.getFill = function () {\n      return this.getElementsByTagName('fill')[0].color;\n    };\n    node.getOriginalFill = function () {\n      return this.getAttribute('original');\n    };\n    node.setOpacity = function (opacity) {\n      this.getElementsByTagName('fill')[0].opacity = parseInt(opacity * 100, 10) + '%';\n    };\n  }\n  return node;\n};\n\nVectorCanvas.prototype.pathSvgToVml = function (path) {\n  var result = '';\n  var cx = 0, cy = 0, ctrlx, ctrly;\n\n  return path.replace(/([MmLlHhVvCcSs])((?:-?(?:\\d+)?(?:\\.\\d+)?,?\\s?)+)/g, function (segment, letter, coords) {\n    coords = coords.replace(/(\\d)-/g, '$1,-').replace(/\\s+/g, ',').split(',');\n    if (!coords[0]) {\n      coords.shift();\n    }\n\n    for (var i = 0, l = coords.length; i < l; i++) {\n      coords[i] = Math.round(100 * coords[i]);\n    }\n\n    switch (letter) {\n      case 'm':\n        cx += coords[0];\n        cy += coords[1];\n        result = 't' + coords.join(',');\n        break;\n\n      case 'M':\n        cx = coords[0];\n        cy = coords[1];\n        result = 'm' + coords.join(',');\n        break;\n\n      case 'l':\n        cx += coords[0];\n        cy += coords[1];\n        result = 'r' + coords.join(',');\n        break;\n\n      case 'L':\n        cx = coords[0];\n        cy = coords[1];\n        result = 'l' + coords.join(',');\n        break;\n\n      case 'h':\n        cx += coords[0];\n        result = 'r' + coords[0] + ',0';\n        break;\n\n      case 'H':\n        cx = coords[0];\n        result = 'l' + cx + ',' + cy;\n        break;\n\n      case 'v':\n        cy += coords[0];\n        result = 'r0,' + coords[0];\n        break;\n\n      case 'V':\n        cy = coords[0];\n        result = 'l' + cx + ',' + cy;\n        break;\n\n      case 'c':\n        ctrlx = cx + coords[coords.length - 4];\n        ctrly = cy + coords[coords.length - 3];\n        cx += coords[coords.length - 2];\n        cy += coords[coords.length - 1];\n        result = 'v' + coords.join(',');\n        break;\n\n      case 'C':\n        ctrlx = coords[coords.length - 4];\n        ctrly = coords[coords.length - 3];\n        cx = coords[coords.length - 2];\n        cy = coords[coords.length - 1];\n        result = 'c' + coords.join(',');\n        break;\n\n      case 's':\n        coords.unshift(cy - ctrly);\n        coords.unshift(cx - ctrlx);\n        ctrlx = cx + coords[coords.length - 4];\n        ctrly = cy + coords[coords.length - 3];\n        cx += coords[coords.length - 2];\n        cy += coords[coords.length - 1];\n        result = 'v' + coords.join(',');\n        break;\n\n      case 'S':\n        coords.unshift(cy + cy - ctrly);\n        coords.unshift(cx + cx - ctrlx);\n        ctrlx = coords[coords.length - 4];\n        ctrly = coords[coords.length - 3];\n        cx = coords[coords.length - 2];\n        cy = coords[coords.length - 1];\n        result = 'c' + coords.join(',');\n        break;\n\n      default:\n        break;\n    }\n\n    return result;\n\n  }).replace(/z/g, '');\n};\n\nVectorCanvas.prototype.setSize = function (width, height) {\n  if (this.mode === 'svg') {\n    this.canvas.setAttribute('width', width);\n    this.canvas.setAttribute('height', height);\n  } else {\n    this.canvas.style.width = width + 'px';\n    this.canvas.style.height = height + 'px';\n    this.canvas.coordsize = width + ' ' + height;\n    this.canvas.coordorigin = '0 0';\n    if (this.rootGroup) {\n      var paths = this.rootGroup.getElementsByTagName('shape');\n      for (var i = 0, l = paths.length; i < l; i++) {\n        paths[i].coordsize = width + ' ' + height;\n        paths[i].style.width = width + 'px';\n        paths[i].style.height = height + 'px';\n      }\n      this.rootGroup.coordsize = width + ' ' + height;\n      this.rootGroup.style.width = width + 'px';\n      this.rootGroup.style.height = height + 'px';\n    }\n  }\n  this.width = width;\n  this.height = height;\n};\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJidWlsZC92ZW5kb3JzL3ZlY3Rvcm1hcHMvdmVjdG9ybWFwcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUE7Ozs7Ozs7OztBQVNBLElBQUksZUFBZSxTQUFmLFlBQWUsQ0FBVSxLQUFWLEVBQWlCLE1BQWpCLEVBQXlCLE1BQXpCLEVBQWlDO0FBQ2xELE9BQUssSUFBTCxHQUFZLE9BQU8sUUFBUCxHQUFrQixLQUFsQixHQUEwQixLQUF0QztBQUNBLE9BQUssTUFBTCxHQUFjLE1BQWQ7O0FBRUEsTUFBSSxLQUFLLElBQUwsS0FBYyxLQUFsQixFQUF5QjtBQUN2QixTQUFLLGFBQUwsR0FBcUIsVUFBVSxRQUFWLEVBQW9CO0FBQ3ZDLGFBQU8sU0FBUyxlQUFULENBQXlCLEtBQUssS0FBOUIsRUFBcUMsUUFBckMsQ0FBUDtBQUNELEtBRkQ7QUFHRCxHQUpELE1BSU87QUFDTCxRQUFJO0FBQ0YsVUFBSSxDQUFDLFNBQVMsVUFBVCxDQUFvQixJQUF6QixFQUErQjtBQUM3QixpQkFBUyxVQUFULENBQW9CLEdBQXBCLENBQXdCLE1BQXhCLEVBQWdDLCtCQUFoQztBQUNEO0FBQ0QsV0FBSyxhQUFMLEdBQXFCLFVBQVUsT0FBVixFQUFtQjtBQUN0QyxlQUFPLFNBQVMsYUFBVCxDQUF1QixXQUFXLE9BQVgsR0FBcUIsZ0JBQTVDLENBQVA7QUFDRCxPQUZEO0FBR0QsS0FQRCxDQU9FLE9BQU8sQ0FBUCxFQUFVO0FBQ1YsV0FBSyxhQUFMLEdBQXFCLFVBQVUsT0FBVixFQUFtQjtBQUN0QyxlQUFPLFNBQVMsYUFBVCxDQUF1QixNQUFNLE9BQU4sR0FBZ0Isc0RBQXZDLENBQVA7QUFDRCxPQUZEO0FBR0Q7O0FBRUQsYUFBUyxnQkFBVCxHQUE0QixPQUE1QixDQUFvQyxPQUFwQyxFQUE2Qyw0QkFBN0M7QUFDRDs7QUFFRCxNQUFJLEtBQUssSUFBTCxLQUFjLEtBQWxCLEVBQXlCO0FBQ3ZCLFNBQUssTUFBTCxHQUFjLEtBQUssYUFBTCxDQUFtQixLQUFuQixDQUFkO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsU0FBSyxNQUFMLEdBQWMsS0FBSyxhQUFMLENBQW1CLE9BQW5CLENBQWQ7QUFDQSxTQUFLLE1BQUwsQ0FBWSxLQUFaLENBQWtCLFFBQWxCLEdBQTZCLFVBQTdCO0FBQ0Q7O0FBRUQsT0FBSyxPQUFMLENBQWEsS0FBYixFQUFvQixNQUFwQjtBQUNELENBakNEOztBQW1DQSxhQUFhLFNBQWIsR0FBeUI7QUFDdkIsU0FBTyw0QkFEZ0I7QUFFdkIsUUFBTSxLQUZpQjtBQUd2QixTQUFPLENBSGdCO0FBSXZCLFVBQVEsQ0FKZTtBQUt2QixVQUFRO0FBTGUsQ0FBekI7O0FBUUEsSUFBSSxhQUFhLFNBQWIsVUFBYSxDQUFVLE1BQVYsRUFBa0IsaUJBQWxCLEVBQXFDLFFBQXJDLEVBQStDLFFBQS9DLEVBQXlEO0FBQ3hFLE1BQUksTUFBSixFQUFZO0FBQ1YsU0FBSyxTQUFMLENBQWUsTUFBZjtBQUNEO0FBQ0QsTUFBSSxpQkFBSixFQUF1QjtBQUNyQixTQUFLLG9CQUFMLENBQTBCLGlCQUExQjtBQUNEO0FBQ0QsTUFBSSxRQUFKLEVBQWM7QUFDWixTQUFLLE1BQUwsQ0FBWSxRQUFaO0FBQ0Q7QUFDRCxNQUFJLFFBQUosRUFBYztBQUNaLFNBQUssTUFBTCxDQUFZLFFBQVo7QUFDRDtBQUNGLENBYkQ7O0FBZUEsV0FBVyxTQUFYLEdBQXVCO0FBQ3JCLFVBQVE7QUFEYSxDQUF2Qjs7QUFJQSxJQUFJLFNBQVMsU0FBVCxNQUFTLENBQVUsTUFBVixFQUFrQjtBQUM3QixXQUFTLFVBQVUsRUFBbkI7QUFDQSxNQUFJLE1BQU0sSUFBVjtBQUNBLE1BQUksVUFBVSxPQUFPLElBQVAsQ0FBWSxPQUFPLEdBQW5CLENBQWQ7QUFDQSxNQUFJLE9BQUo7O0FBRUEsTUFBSSxDQUFDLE9BQUwsRUFBYTtBQUNYLFVBQU0sSUFBSSxLQUFKLENBQVUsY0FBYyxPQUFPLEdBQXJCLEdBQTJCLCtFQUFyQyxDQUFOO0FBQ0Q7O0FBRUQsT0FBSyxlQUFMLEdBQXVCLEVBQXZCO0FBQ0EsT0FBSyxpQkFBTCxHQUF5QixPQUFPLGlCQUFoQzs7QUFFQSxPQUFLLFNBQUwsR0FBaUIsT0FBTyxTQUF4Qjs7QUFFQSxPQUFLLFlBQUwsR0FBb0IsUUFBUSxLQUE1QjtBQUNBLE9BQUssYUFBTCxHQUFxQixRQUFRLE1BQTdCOztBQUVBLE9BQUssS0FBTCxHQUFhLE9BQU8sS0FBcEI7QUFDQSxPQUFLLGFBQUwsR0FBcUIsT0FBTyxhQUE1QjtBQUNBLE9BQUssVUFBTCxHQUFrQixPQUFPLFVBQXpCO0FBQ0EsT0FBSyxXQUFMLEdBQW1CLE9BQU8sV0FBMUI7QUFDQSxPQUFLLFlBQUwsR0FBb0IsT0FBTyxZQUEzQjtBQUNBLE9BQUssa0JBQUwsQ0FBd0IsT0FBTyxlQUEvQjs7QUFFQSxPQUFLLEtBQUwsR0FBYSxPQUFPLFNBQVAsQ0FBaUIsS0FBakIsRUFBYjtBQUNBLE9BQUssTUFBTCxHQUFjLE9BQU8sU0FBUCxDQUFpQixNQUFqQixFQUFkOztBQUVBLE9BQUssTUFBTDs7QUFFQSxTQUFPLE1BQVAsRUFBZSxNQUFmLENBQXNCLFlBQVk7QUFDaEMsUUFBSSxXQUFXLE9BQU8sU0FBUCxDQUFpQixLQUFqQixFQUFmO0FBQ0EsUUFBSSxZQUFZLE9BQU8sU0FBUCxDQUFpQixNQUFqQixFQUFoQjs7QUFFQSxRQUFHLFlBQVksU0FBZixFQUF5QjtBQUN2QixVQUFJLEtBQUosR0FBWSxRQUFaO0FBQ0EsVUFBSSxNQUFKLEdBQWEsU0FBYjtBQUNBLFVBQUksTUFBSjtBQUNBLFVBQUksTUFBSixDQUFXLE9BQVgsQ0FBbUIsSUFBSSxLQUF2QixFQUE4QixJQUFJLE1BQWxDO0FBQ0EsVUFBSSxjQUFKOztBQUVBLFVBQUksY0FBYyxPQUFPLEtBQVAsQ0FBYSxlQUFiLENBQWxCO0FBQ0EsYUFBTyxPQUFPLFNBQWQsRUFBeUIsT0FBekIsQ0FBaUMsV0FBakMsRUFBOEMsQ0FBQyxRQUFELEVBQVcsU0FBWCxDQUE5Qzs7QUFFQSxVQUFHLE9BQUgsRUFBVztBQUNULGVBQU8sYUFBUCxFQUFzQixNQUF0QjtBQUNBLFlBQUksV0FBSixHQUFrQixLQUFsQjtBQUNBLFlBQUksU0FBSixDQUFjLFFBQVEsSUFBdEIsRUFBNEIsUUFBUSxJQUFwQztBQUNEO0FBQ0Y7QUFDRixHQXBCRDs7QUFzQkEsT0FBSyxNQUFMLEdBQWMsSUFBSSxZQUFKLENBQWlCLEtBQUssS0FBdEIsRUFBNkIsS0FBSyxNQUFsQyxFQUEwQyxNQUExQyxDQUFkO0FBQ0EsU0FBTyxTQUFQLENBQWlCLE1BQWpCLENBQXdCLEtBQUssTUFBTCxDQUFZLE1BQXBDOztBQUVBLE9BQUssYUFBTDs7QUFFQSxPQUFLLFNBQUwsR0FBaUIsS0FBSyxNQUFMLENBQVksV0FBWixDQUF3QixJQUF4QixDQUFqQjs7QUFFQSxPQUFLLEtBQUwsR0FBYSxPQUFPLFFBQXBCO0FBQ0EsT0FBSyxLQUFMLEdBQWEsT0FBTyxRQUFQLEVBQWlCLFFBQWpCLENBQTBCLGNBQTFCLEVBQTBDLFFBQTFDLENBQW1ELE9BQU8sTUFBUCxDQUFuRCxFQUFtRSxJQUFuRSxFQUFiOztBQUVBLE1BQUksT0FBTyxVQUFYLEVBQXVCO0FBQ3JCLFdBQU8sUUFBUCxFQUFpQixRQUFqQixDQUEwQixlQUExQixFQUEyQyxJQUEzQyxDQUFnRCxHQUFoRCxFQUFxRCxRQUFyRCxDQUE4RCxPQUFPLFNBQXJFO0FBQ0EsV0FBTyxRQUFQLEVBQWlCLFFBQWpCLENBQTBCLGdCQUExQixFQUE0QyxJQUE1QyxDQUFpRCxVQUFqRCxFQUE2RCxRQUE3RCxDQUFzRSxPQUFPLFNBQTdFO0FBQ0Q7O0FBRUQsTUFBSSxTQUFKLEdBQWdCLEVBQWhCOztBQUVBLE9BQUssSUFBSSxHQUFULElBQWdCLFFBQVEsS0FBeEIsRUFBK0I7QUFDN0IsUUFBSSxPQUFPLEtBQUssTUFBTCxDQUFZLFVBQVosQ0FBdUI7QUFDaEMsWUFBTSxRQUFRLEtBQVIsQ0FBYyxHQUFkLEVBQW1CO0FBRE8sS0FBdkIsQ0FBWDs7QUFJQSxTQUFLLE9BQUwsQ0FBYSxLQUFLLEtBQWxCO0FBQ0EsU0FBSyxFQUFMLEdBQVUsSUFBSSxZQUFKLENBQWlCLEdBQWpCLENBQVY7QUFDQSxRQUFJLFNBQUosQ0FBYyxHQUFkLElBQXFCLElBQXJCOztBQUVBLFFBQUksS0FBSyxNQUFMLENBQVksSUFBWixLQUFxQixLQUF6QixFQUFnQztBQUM5QixXQUFLLFlBQUwsQ0FBa0IsT0FBbEIsRUFBMkIsZUFBM0I7QUFDRCxLQUZELE1BRU87QUFDTCxhQUFPLElBQVAsRUFBYSxRQUFiLENBQXNCLGVBQXRCO0FBQ0Q7O0FBRUQsV0FBTyxLQUFLLFNBQVosRUFBdUIsTUFBdkIsQ0FBOEIsSUFBOUI7QUFDRDs7QUFFRCxTQUFPLE9BQU8sU0FBZCxFQUF5QixRQUF6QixDQUFrQyxLQUFLLE1BQUwsQ0FBWSxJQUFaLEtBQXFCLEtBQXJCLEdBQTZCLE1BQTdCLEdBQXNDLE9BQXhFLEVBQWlGLG9CQUFqRixFQUF1RyxVQUFVLENBQVYsRUFBYTtBQUNsSCxRQUFJLGdCQUFnQixFQUFFLE1BQXRCO0FBQUEsUUFDRSxPQUFPLEVBQUUsTUFBRixDQUFTLEVBQVQsQ0FBWSxLQUFaLENBQWtCLEdBQWxCLEVBQXVCLEdBQXZCLEVBRFQ7QUFBQSxRQUVFLGlCQUFpQixPQUFPLEtBQVAsQ0FBYSxrQkFBYixDQUZuQjtBQUFBLFFBR0UsdUJBQXVCLE9BQU8sS0FBUCxDQUFhLHdCQUFiLENBSHpCOztBQUtBLFdBQU8sS0FBSyxXQUFMLEVBQVA7O0FBRUEsUUFBSSxFQUFFLElBQUYsS0FBVyxXQUFmLEVBQTRCO0FBQzFCLGFBQU8sT0FBTyxTQUFkLEVBQXlCLE9BQXpCLENBQWlDLG9CQUFqQyxFQUF1RCxDQUFDLElBQUQsRUFBTyxRQUFRLEtBQVIsQ0FBYyxJQUFkLEVBQW9CLElBQTNCLENBQXZEO0FBQ0EsVUFBSSxDQUFDLHFCQUFxQixrQkFBckIsRUFBTCxFQUFnRDtBQUM5QyxZQUFJLFNBQUosQ0FBYyxJQUFkLEVBQW9CLGFBQXBCO0FBQ0Q7QUFDRCxVQUFJLE9BQU8sV0FBWCxFQUF3QjtBQUN0QixZQUFJLEtBQUosQ0FBVSxJQUFWLENBQWUsUUFBUSxLQUFSLENBQWMsSUFBZCxFQUFvQixJQUFuQztBQUNBLGVBQU8sT0FBTyxTQUFkLEVBQXlCLE9BQXpCLENBQWlDLGNBQWpDLEVBQWlELENBQUMsSUFBSSxLQUFMLEVBQVksSUFBWixDQUFqRDs7QUFFQSxZQUFJLENBQUMsZUFBZSxrQkFBZixFQUFMLEVBQTBDO0FBQ3hDLGNBQUksS0FBSixDQUFVLElBQVY7QUFDQSxjQUFJLFVBQUosR0FBaUIsSUFBSSxLQUFKLENBQVUsS0FBVixFQUFqQjtBQUNBLGNBQUksV0FBSixHQUFrQixJQUFJLEtBQUosQ0FBVSxNQUFWLEVBQWxCO0FBQ0Q7QUFDRjtBQUNGLEtBZkQsTUFlTztBQUNMLFVBQUksV0FBSixDQUFnQixJQUFoQixFQUFzQixhQUF0Qjs7QUFFQSxVQUFJLEtBQUosQ0FBVSxJQUFWO0FBQ0EsYUFBTyxPQUFPLFNBQWQsRUFBeUIsT0FBekIsQ0FBaUMsdUJBQWpDLEVBQTBELENBQUMsSUFBRCxFQUFPLFFBQVEsS0FBUixDQUFjLElBQWQsRUFBb0IsSUFBM0IsQ0FBMUQ7QUFDRDtBQUNGLEdBN0JEOztBQStCQSxTQUFPLE9BQU8sU0FBZCxFQUF5QixRQUF6QixDQUFrQyxLQUFLLE1BQUwsQ0FBWSxJQUFaLEtBQXFCLEtBQXJCLEdBQTZCLE1BQTdCLEdBQXNDLE9BQXhFLEVBQWlGLE9BQWpGLEVBQTBGLFVBQVUsZ0JBQVYsRUFBNEI7O0FBRXBILFFBQUksYUFBYSxpQkFBaUIsTUFBbEM7QUFDQSxRQUFJLE9BQU8saUJBQWlCLE1BQWpCLENBQXdCLEVBQXhCLENBQTJCLEtBQTNCLENBQWlDLEdBQWpDLEVBQXNDLEdBQXRDLEVBQVg7QUFDQSxRQUFJLGdCQUFnQixPQUFPLEtBQVAsQ0FBYSxvQkFBYixDQUFwQjs7QUFFQSxXQUFPLEtBQUssV0FBTCxFQUFQOztBQUVBLFdBQU8sT0FBTyxTQUFkLEVBQXlCLE9BQXpCLENBQWlDLGFBQWpDLEVBQWdELENBQUMsSUFBRCxFQUFPLFFBQVEsS0FBUixDQUFjLElBQWQsRUFBb0IsSUFBM0IsQ0FBaEQ7O0FBRUEsUUFBSyxDQUFDLE9BQU8saUJBQVIsSUFBNkIsQ0FBQyxjQUFjLGtCQUFkLEVBQW5DLEVBQXVFO0FBQ3JFLFdBQUssSUFBSSxPQUFULElBQW9CLFFBQVEsS0FBNUIsRUFBbUM7QUFDakMsWUFBSSxTQUFKLENBQWMsT0FBZCxFQUF1QixnQkFBdkIsR0FBMEMsSUFBSSxTQUFKLENBQWMsT0FBZCxFQUF1QixlQUF2QixFQUExQztBQUNBLFlBQUksU0FBSixDQUFjLE9BQWQsRUFBdUIsT0FBdkIsQ0FBK0IsSUFBSSxTQUFKLENBQWMsT0FBZCxFQUF1QixlQUF2QixFQUEvQjtBQUNEO0FBQ0Y7O0FBRUQsUUFBSyxDQUFDLGNBQWMsa0JBQWQsRUFBTixFQUEwQztBQUN4QyxVQUFJLElBQUksVUFBSixDQUFlLElBQWYsQ0FBSixFQUEwQjtBQUN4QixZQUFJLFFBQUosQ0FBYSxJQUFiLEVBQW1CLFVBQW5CO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsWUFBSSxNQUFKLENBQVcsSUFBWCxFQUFpQixVQUFqQjtBQUNEO0FBQ0Y7QUFDRixHQXhCRDs7QUEwQkEsTUFBSSxPQUFPLFdBQVgsRUFBd0I7QUFDdEIsV0FBTyxTQUFQLENBQWlCLFNBQWpCLENBQTJCLFVBQVUsQ0FBVixFQUFhO0FBQ3RDLFVBQUksSUFBSSxLQUFKLENBQVUsRUFBVixDQUFhLFVBQWIsQ0FBSixFQUE4QjtBQUM1QixZQUFJLE9BQU8sRUFBRSxLQUFGLEdBQVUsRUFBVixHQUFlLElBQUksVUFBOUI7QUFDQSxZQUFJLE1BQU0sRUFBRSxLQUFGLEdBQVUsRUFBVixHQUFlLElBQUksV0FBN0I7O0FBRUEsWUFBRyxPQUFPLENBQVYsRUFBYTtBQUNYLGlCQUFPLEVBQUUsS0FBRixHQUFVLEVBQWpCO0FBQ0Q7QUFDRCxZQUFHLE1BQU0sQ0FBVCxFQUFZO0FBQ1YsZ0JBQU0sRUFBRSxLQUFGLEdBQVUsRUFBaEI7QUFDRDs7QUFFRCxZQUFJLEtBQUosQ0FBVSxHQUFWLENBQWM7QUFDWixnQkFBTSxJQURNO0FBRVosZUFBSztBQUZPLFNBQWQ7QUFJRDtBQUNGLEtBakJEO0FBa0JEOztBQUVELE9BQUssU0FBTCxDQUFlLE9BQU8sTUFBdEI7O0FBRUEsT0FBSyxNQUFMLENBQVksTUFBWixDQUFtQixXQUFuQixDQUErQixLQUFLLFNBQXBDOztBQUVBLE9BQUssY0FBTDs7QUFFQSxPQUFLLFVBQUwsR0FBa0IsSUFBSSxVQUFKLENBQWUsT0FBTyxXQUF0QixFQUFtQyxPQUFPLGlCQUExQyxFQUE2RCxPQUFPLFFBQXBFLEVBQThFLE9BQU8sUUFBckYsQ0FBbEI7O0FBRUEsTUFBSSxPQUFPLE1BQVgsRUFBbUI7QUFDakIsU0FBSyxNQUFMLEdBQWMsT0FBTyxNQUFyQjtBQUNBLFNBQUssU0FBTCxDQUFlLE9BQU8sTUFBdEI7QUFDRDs7QUFFRCxNQUFJLE9BQU8sZUFBWCxFQUE0QjtBQUMxQixRQUFJLE9BQU8sZUFBUCxZQUFrQyxLQUF0QyxFQUE2QztBQUMzQyxXQUFJLElBQUksQ0FBUixJQUFhLE9BQU8sZUFBcEIsRUFBcUM7QUFDbkMsYUFBSyxNQUFMLENBQVksT0FBTyxlQUFQLENBQXVCLENBQXZCLEVBQTBCLFdBQTFCLEVBQVo7QUFDRDtBQUNGLEtBSkQsTUFJTztBQUNMLFdBQUssTUFBTCxDQUFZLE9BQU8sZUFBUCxDQUF1QixXQUF2QixFQUFaO0FBQ0Q7QUFDRjs7QUFFRCxPQUFLLGVBQUw7O0FBRUEsTUFBRyxPQUFPLElBQVYsRUFBZ0I7QUFDZCxjQUFVO0FBQ1IsWUFBTSxPQUFPLElBREw7QUFFUixZQUFNLE9BQU87QUFGTCxLQUFWOztBQUtBLFNBQUssV0FBTCxHQUFtQixLQUFuQjtBQUNBLFNBQUssU0FBTCxDQUFlLE9BQU8sSUFBdEIsRUFBNEIsT0FBTyxPQUFuQztBQUNEOztBQUVELE1BQUcsT0FBTyxVQUFWLEVBQXFCO0FBQ25CLFNBQUssV0FBTCxHQUFtQixLQUFuQjs7QUFFQSxRQUFJLE9BQU8sRUFBWDtBQUNBLFNBQUssR0FBTCxJQUFZLElBQUksU0FBaEIsRUFBMEI7QUFDeEIsVUFBSSxPQUFPLElBQUksU0FBSixDQUFjLEdBQWQsQ0FBUCxLQUE4QixVQUFsQyxFQUE4QztBQUM1QyxZQUFJLENBQUMsT0FBTyxJQUFSLElBQWdCLENBQUMsT0FBTyxJQUFQLENBQVksR0FBWixDQUFyQixFQUF1QztBQUNyQyxlQUFLLEdBQUwsSUFBWSxJQUFJLFdBQUosRUFBWjtBQUNEO0FBQ0Y7QUFDRjs7QUFFRCxjQUFVO0FBQ1IsWUFBTSxJQURFO0FBRVIsWUFBTTtBQUZFLEtBQVY7O0FBS0EsU0FBSyxTQUFMLENBQWUsSUFBZixFQUFxQixTQUFyQjtBQUNEOztBQUVELFNBQU8sUUFBUDtBQUNELENBN05EOztBQStOQSxPQUFPLFNBQVAsR0FBbUI7QUFDakIsVUFBUSxDQURTO0FBRWpCLFVBQVEsQ0FGUztBQUdqQixTQUFPLENBSFU7QUFJakIsY0FBWSxDQUpLO0FBS2pCLGNBQVksQ0FMSztBQU1qQixhQUFXLENBTk07QUFPakIsU0FBTyxDQVBVO0FBUWpCLFVBQVEsQ0FSUztBQVNqQixhQUFXLEVBVE07QUFVakIsbUJBQWlCLEVBVkE7QUFXakIsaUJBQWUsRUFYRTtBQVlqQixZQUFVLEdBWk87QUFhakIsZUFBYSxDQWJJO0FBY2pCLGVBQWE7QUFkSSxDQUFuQjs7QUFpQkEsT0FBTyxLQUFQLEdBQWUsOEJBQWY7QUFDQSxPQUFPLFFBQVAsR0FBa0IsQ0FBbEI7QUFDQSxPQUFPLElBQVAsR0FBYyxFQUFkOztBQUVBLENBQUMsWUFBVTs7QUFFVCxNQUFJLFlBQVk7QUFDZCxZQUFRLENBRE07QUFFZCxZQUFRLENBRk07QUFHZCxxQkFBaUIsQ0FISDtBQUlkLGlCQUFhLENBSkM7QUFLZCx1QkFBbUIsQ0FMTDtBQU1kLGdCQUFZLENBTkU7QUFPZCxpQkFBYSxDQVBDO0FBUWQsaUJBQWEsQ0FSQztBQVNkLGlCQUFhLENBVEM7QUFVZCxtQkFBZSxDQVZEO0FBV2QscUJBQWlCLENBWEg7QUFZZCx1QkFBbUI7QUFaTCxHQUFoQjs7QUFlQSxNQUFJLFlBQVk7QUFDZCxpQkFBYSxXQURDO0FBRWQsWUFBUSxNQUZNO0FBR2Qsa0JBQWMsaUJBSEE7QUFJZCxpQkFBYSxnQkFKQztBQUtkLG1CQUFlLGFBTEQ7QUFNZCxvQkFBZ0IsY0FORjtBQU9kLHNCQUFrQixnQkFQSjtBQVFkLGNBQVU7QUFSSSxHQUFoQjs7QUFXQSxTQUFPLEVBQVAsQ0FBVSxTQUFWLEdBQXNCLFVBQVUsT0FBVixFQUFtQjs7QUFFdkMsUUFBSSxnQkFBZ0I7QUFDbEIsV0FBSyxVQURhO0FBRWxCLHVCQUFpQixTQUZDO0FBR2xCLGFBQU8sU0FIVztBQUlsQixrQkFBWSxTQUpNO0FBS2xCLG1CQUFhLEVBTEs7QUFNbEIscUJBQWUsU0FORztBQU9sQixtQkFBYSxDQUFDLFNBQUQsRUFBWSxTQUFaLENBUEs7QUFRbEIseUJBQW1CLFFBUkQ7QUFTbEIsa0JBQVksSUFUTTtBQVVsQixtQkFBYSxJQVZLO0FBV2xCLG1CQUFhLFNBWEs7QUFZbEIsbUJBQWEsQ0FaSztBQWFsQixxQkFBZSxJQWJHO0FBY2xCLHVCQUFpQixJQWRDO0FBZWxCLHlCQUFtQjtBQWZELEtBQXBCO0FBQUEsUUFnQkcsTUFBTSxLQUFLLElBQUwsQ0FBVSxXQUFWLENBaEJUOztBQWtCQSxRQUFJLFlBQVksUUFBaEIsRUFBMEI7QUFDeEIsYUFBTyxJQUFQLENBQVksVUFBVSxDQUFWLENBQVosSUFBNEIsVUFBVSxDQUFWLENBQTVCO0FBQ0QsS0FGRCxNQUVPLElBQUksWUFBWSxLQUFaLElBQXFCLFVBQVUsVUFBVSxDQUFWLENBQVYsQ0FBekIsRUFBa0Q7QUFDdkQsVUFBSSxRQUFRLFVBQVUsQ0FBVixFQUFhLE1BQWIsQ0FBb0IsQ0FBcEIsRUFBdUIsV0FBdkIsRUFBUixHQUErQyxVQUFVLENBQVYsRUFBYSxNQUFiLENBQW9CLENBQXBCLENBQW5ELEVBQTJFLEtBQTNFLENBQWlGLEdBQWpGLEVBQXNGLE1BQU0sU0FBTixDQUFnQixLQUFoQixDQUFzQixJQUF0QixDQUEyQixTQUEzQixFQUFzQyxDQUF0QyxDQUF0RjtBQUNELEtBRk0sTUFFQSxJQUFJLE9BQU8sT0FBUCxLQUFtQixRQUFuQixJQUNULE9BQU8sSUFBSSxPQUFKLENBQVAsS0FBd0IsVUFEbkIsRUFDK0I7QUFDcEMsYUFBTyxJQUFJLE9BQUosRUFBYSxLQUFiLENBQW1CLEdBQW5CLEVBQXdCLE1BQU0sU0FBTixDQUFnQixLQUFoQixDQUFzQixJQUF0QixDQUEyQixTQUEzQixFQUFzQyxDQUF0QyxDQUF4QixDQUFQO0FBQ0QsS0FITSxNQUdBO0FBQ0wsYUFBTyxNQUFQLENBQWMsYUFBZCxFQUE2QixPQUE3QjtBQUNBLG9CQUFjLFNBQWQsR0FBMEIsSUFBMUI7QUFDQSxXQUFLLEdBQUwsQ0FBUyxFQUFFLFVBQVUsVUFBWixFQUF3QixVQUFVLFFBQWxDLEVBQVQ7O0FBRUEsWUFBTSxJQUFJLE1BQUosQ0FBVyxhQUFYLENBQU47O0FBRUEsV0FBSyxJQUFMLENBQVUsV0FBVixFQUF1QixHQUF2Qjs7QUFFQSxXQUFLLE1BQUwsQ0FBWSxTQUFaOztBQUVBLFdBQUssSUFBSSxDQUFULElBQWMsU0FBZCxFQUF5QjtBQUN2QixZQUFJLGNBQWMsQ0FBZCxDQUFKLEVBQXNCO0FBQ3BCLGVBQUssSUFBTCxDQUFVLFVBQVUsQ0FBVixJQUFlLFNBQXpCLEVBQW9DLGNBQWMsQ0FBZCxDQUFwQztBQUNEO0FBQ0Y7O0FBRUQsVUFBSSxZQUFZLE9BQU8sS0FBUCxDQUFhLGFBQWIsQ0FBaEI7QUFDQSxhQUFPLGNBQWMsU0FBckIsRUFBZ0MsT0FBaEMsQ0FBd0MsU0FBeEMsRUFBbUQsR0FBbkQ7O0FBRUEsYUFBTyxHQUFQO0FBQ0Q7QUFDRixHQWpERDtBQW1ERCxDQS9FRCxFQStFRyxNQS9FSDs7QUFpRkEsV0FBVyxVQUFYLEdBQXdCLFVBQVUsRUFBVixFQUFjO0FBQ3BDLE1BQUksTUFBTSxHQUFWO0FBQ0EsTUFBSSxDQUFKO0FBQ0EsT0FBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLEdBQUcsTUFBdkIsRUFBK0IsR0FBL0IsRUFBb0M7QUFDbEMsUUFBSSxHQUFHLENBQUgsRUFBTSxRQUFOLENBQWUsRUFBZixDQUFKO0FBQ0EsV0FBTyxFQUFFLE1BQUYsS0FBYSxDQUFiLEdBQWlCLE1BQU0sQ0FBdkIsR0FBMkIsQ0FBbEM7QUFDRDtBQUNELFNBQU8sR0FBUDtBQUNELENBUkQ7O0FBVUEsV0FBVyxTQUFYLENBQXFCLFFBQXJCLEdBQWdDLFVBQVUsS0FBVixFQUFpQjtBQUMvQyxNQUFJLE9BQU8sS0FBSyxTQUFaLEtBQTBCLFVBQTlCLEVBQTBDO0FBQ3hDLFlBQVEsS0FBSyxTQUFMLENBQWUsS0FBZixDQUFSO0FBQ0Q7O0FBRUQsTUFBSSxXQUFXLEVBQWY7QUFDQSxNQUFJLGFBQWEsQ0FBakI7QUFDQSxNQUFJLENBQUo7O0FBRUEsT0FBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLEtBQUssTUFBTCxDQUFZLE1BQVosR0FBcUIsQ0FBekMsRUFBNEMsR0FBNUMsRUFBaUQ7QUFDL0MsUUFBSSxLQUFLLFlBQUwsQ0FBa0IsS0FBSyxjQUFMLENBQW9CLEtBQUssTUFBTCxDQUFZLElBQUksQ0FBaEIsQ0FBcEIsRUFBd0MsS0FBSyxNQUFMLENBQVksQ0FBWixDQUF4QyxDQUFsQixDQUFKO0FBQ0EsYUFBUyxJQUFULENBQWMsQ0FBZDtBQUNBLGtCQUFjLENBQWQ7QUFDRDs7QUFFRCxNQUFJLElBQUksQ0FBQyxLQUFLLFFBQUwsR0FBZ0IsS0FBSyxRQUF0QixJQUFrQyxVQUExQzs7QUFFQSxPQUFLLElBQUksQ0FBVCxFQUFZLElBQUksU0FBUyxNQUF6QixFQUFpQyxHQUFqQyxFQUFzQztBQUNwQyxhQUFTLENBQVQsS0FBZSxDQUFmO0FBQ0Q7O0FBRUQsTUFBSSxDQUFKO0FBQ0EsV0FBUyxLQUFLLFFBQWQ7O0FBRUEsU0FBTyxRQUFRLFNBQVMsQ0FBVCxDQUFSLElBQXVCLENBQTlCLEVBQWlDO0FBQy9CLGFBQVMsU0FBUyxDQUFULENBQVQ7QUFDQTtBQUNEOztBQUVELE1BQUksS0FBSjtBQUNBLE1BQUksTUFBTSxLQUFLLE1BQUwsQ0FBWSxNQUFaLEdBQXFCLENBQS9CLEVBQWtDO0FBQ2hDLFlBQVEsS0FBSyxXQUFMLENBQWlCLEtBQUssTUFBTCxDQUFZLENBQVosQ0FBakIsRUFBaUMsUUFBakMsQ0FBMEMsRUFBMUMsQ0FBUjtBQUNELEdBRkQsTUFFTztBQUNMLFlBQVMsS0FBSyxXQUFMLENBQWlCLEtBQUssU0FBTCxDQUFlLEtBQUssTUFBTCxDQUFZLENBQVosQ0FBZixFQUErQixLQUFLLFVBQUwsQ0FBZ0IsS0FBSyxjQUFMLENBQW9CLEtBQUssTUFBTCxDQUFZLElBQUksQ0FBaEIsQ0FBcEIsRUFBd0MsS0FBSyxNQUFMLENBQVksQ0FBWixDQUF4QyxDQUFoQixFQUEwRSxLQUFELEdBQVcsU0FBUyxDQUFULENBQXBGLENBQS9CLENBQWpCLENBQUQsQ0FBc0osUUFBdEosQ0FBK0osRUFBL0osQ0FBUjtBQUNEOztBQUVELFNBQU8sTUFBTSxNQUFOLEdBQWUsQ0FBdEIsRUFBeUI7QUFDdkIsWUFBUSxNQUFNLEtBQWQ7QUFDRDtBQUNELFNBQU8sTUFBTSxLQUFiO0FBQ0QsQ0F4Q0Q7O0FBMENBLFdBQVcsVUFBWCxHQUF3QixVQUFVLEdBQVYsRUFBZTtBQUNyQyxRQUFNLElBQUksTUFBSixDQUFXLENBQVgsQ0FBTjtBQUNBLFNBQU8sQ0FBQyxTQUFTLElBQUksTUFBSixDQUFXLENBQVgsRUFBYyxDQUFkLENBQVQsRUFBMkIsRUFBM0IsQ0FBRCxFQUFpQyxTQUFTLElBQUksTUFBSixDQUFXLENBQVgsRUFBYyxDQUFkLENBQVQsRUFBMkIsRUFBM0IsQ0FBakMsRUFBaUUsU0FBUyxJQUFJLE1BQUosQ0FBVyxDQUFYLEVBQWMsQ0FBZCxDQUFULEVBQTJCLEVBQTNCLENBQWpFLENBQVA7QUFDRCxDQUhEOztBQUtBLFdBQVcsU0FBWCxDQUFxQixTQUFyQixHQUFpQyxVQUFVLE1BQVYsRUFBa0I7QUFDakQsT0FBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLE9BQU8sTUFBM0IsRUFBbUMsR0FBbkMsRUFBd0M7QUFDdEMsV0FBTyxDQUFQLElBQVksV0FBVyxVQUFYLENBQXNCLE9BQU8sQ0FBUCxDQUF0QixDQUFaO0FBQ0Q7QUFDRCxPQUFLLE1BQUwsR0FBYyxNQUFkO0FBQ0QsQ0FMRDs7QUFPQSxXQUFXLFNBQVgsQ0FBcUIsTUFBckIsR0FBOEIsVUFBVSxHQUFWLEVBQWU7QUFDM0MsT0FBSyxhQUFMLEdBQXFCLEdBQXJCO0FBQ0EsTUFBSSxPQUFPLEtBQUssU0FBWixLQUEwQixVQUE5QixFQUEwQztBQUN4QyxTQUFLLFFBQUwsR0FBZ0IsS0FBSyxTQUFMLENBQWUsR0FBZixDQUFoQjtBQUNELEdBRkQsTUFFTztBQUNMLFNBQUssUUFBTCxHQUFnQixHQUFoQjtBQUNEO0FBQ0YsQ0FQRDs7QUFTQSxXQUFXLFNBQVgsQ0FBcUIsTUFBckIsR0FBOEIsVUFBVSxHQUFWLEVBQWU7QUFDM0MsT0FBSyxhQUFMLEdBQXFCLEdBQXJCOztBQUVBLE1BQUksT0FBTyxLQUFLLFNBQVosS0FBMEIsVUFBOUIsRUFBMEM7QUFDeEMsU0FBSyxRQUFMLEdBQWdCLEtBQUssU0FBTCxDQUFlLEdBQWYsQ0FBaEI7QUFDRCxHQUZELE1BRU87QUFDTCxTQUFLLFFBQUwsR0FBZ0IsR0FBaEI7QUFDRDtBQUNGLENBUkQ7O0FBVUEsV0FBVyxTQUFYLENBQXFCLG9CQUFyQixHQUE0QyxVQUFVLENBQVYsRUFBYTtBQUN2RCxNQUFJLE1BQU0sWUFBVixFQUF3QjtBQUN0QixTQUFLLFNBQUwsR0FBaUIsVUFBVSxLQUFWLEVBQWlCO0FBQ2hDLGFBQU8sS0FBSyxHQUFMLENBQVMsS0FBVCxFQUFnQixHQUFoQixDQUFQO0FBQ0QsS0FGRDtBQUdELEdBSkQsTUFJTyxJQUFJLE1BQU0sUUFBVixFQUFvQjtBQUN6QixXQUFPLEtBQUssU0FBWjtBQUNELEdBRk0sTUFFQTtBQUNMLFNBQUssU0FBTCxHQUFpQixDQUFqQjtBQUNEO0FBQ0QsT0FBSyxNQUFMLENBQVksS0FBSyxhQUFqQjtBQUNBLE9BQUssTUFBTCxDQUFZLEtBQUssYUFBakI7QUFDRCxDQVpEOztBQWNBLFdBQVcsU0FBWCxDQUFxQixTQUFyQixHQUFpQyxVQUFVLE9BQVYsRUFBbUIsT0FBbkIsRUFBNEI7QUFDM0QsTUFBSSxTQUFTLEVBQWI7QUFDQSxPQUFLLElBQUksSUFBSSxDQUFiLEVBQWdCLElBQUksUUFBUSxNQUE1QixFQUFvQyxHQUFwQyxFQUF5QztBQUN2QyxXQUFPLENBQVAsSUFBWSxRQUFRLENBQVIsSUFBYSxRQUFRLENBQVIsQ0FBekI7QUFDRDtBQUNELFNBQU8sTUFBUDtBQUNELENBTkQ7O0FBUUEsV0FBVyxTQUFYLENBQXFCLFlBQXJCLEdBQW9DLFVBQVUsTUFBVixFQUFrQjtBQUNwRCxNQUFJLFNBQVMsQ0FBYjtBQUNBLE9BQUssSUFBSSxJQUFJLENBQWIsRUFBZ0IsSUFBSSxPQUFPLE1BQTNCLEVBQW1DLEdBQW5DLEVBQXdDO0FBQ3RDLGNBQVUsT0FBTyxDQUFQLElBQVksT0FBTyxDQUFQLENBQXRCO0FBQ0Q7QUFDRCxTQUFPLEtBQUssSUFBTCxDQUFVLE1BQVYsQ0FBUDtBQUNELENBTkQ7O0FBUUEsV0FBVyxTQUFYLENBQXFCLFVBQXJCLEdBQWtDLFVBQVUsTUFBVixFQUFrQixHQUFsQixFQUF1QjtBQUN2RCxNQUFJLFNBQVMsRUFBYjtBQUNBLE9BQUssSUFBSSxJQUFJLENBQWIsRUFBZ0IsSUFBSSxPQUFPLE1BQTNCLEVBQW1DLEdBQW5DLEVBQXdDO0FBQ3RDLFdBQU8sQ0FBUCxJQUFZLE9BQU8sQ0FBUCxJQUFZLEdBQXhCO0FBQ0Q7QUFDRCxTQUFPLE1BQVA7QUFDRCxDQU5EOztBQVFBLFdBQVcsU0FBWCxDQUFxQixjQUFyQixHQUFzQyxVQUFVLE9BQVYsRUFBbUIsT0FBbkIsRUFBNEI7QUFDaEUsTUFBSSxTQUFTLEVBQWI7QUFDQSxPQUFLLElBQUksSUFBSSxDQUFiLEVBQWdCLElBQUksUUFBUSxNQUE1QixFQUFvQyxHQUFwQyxFQUF5QztBQUN2QyxXQUFPLENBQVAsSUFBWSxRQUFRLENBQVIsSUFBYSxRQUFRLENBQVIsQ0FBekI7QUFDRDtBQUNELFNBQU8sTUFBUDtBQUNELENBTkQ7O0FBUUEsV0FBVyxTQUFYLENBQXFCLFdBQXJCLEdBQW1DLFVBQVUsTUFBVixFQUFrQjtBQUNuRCxNQUFJLE1BQU0sQ0FBVjtBQUNBLE9BQUssSUFBSSxJQUFJLENBQWIsRUFBZ0IsSUFBSSxPQUFPLE1BQTNCLEVBQW1DLEdBQW5DLEVBQXdDO0FBQ3RDLFdBQU8sS0FBSyxLQUFMLENBQVcsT0FBTyxDQUFQLENBQVgsSUFBd0IsS0FBSyxHQUFMLENBQVMsR0FBVCxFQUFjLE9BQU8sTUFBUCxHQUFnQixDQUFoQixHQUFvQixDQUFsQyxDQUEvQjtBQUNEO0FBQ0QsU0FBTyxHQUFQO0FBQ0QsQ0FORDs7QUFRQSxPQUFPLFNBQVAsQ0FBaUIsY0FBakIsR0FBa0MsWUFBWTtBQUM1QyxNQUFJLFNBQUosRUFBZSxTQUFmLEVBQTBCLFNBQTFCLEVBQXFDLFNBQXJDO0FBQ0EsTUFBSSxLQUFLLFlBQUwsR0FBb0IsS0FBSyxLQUF6QixJQUFrQyxLQUFLLEtBQTNDLEVBQWtEO0FBQ2hELGdCQUFZLENBQUMsS0FBSyxLQUFMLEdBQWEsS0FBSyxZQUFMLEdBQW9CLEtBQUssS0FBdkMsS0FBaUQsSUFBSSxLQUFLLEtBQTFELENBQVo7QUFDQSxnQkFBWSxDQUFDLEtBQUssS0FBTCxHQUFhLEtBQUssWUFBTCxHQUFvQixLQUFLLEtBQXZDLEtBQWlELElBQUksS0FBSyxLQUExRCxDQUFaO0FBQ0QsR0FIRCxNQUdPO0FBQ0wsZ0JBQVksQ0FBWjtBQUNBLGdCQUFZLENBQUMsS0FBSyxLQUFMLEdBQWEsS0FBSyxZQUFMLEdBQW9CLEtBQUssS0FBdkMsSUFBZ0QsS0FBSyxLQUFqRTtBQUNEOztBQUVELE1BQUksS0FBSyxhQUFMLEdBQXFCLEtBQUssS0FBMUIsSUFBbUMsS0FBSyxNQUE1QyxFQUFvRDtBQUNsRCxnQkFBWSxDQUFDLEtBQUssTUFBTCxHQUFjLEtBQUssYUFBTCxHQUFxQixLQUFLLEtBQXpDLEtBQW1ELElBQUksS0FBSyxLQUE1RCxDQUFaO0FBQ0EsZ0JBQVksQ0FBQyxLQUFLLE1BQUwsR0FBYyxLQUFLLGFBQUwsR0FBcUIsS0FBSyxLQUF6QyxLQUFtRCxJQUFJLEtBQUssS0FBNUQsQ0FBWjtBQUNELEdBSEQsTUFHTztBQUNMLGdCQUFZLENBQVo7QUFDQSxnQkFBWSxDQUFDLEtBQUssTUFBTCxHQUFjLEtBQUssYUFBTCxHQUFxQixLQUFLLEtBQXpDLElBQWtELEtBQUssS0FBbkU7QUFDRDs7QUFFRCxNQUFJLEtBQUssTUFBTCxHQUFjLFNBQWxCLEVBQTZCO0FBQzNCLFNBQUssTUFBTCxHQUFjLFNBQWQ7QUFDRCxHQUZELE1BRU8sSUFBSSxLQUFLLE1BQUwsR0FBYyxTQUFsQixFQUE2QjtBQUNsQyxTQUFLLE1BQUwsR0FBYyxTQUFkO0FBQ0Q7QUFDRCxNQUFJLEtBQUssTUFBTCxHQUFjLFNBQWxCLEVBQTZCO0FBQzNCLFNBQUssTUFBTCxHQUFjLFNBQWQ7QUFDRCxHQUZELE1BRU8sSUFBSSxLQUFLLE1BQUwsR0FBYyxTQUFsQixFQUE2QjtBQUNsQyxTQUFLLE1BQUwsR0FBYyxTQUFkO0FBQ0Q7O0FBRUQsT0FBSyxNQUFMLENBQVksb0JBQVosQ0FBaUMsS0FBSyxLQUF0QyxFQUE2QyxLQUFLLE1BQWxELEVBQTBELEtBQUssTUFBL0Q7QUFDRCxDQTlCRDs7QUFnQ0EsT0FBTyxTQUFQLENBQWlCLGVBQWpCLEdBQW1DLFlBQVk7QUFDN0MsTUFBSSxNQUFNLElBQVY7QUFDQSxPQUFLLFNBQUwsQ0FBZSxJQUFmLENBQW9CLGdCQUFwQixFQUFzQyxLQUF0QyxDQUE0QyxZQUFVO0FBQ3BELFFBQUksTUFBSjtBQUNELEdBRkQ7QUFHQSxPQUFLLFNBQUwsQ0FBZSxJQUFmLENBQW9CLGlCQUFwQixFQUF1QyxLQUF2QyxDQUE2QyxZQUFVO0FBQ3JELFFBQUksT0FBSjtBQUNELEdBRkQ7QUFHRCxDQVJEOztBQVVBLE9BQU8sU0FBUCxDQUFpQixRQUFqQixHQUE0QixVQUFVLEVBQVYsRUFBYyxJQUFkLEVBQW9CO0FBQzlDLE9BQUssR0FBRyxXQUFILEVBQUw7QUFDQSxTQUFPLFFBQVEsT0FBTyxNQUFNLEtBQUssWUFBTCxDQUFrQixFQUFsQixDQUFiLEVBQW9DLENBQXBDLENBQWY7O0FBRUEsTUFBSSxLQUFLLFVBQUwsQ0FBZ0IsRUFBaEIsQ0FBSixFQUF5QjtBQUN2QixTQUFLLGVBQUwsQ0FBcUIsTUFBckIsQ0FBNEIsS0FBSyxXQUFMLENBQWlCLEVBQWpCLENBQTVCLEVBQWtELENBQWxEOztBQUVBLFdBQU8sS0FBSyxTQUFaLEVBQXVCLE9BQXZCLENBQStCLHVCQUEvQixFQUF3RCxDQUFDLEVBQUQsQ0FBeEQ7QUFDQSxTQUFLLGdCQUFMLEdBQXdCLEtBQUssZUFBTCxFQUF4QjtBQUNBLFNBQUssT0FBTCxDQUFhLEtBQUssZUFBTCxFQUFiO0FBQ0QsR0FORCxNQU1PO0FBQ0wsU0FBSyxJQUFJLEdBQVQsSUFBZ0IsS0FBSyxTQUFyQixFQUFnQztBQUM5QixXQUFLLGVBQUwsQ0FBcUIsTUFBckIsQ0FBNEIsS0FBSyxlQUFMLENBQXFCLE9BQXJCLENBQTZCLEdBQTdCLENBQTVCLEVBQStELENBQS9EO0FBQ0EsV0FBSyxTQUFMLENBQWUsR0FBZixFQUFvQixnQkFBcEIsR0FBdUMsS0FBSyxLQUE1QztBQUNBLFdBQUssU0FBTCxDQUFlLEdBQWYsRUFBb0IsT0FBcEIsQ0FBNEIsS0FBSyxLQUFqQztBQUNEO0FBQ0Y7QUFDRixDQWpCRDs7QUFtQkEsT0FBTyxTQUFQLENBQWlCLFlBQWpCLEdBQWdDLFVBQVUsRUFBVixFQUFjO0FBQzVDLFNBQU8sV0FBVyxLQUFLLEtBQWhCLEdBQXdCLEdBQXhCLEdBQThCLEVBQXJDO0FBQ0QsQ0FGRDs7QUFJQSxPQUFPLFNBQVAsQ0FBaUIsTUFBakIsR0FBMEIsVUFBUyxFQUFULEVBQVk7QUFDcEMsTUFBSSxTQUFTLE9BQU8sTUFBTSxLQUFLLFFBQUwsQ0FBYyxFQUFkLENBQWIsQ0FBYjtBQUNBLFNBQU8sT0FBTyxJQUFQLEVBQVA7QUFDRCxDQUhEOztBQUtBLE9BQU8sU0FBUCxDQUFpQixRQUFqQixHQUE0QixVQUFVLEVBQVYsRUFBYztBQUN4QyxTQUFPLEtBQUssWUFBTCxDQUFrQixFQUFsQixJQUF3QixNQUEvQjtBQUNELENBRkQ7O0FBSUEsT0FBTyxTQUFQLENBQWlCLE9BQWpCLEdBQTJCLFlBQVU7QUFDbkMsTUFBSSxPQUFPLEtBQUssU0FBTCxDQUFlLElBQWYsQ0FBb0IsYUFBcEIsQ0FBWDtBQUNBLE1BQUksTUFBTSxFQUFWO0FBQ0EsU0FBTyxJQUFQLENBQVksSUFBWixFQUFrQixVQUFTLEtBQVQsRUFBZ0IsTUFBaEIsRUFBdUI7QUFDdkMsYUFBUyxPQUFPLE1BQVAsQ0FBVDtBQUNBLFFBQUksS0FBSyxPQUFPLElBQVAsQ0FBWSxLQUFaLEVBQW1CLFdBQW5CLEVBQVQ7QUFDQSxRQUFJLGFBQWEsT0FBTyxJQUFQLEVBQWpCO0FBQ0EsUUFBSSxFQUFKLElBQVUsVUFBVjtBQUNELEdBTEQ7QUFNQSxTQUFPLEtBQUssU0FBTCxDQUFlLEdBQWYsQ0FBUDtBQUNELENBVkQ7O0FBWUEsT0FBTyxTQUFQLENBQWlCLFNBQWpCLEdBQTZCLFVBQVUsRUFBVixFQUFjLElBQWQsRUFBb0I7QUFDL0MsU0FBTyxRQUFRLE9BQU8sTUFBTSxLQUFLLFlBQUwsQ0FBa0IsRUFBbEIsQ0FBYixFQUFvQyxDQUFwQyxDQUFmO0FBQ0EsTUFBSSxLQUFLLFlBQVQsRUFBdUI7QUFDckIsU0FBSyxVQUFMLENBQWdCLEtBQUssWUFBckI7QUFDRCxHQUZELE1BRU8sSUFBSSxLQUFLLFdBQUwsSUFBcUIsTUFBTSxLQUFLLFdBQXBDLEVBQWtEO0FBQ3ZELFNBQUssZ0JBQUwsR0FBd0IsS0FBSyxPQUFMLEtBQWlCLEVBQXpDO0FBQ0EsU0FBSyxPQUFMLENBQWEsS0FBSyxXQUFMLENBQWlCLEVBQWpCLENBQWI7QUFDRCxHQUhNLE1BR0EsSUFBSSxLQUFLLFVBQVQsRUFBcUI7QUFDMUIsU0FBSyxnQkFBTCxHQUF3QixLQUFLLE9BQUwsS0FBaUIsRUFBekM7QUFDQSxTQUFLLE9BQUwsQ0FBYSxLQUFLLFVBQWxCO0FBQ0Q7QUFDRixDQVhEOztBQWFBLE9BQU8sU0FBUCxDQUFpQixVQUFqQixHQUE4QixVQUFTLEVBQVQsRUFBYTtBQUN6QyxTQUFPLEtBQUssV0FBTCxDQUFpQixFQUFqQixLQUF3QixDQUEvQjtBQUNELENBRkQ7O0FBSUEsT0FBTyxTQUFQLENBQWlCLGFBQWpCLEdBQWlDLFlBQVk7QUFDM0MsTUFBSSxZQUFZLEtBQWhCO0FBQ0EsTUFBSSxRQUFKLEVBQWMsUUFBZDtBQUNBLE1BQUksT0FBTyxJQUFYOztBQUVBLE9BQUssUUFBTCxHQUFnQixLQUFoQjtBQUNBLE9BQUssZUFBTCxHQUF1QixLQUF2Qjs7QUFFQSxNQUFJLGNBQUo7QUFDQSxNQUFJLFlBQUo7QUFDQSxNQUFJLFlBQUo7QUFDQSxNQUFJLGtCQUFKO0FBQ0EsTUFBSSxlQUFKO0FBQ0EsTUFBSSxNQUFKO0FBQ0EsTUFBSSxNQUFKOztBQUVBLE9BQUssU0FBTCxDQUFlLFNBQWYsQ0FBeUIsVUFBVSxDQUFWLEVBQWE7O0FBRXBDLFFBQUksU0FBSixFQUFlO0FBQ2IsV0FBSyxNQUFMLElBQWUsQ0FBQyxXQUFXLEVBQUUsS0FBZCxJQUF1QixLQUFLLEtBQTNDO0FBQ0EsV0FBSyxNQUFMLElBQWUsQ0FBQyxXQUFXLEVBQUUsS0FBZCxJQUF1QixLQUFLLEtBQTNDOztBQUVBLFdBQUssY0FBTDs7QUFFQSxpQkFBVyxFQUFFLEtBQWI7QUFDQSxpQkFBVyxFQUFFLEtBQWI7O0FBRUEsV0FBSyxRQUFMLEdBQWdCLElBQWhCO0FBQ0EsVUFBSSxLQUFLLGVBQVQsRUFBMEI7QUFDeEIscUJBQWEsS0FBSyxlQUFsQjtBQUNEOztBQUVELFdBQUssU0FBTCxDQUFlLE9BQWYsQ0FBdUIsTUFBdkI7QUFDRDs7QUFFRCxXQUFPLEtBQVA7QUFFRCxHQXJCRCxFQXFCRyxTQXJCSCxDQXFCYSxVQUFVLENBQVYsRUFBYTs7QUFFeEIsZ0JBQVksSUFBWjtBQUNBLGVBQVcsRUFBRSxLQUFiO0FBQ0EsZUFBVyxFQUFFLEtBQWI7O0FBRUEsV0FBTyxLQUFQO0FBRUQsR0E3QkQsRUE2QkcsT0E3QkgsQ0E2QlcsWUFBWTs7QUFFckIsZ0JBQVksS0FBWjs7QUFFQSxpQkFBYSxLQUFLLGVBQWxCO0FBQ0EsU0FBSyxlQUFMLEdBQXVCLFdBQVcsWUFBWTtBQUM1QyxXQUFLLFFBQUwsR0FBZ0IsS0FBaEI7QUFDRCxLQUZzQixFQUVwQixHQUZvQixDQUF2Qjs7QUFJQSxXQUFPLEtBQVA7QUFFRCxHQXhDRCxFQXdDRyxRQXhDSCxDQXdDWSxZQUFZOztBQUV0QixRQUFHLGFBQWEsS0FBSyxRQUFyQixFQUE4Qjs7QUFFNUIsbUJBQWEsS0FBSyxlQUFsQjtBQUNBLFdBQUssZUFBTCxHQUF1QixXQUFXLFlBQVk7QUFDNUMsb0JBQVksS0FBWjtBQUNBLGFBQUssUUFBTCxHQUFnQixLQUFoQjtBQUNELE9BSHNCLEVBR3BCLEdBSG9CLENBQXZCOztBQUtBLGFBQU8sS0FBUDtBQUNEO0FBQ0YsR0FwREQ7O0FBc0RBLFNBQU8sS0FBSyxTQUFaLEVBQXVCLElBQXZCLENBQTRCLFdBQTVCLEVBQXlDLFVBQVUsQ0FBVixFQUFhOztBQUVwRCxRQUFJLE1BQUo7QUFDQSxRQUFJLEtBQUo7QUFDQSxRQUFJLFVBQVUsRUFBRSxhQUFGLENBQWdCLE9BQTlCO0FBQ0EsUUFBSSxhQUFKO0FBQ0EsUUFBSSxhQUFKOztBQUVBLFFBQUksUUFBUSxNQUFSLEtBQW1CLENBQXZCLEVBQTBCO0FBQ3hCLFVBQUksbUJBQW1CLENBQXZCLEVBQTBCOztBQUV4QixZQUFHLFdBQVcsUUFBUSxDQUFSLEVBQVcsS0FBdEIsSUFBK0IsV0FBVyxRQUFRLENBQVIsRUFBVyxLQUF4RCxFQUE4RDtBQUM1RDtBQUNEOztBQUVELHdCQUFnQixLQUFLLE1BQXJCO0FBQ0Esd0JBQWdCLEtBQUssTUFBckI7O0FBRUEsYUFBSyxNQUFMLElBQWUsQ0FBQyxTQUFTLFFBQVEsQ0FBUixFQUFXLEtBQXJCLElBQThCLEtBQUssS0FBbEQ7QUFDQSxhQUFLLE1BQUwsSUFBZSxDQUFDLFNBQVMsUUFBUSxDQUFSLEVBQVcsS0FBckIsSUFBOEIsS0FBSyxLQUFsRDs7QUFFQSxhQUFLLGNBQUw7O0FBRUEsWUFBSSxrQkFBa0IsS0FBSyxNQUF2QixJQUFpQyxrQkFBa0IsS0FBSyxNQUE1RCxFQUFvRTtBQUNsRSxZQUFFLGNBQUY7QUFDRDs7QUFFRCxhQUFLLFFBQUwsR0FBZ0IsSUFBaEI7QUFDQSxZQUFJLEtBQUssZUFBVCxFQUEwQjtBQUN4Qix1QkFBYSxLQUFLLGVBQWxCO0FBQ0Q7QUFDRjs7QUFFRCxlQUFTLFFBQVEsQ0FBUixFQUFXLEtBQXBCO0FBQ0EsZUFBUyxRQUFRLENBQVIsRUFBVyxLQUFwQjtBQUVELEtBNUJELE1BNEJPLElBQUksUUFBUSxNQUFSLEtBQW1CLENBQXZCLEVBQTBCOztBQUUvQixVQUFJLG1CQUFtQixDQUF2QixFQUEwQjtBQUN4QixnQkFBUSxLQUFLLElBQUwsQ0FDSixLQUFLLEdBQUwsQ0FBUyxRQUFRLENBQVIsRUFBVyxLQUFYLEdBQW1CLFFBQVEsQ0FBUixFQUFXLEtBQXZDLEVBQThDLENBQTlDLElBQ0EsS0FBSyxHQUFMLENBQVMsUUFBUSxDQUFSLEVBQVcsS0FBWCxHQUFtQixRQUFRLENBQVIsRUFBVyxLQUF2QyxFQUE4QyxDQUE5QyxDQUZJLElBR0Ysa0JBSE47O0FBS0EsYUFBSyxRQUFMLENBQ0Usa0JBQWtCLEtBRHBCLEVBRUUsWUFGRixFQUdFLFlBSEY7O0FBTUEsVUFBRSxjQUFGO0FBRUQsT0FkRCxNQWNPOztBQUVMLGlCQUFTLE9BQU8sS0FBSyxTQUFaLEVBQXVCLE1BQXZCLEVBQVQ7QUFDQSxZQUFJLFFBQVEsQ0FBUixFQUFXLEtBQVgsR0FBbUIsUUFBUSxDQUFSLEVBQVcsS0FBbEMsRUFBeUM7QUFDdkMseUJBQWUsUUFBUSxDQUFSLEVBQVcsS0FBWCxHQUFtQixDQUFDLFFBQVEsQ0FBUixFQUFXLEtBQVgsR0FBbUIsUUFBUSxDQUFSLEVBQVcsS0FBL0IsSUFBd0MsQ0FBMUU7QUFDRCxTQUZELE1BRU87QUFDTCx5QkFBZSxRQUFRLENBQVIsRUFBVyxLQUFYLEdBQW1CLENBQUMsUUFBUSxDQUFSLEVBQVcsS0FBWCxHQUFtQixRQUFRLENBQVIsRUFBVyxLQUEvQixJQUF3QyxDQUExRTtBQUNEOztBQUVELFlBQUksUUFBUSxDQUFSLEVBQVcsS0FBWCxHQUFtQixRQUFRLENBQVIsRUFBVyxLQUFsQyxFQUF5QztBQUN2Qyx5QkFBZSxRQUFRLENBQVIsRUFBVyxLQUFYLEdBQW1CLENBQUMsUUFBUSxDQUFSLEVBQVcsS0FBWCxHQUFtQixRQUFRLENBQVIsRUFBVyxLQUEvQixJQUF3QyxDQUExRTtBQUNELFNBRkQsTUFFTztBQUNMLHlCQUFlLFFBQVEsQ0FBUixFQUFXLEtBQVgsR0FBbUIsQ0FBQyxRQUFRLENBQVIsRUFBVyxLQUFYLEdBQW1CLFFBQVEsQ0FBUixFQUFXLEtBQS9CLElBQXdDLENBQTFFO0FBQ0Q7O0FBRUQsd0JBQWdCLE9BQU8sSUFBdkI7QUFDQSx3QkFBZ0IsT0FBTyxHQUF2QjtBQUNBLDBCQUFrQixLQUFLLEtBQXZCOztBQUVBLDZCQUFxQixLQUFLLElBQUwsQ0FDbkIsS0FBSyxHQUFMLENBQVMsUUFBUSxDQUFSLEVBQVcsS0FBWCxHQUFtQixRQUFRLENBQVIsRUFBVyxLQUF2QyxFQUE4QyxDQUE5QyxJQUNBLEtBQUssR0FBTCxDQUFTLFFBQVEsQ0FBUixFQUFXLEtBQVgsR0FBbUIsUUFBUSxDQUFSLEVBQVcsS0FBdkMsRUFBOEMsQ0FBOUMsQ0FGbUIsQ0FBckI7QUFJRDtBQUNGOztBQUVELHFCQUFpQixRQUFRLE1BQXpCO0FBQ0QsR0EvRUQ7O0FBaUZBLFNBQU8sS0FBSyxTQUFaLEVBQXVCLElBQXZCLENBQTRCLFlBQTVCLEVBQTBDLFlBQVk7QUFDcEQscUJBQWlCLENBQWpCO0FBQ0QsR0FGRDs7QUFJQSxTQUFPLEtBQUssU0FBWixFQUF1QixJQUF2QixDQUE0QixVQUE1QixFQUF3QyxZQUFZO0FBQ2xELHFCQUFpQixDQUFqQjtBQUNELEdBRkQ7QUFHRCxDQTlKRDs7QUFnS0EsT0FBTyxTQUFQLENBQWlCLFNBQWpCLEdBQTZCLFVBQVMsSUFBVCxFQUFlLE9BQWYsRUFBdUI7QUFDbEQsTUFBSSxNQUFNLElBQVY7O0FBRUEsTUFBRyxDQUFDLE9BQUQsSUFBYSxZQUFZLFNBQVosSUFBeUIsWUFBWSxJQUFyRCxFQUE0RDtBQUMxRCxjQUFVLFNBQVY7QUFDRDs7QUFFRCxNQUFHLFlBQVksU0FBZixFQUEwQjtBQUFDO0FBQ3pCLFdBQU8sSUFBUCxDQUFZLElBQVosRUFBa0IsVUFBUyxLQUFULEVBQWdCLEdBQWhCLEVBQW9CO0FBQ3BDLFVBQUcsT0FBTyxNQUFNLElBQUksWUFBSixDQUFpQixLQUFqQixDQUFiLEVBQXNDLE1BQXRDLEtBQWlELENBQXBELEVBQXNEO0FBQ3BEO0FBQ0Q7O0FBRUQsVUFBSSxXQUFXLElBQUksUUFBSixDQUFhLEtBQWIsQ0FBZjtBQUNBLFVBQUksT0FBTyxPQUFPLE1BQU0sUUFBYixDQUFYO0FBQ0EsVUFBRyxLQUFLLE1BQUwsR0FBYyxDQUFqQixFQUFtQjtBQUNqQixhQUFLLE1BQUw7QUFDRDtBQUNELFVBQUksU0FBSixDQUFjLE1BQWQsQ0FBcUIsY0FBYyxRQUFkLEdBQXlCLFNBQXpCLEdBQXFDLEtBQXJDLEdBQTZDLGlEQUE3QyxHQUFpRyxHQUFqRyxHQUF1RyxRQUE1SDtBQUNELEtBWEQ7QUFZRCxHQWJELE1BYU87QUFBRTtBQUNQLFdBQU8sSUFBUCxDQUFZLElBQVosRUFBa0IsVUFBUyxLQUFULEVBQWdCLEdBQWhCLEVBQW9CO0FBQ3BDLFVBQUcsT0FBTyxNQUFNLElBQUksWUFBSixDQUFpQixLQUFqQixDQUFiLEVBQXNDLE1BQXRDLEtBQWlELENBQXBELEVBQXNEO0FBQ3BEO0FBQ0Q7QUFDRCxVQUFJLFdBQVcsSUFBSSxRQUFKLENBQWEsS0FBYixDQUFmO0FBQ0EsVUFBSSxPQUFPLE9BQU8sTUFBTSxRQUFiLENBQVg7QUFDQSxVQUFHLEtBQUssTUFBTCxHQUFjLENBQWpCLEVBQW1CO0FBQ2pCLGFBQUssTUFBTDtBQUNEO0FBQ0QsVUFBSSxTQUFKLENBQWMsTUFBZCxDQUFxQixjQUFjLFFBQWQsR0FBeUIsU0FBekIsR0FBcUMsS0FBckMsR0FBNkMsdURBQWxFO0FBQ0EsV0FBSyxNQUFMLENBQVksT0FBTyxNQUFNLEdBQWIsQ0FBWjtBQUNELEtBWEQ7QUFZRDs7QUFFRCxPQUFLLFlBQUw7QUFDQSxNQUFHLENBQUMsS0FBSyxXQUFULEVBQXFCO0FBQ25CLFNBQUssV0FBTCxHQUFtQixJQUFuQjtBQUNBLFFBQUksY0FBYyxTQUFkLFdBQWMsR0FBVTtBQUMxQixVQUFJLFlBQUo7QUFDRCxLQUZEO0FBR0EsU0FBSyxTQUFMLENBQWUsSUFBZixDQUFvQixRQUFwQixFQUE4QixXQUE5QixFQUNHLElBREgsQ0FDUSxTQURSLEVBQ21CLFdBRG5CLEVBRUcsSUFGSCxDQUVRLE1BRlIsRUFFZ0IsV0FGaEI7QUFHRDtBQUNGLENBN0NEOztBQStDQSxPQUFPLFNBQVAsQ0FBaUIsWUFBakIsR0FBZ0MsWUFBVTtBQUN4QyxNQUFJLE1BQU0sSUFBVjtBQUNBLE1BQUksT0FBTyxLQUFLLFNBQUwsQ0FBZSxJQUFmLENBQW9CLGFBQXBCLENBQVg7QUFDQSxTQUFPLElBQVAsQ0FBWSxJQUFaLEVBQWtCLFVBQVMsS0FBVCxFQUFnQixNQUFoQixFQUF1QjtBQUN2QyxhQUFTLE9BQU8sTUFBUCxDQUFUO0FBQ0EsUUFBSSxZQUFZLElBQUksWUFBSixDQUFpQixPQUFPLElBQVAsQ0FBWSxLQUFaLEVBQW1CLFdBQW5CLEVBQWpCLENBQWhCO0FBQ0EsUUFBSSxhQUFhLE9BQU8sTUFBTSxTQUFiLENBQWpCO0FBQ0EsUUFBSSxPQUFPLFdBQVcsQ0FBWCxFQUFjLE9BQWQsRUFBWDs7QUFFQSxRQUFJLFFBQVEsSUFBSSxLQUFoQjtBQUNBLFFBQUksYUFBYSxJQUFJLE1BQUosQ0FBVyxTQUFYLENBQXFCLHFCQUFyQixFQUFqQjtBQUNBLFFBQUksWUFBWSxJQUFJLFNBQUosQ0FBYyxDQUFkLEVBQWlCLHFCQUFqQixFQUFoQjtBQUNBLFFBQUksU0FBUztBQUNYLFlBQU0sV0FBVyxJQUFYLEdBQWtCLFVBQVUsSUFEdkI7QUFFWCxXQUFLLFdBQVcsR0FBWCxHQUFpQixVQUFVO0FBRnJCLEtBQWI7O0FBS0EsUUFBSSxVQUFXLEtBQUssQ0FBTCxHQUFTLEtBQVYsR0FBcUIsS0FBSyxLQUFMLEdBQWEsS0FBZCxHQUF1QixDQUF6RDtBQUNBLFFBQUksVUFBVyxLQUFLLENBQUwsR0FBUyxLQUFWLEdBQXFCLEtBQUssTUFBTCxHQUFjLEtBQWYsR0FBd0IsQ0FBMUQ7O0FBRUEsV0FBTyxHQUFQLENBQVc7QUFDVCxZQUFNLE9BQU8sSUFBUCxHQUFjLE9BQWQsR0FBeUIsT0FBTyxLQUFQLEtBQWlCLENBRHZDO0FBRVQsV0FBSyxPQUFPLEdBQVAsR0FBYSxPQUFiLEdBQXdCLE9BQU8sTUFBUCxLQUFrQjtBQUZ0QyxLQUFYO0FBSUQsR0FyQkQ7QUFzQkQsQ0F6QkQ7O0FBMkJBLE9BQU8sU0FBUCxDQUFpQixTQUFqQixHQUE2QixVQUFTLEVBQVQsRUFBYTtBQUN4QyxPQUFLLEdBQUcsV0FBSCxFQUFMO0FBQ0EsU0FBTyxNQUFNLEtBQUssUUFBTCxDQUFjLEVBQWQsQ0FBYixFQUFnQyxNQUFoQztBQUNELENBSEQ7O0FBS0EsT0FBTyxTQUFQLENBQWlCLFVBQWpCLEdBQThCLFlBQVU7QUFDdEMsT0FBSyxTQUFMLENBQWUsSUFBZixDQUFvQixhQUFwQixFQUFtQyxNQUFuQztBQUNELENBRkQ7O0FBSUEsT0FBTyxTQUFQLENBQWlCLEtBQWpCLEdBQXlCLFlBQVk7QUFDbkMsT0FBSyxJQUFJLEdBQVQsSUFBZ0IsS0FBSyxTQUFyQixFQUFnQztBQUM5QixTQUFLLFNBQUwsQ0FBZSxHQUFmLEVBQW9CLE9BQXBCLENBQTRCLEtBQUssS0FBakM7QUFDRDtBQUNELE9BQUssS0FBTCxHQUFhLEtBQUssU0FBbEI7QUFDQSxPQUFLLE1BQUwsR0FBYyxLQUFLLFVBQW5CO0FBQ0EsT0FBSyxNQUFMLEdBQWMsS0FBSyxVQUFuQjtBQUNBLE9BQUssY0FBTDtBQUNELENBUkQ7O0FBVUEsT0FBTyxTQUFQLENBQWlCLE1BQWpCLEdBQTBCLFlBQVk7QUFDcEMsTUFBSSxlQUFlLEtBQUssU0FBeEI7QUFDQSxNQUFJLEtBQUssS0FBTCxHQUFhLEtBQUssTUFBbEIsR0FBMkIsS0FBSyxZQUFMLEdBQW9CLEtBQUssYUFBeEQsRUFBdUU7QUFDckUsU0FBSyxTQUFMLEdBQWlCLEtBQUssTUFBTCxHQUFjLEtBQUssYUFBcEM7QUFDQSxTQUFLLFVBQUwsR0FBa0IsS0FBSyxHQUFMLENBQVMsS0FBSyxLQUFMLEdBQWEsS0FBSyxZQUFMLEdBQW9CLEtBQUssU0FBL0MsS0FBNkQsSUFBSSxLQUFLLFNBQXRFLENBQWxCO0FBQ0QsR0FIRCxNQUdPO0FBQ0wsU0FBSyxTQUFMLEdBQWlCLEtBQUssS0FBTCxHQUFhLEtBQUssWUFBbkM7QUFDQSxTQUFLLFVBQUwsR0FBa0IsS0FBSyxHQUFMLENBQVMsS0FBSyxNQUFMLEdBQWMsS0FBSyxhQUFMLEdBQXFCLEtBQUssU0FBakQsS0FBK0QsSUFBSSxLQUFLLFNBQXhFLENBQWxCO0FBQ0Q7QUFDRCxPQUFLLEtBQUwsSUFBYyxLQUFLLFNBQUwsR0FBaUIsWUFBL0I7QUFDQSxPQUFLLE1BQUwsSUFBZSxLQUFLLFNBQUwsR0FBaUIsWUFBaEM7QUFDQSxPQUFLLE1BQUwsSUFBZSxLQUFLLFNBQUwsR0FBaUIsWUFBaEM7QUFDRCxDQVpEOztBQWNBLE9BQU8sU0FBUCxDQUFpQixNQUFqQixHQUEwQixVQUFVLEVBQVYsRUFBYyxJQUFkLEVBQW9CO0FBQzVDLE9BQUssR0FBRyxXQUFILEVBQUw7QUFDQSxTQUFPLFFBQVEsT0FBTyxNQUFNLEtBQUssWUFBTCxDQUFrQixFQUFsQixDQUFiLEVBQW9DLENBQXBDLENBQWY7O0FBRUEsTUFBSSxDQUFDLEtBQUssVUFBTCxDQUFnQixFQUFoQixDQUFMLEVBQTBCO0FBQ3hCLFFBQUksS0FBSyxpQkFBVCxFQUE0QjtBQUMxQixXQUFLLGVBQUwsQ0FBcUIsSUFBckIsQ0FBMEIsRUFBMUI7QUFDRCxLQUZELE1BRU87QUFDTCxXQUFLLGVBQUwsR0FBdUIsQ0FBQyxFQUFELENBQXZCO0FBQ0Q7O0FBRUQsV0FBTyxLQUFLLFNBQVosRUFBdUIsT0FBdkIsQ0FBK0IscUJBQS9CLEVBQXNELENBQUMsRUFBRCxDQUF0RDtBQUNBLFFBQUksS0FBSyxhQUFMLElBQXNCLElBQTFCLEVBQWdDO0FBQzlCLFdBQUssZ0JBQUwsR0FBd0IsS0FBSyxhQUE3QjtBQUNBLFdBQUssT0FBTCxDQUFhLEtBQUssYUFBbEI7QUFDRDtBQUNGO0FBQ0YsQ0FqQkQ7O0FBbUJBLE9BQU8sU0FBUCxDQUFpQixXQUFqQixHQUErQixVQUFVLEVBQVYsRUFBYztBQUMzQyxPQUFLLEdBQUcsV0FBSCxFQUFMO0FBQ0EsT0FBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLEtBQUssZUFBTCxDQUFxQixNQUF6QyxFQUFpRCxHQUFqRCxFQUFzRDtBQUNwRCxRQUFJLE9BQU8sS0FBSyxlQUFMLENBQXFCLENBQXJCLENBQVgsRUFBb0M7QUFDbEMsYUFBTyxDQUFQO0FBQ0Q7QUFDRjtBQUNELFNBQU8sQ0FBQyxDQUFSO0FBQ0QsQ0FSRDs7QUFVQSxPQUFPLFNBQVAsQ0FBaUIsa0JBQWpCLEdBQXNDLFVBQVUsZUFBVixFQUEyQjtBQUMvRCxPQUFLLFNBQUwsQ0FBZSxHQUFmLENBQW1CLGtCQUFuQixFQUF1QyxlQUF2QztBQUNELENBRkQ7O0FBSUEsT0FBTyxTQUFQLENBQWlCLFNBQWpCLEdBQTZCLFVBQVUsR0FBVixFQUFlLEtBQWYsRUFBc0I7QUFDakQsTUFBSSxPQUFPLEdBQVAsS0FBZSxRQUFuQixFQUE2QjtBQUMzQixTQUFLLFNBQUwsQ0FBZSxHQUFmLEVBQW9CLE9BQXBCLENBQTRCLEtBQTVCO0FBQ0EsU0FBSyxTQUFMLENBQWUsR0FBZixFQUFvQixZQUFwQixDQUFpQyxVQUFqQyxFQUE2QyxLQUE3QztBQUNELEdBSEQsTUFHTztBQUNMLFFBQUksU0FBUyxHQUFiOztBQUVBLFNBQUssSUFBSSxJQUFULElBQWlCLE1BQWpCLEVBQXlCO0FBQ3ZCLFVBQUksS0FBSyxTQUFMLENBQWUsSUFBZixDQUFKLEVBQTBCO0FBQ3hCLGFBQUssU0FBTCxDQUFlLElBQWYsRUFBcUIsT0FBckIsQ0FBNkIsT0FBTyxJQUFQLENBQTdCO0FBQ0EsYUFBSyxTQUFMLENBQWUsSUFBZixFQUFxQixZQUFyQixDQUFrQyxVQUFsQyxFQUE4QyxPQUFPLElBQVAsQ0FBOUM7QUFDRDtBQUNGO0FBQ0Y7QUFDRixDQWREOztBQWdCQSxPQUFPLFNBQVAsQ0FBaUIsb0JBQWpCLEdBQXdDLFVBQVUsQ0FBVixFQUFhO0FBQ25ELE9BQUssVUFBTCxDQUFnQixvQkFBaEIsQ0FBcUMsQ0FBckM7O0FBRUEsTUFBSSxLQUFLLE1BQVQsRUFBaUI7QUFDZixTQUFLLFNBQUwsQ0FBZSxLQUFLLE1BQXBCO0FBQ0Q7QUFDRixDQU5EOztBQVFBLE9BQU8sU0FBUCxDQUFpQixRQUFqQixHQUE0QixVQUFVLEtBQVYsRUFBaUI7QUFDM0MsT0FBSyxLQUFMLEdBQWEsS0FBYjtBQUNBLE9BQUssY0FBTDtBQUNELENBSEQ7O0FBS0EsT0FBTyxTQUFQLENBQWlCLGNBQWpCLEdBQWtDLFVBQVUsTUFBVixFQUFrQjtBQUNsRCxPQUFLLFVBQUwsQ0FBZ0IsU0FBaEIsQ0FBMEIsTUFBMUI7O0FBRUEsTUFBSSxLQUFLLE1BQVQsRUFBaUI7QUFDZixTQUFLLFNBQUwsQ0FBZSxLQUFLLE1BQXBCO0FBQ0Q7QUFDRixDQU5EOztBQVFBLE9BQU8sU0FBUCxDQUFpQixTQUFqQixHQUE2QixVQUFVLE1BQVYsRUFBa0I7QUFDN0MsTUFBSSxNQUFNLENBQVY7QUFBQSxNQUNFLE1BQU0sT0FBTyxTQURmO0FBQUEsTUFFRSxHQUZGOztBQUlBLE9BQUssSUFBSSxFQUFULElBQWUsTUFBZixFQUF1QjtBQUNyQixTQUFLLEdBQUcsV0FBSCxFQUFMO0FBQ0EsVUFBTSxXQUFXLE9BQU8sRUFBUCxDQUFYLENBQU47O0FBRUEsUUFBSSxNQUFNLEdBQU4sQ0FBSixFQUFnQjtBQUNkO0FBQ0Q7QUFDRCxRQUFJLE1BQU0sR0FBVixFQUFlO0FBQ2IsWUFBTSxPQUFPLEVBQVAsQ0FBTjtBQUNEO0FBQ0QsUUFBSSxNQUFNLEdBQVYsRUFBZTtBQUNiLFlBQU0sR0FBTjtBQUNEO0FBQ0Y7O0FBRUQsTUFBSSxRQUFRLEdBQVosRUFBaUI7QUFDZjtBQUNEOztBQUVELE9BQUssVUFBTCxDQUFnQixNQUFoQixDQUF1QixHQUF2QjtBQUNBLE9BQUssVUFBTCxDQUFnQixNQUFoQixDQUF1QixHQUF2Qjs7QUFFQSxNQUFJLFNBQVMsRUFBYjtBQUNBLE9BQUssRUFBTCxJQUFXLE1BQVgsRUFBbUI7QUFDakIsU0FBSyxHQUFHLFdBQUgsRUFBTDtBQUNBLFVBQU0sV0FBVyxPQUFPLEVBQVAsQ0FBWCxDQUFOO0FBQ0EsV0FBTyxFQUFQLElBQWEsTUFBTSxHQUFOLElBQWEsS0FBSyxLQUFsQixHQUEwQixLQUFLLFVBQUwsQ0FBZ0IsUUFBaEIsQ0FBeUIsR0FBekIsQ0FBdkM7QUFDRDtBQUNELE9BQUssU0FBTCxDQUFlLE1BQWY7QUFDQSxPQUFLLE1BQUwsR0FBYyxNQUFkO0FBQ0QsQ0FuQ0Q7O0FBcUNBLE9BQU8sU0FBUCxDQUFpQixXQUFqQixHQUErQixVQUFVLEVBQVYsRUFBYyxJQUFkLEVBQW9CO0FBQ2pELE9BQUssR0FBRyxXQUFILEVBQUw7QUFDQSxTQUFPLFFBQVEsT0FBTyxNQUFNLEtBQUssWUFBTCxDQUFrQixFQUFsQixDQUFiLEVBQW9DLENBQXBDLENBQWY7QUFDQSxPQUFLLFVBQUwsQ0FBZ0IsQ0FBaEI7QUFDQSxNQUFJLEtBQUssZ0JBQVQsRUFBMkI7QUFDekIsU0FBSyxPQUFMLENBQWEsS0FBSyxnQkFBbEI7QUFDRDtBQUNGLENBUEQ7O0FBU0EsT0FBTyxTQUFQLENBQWlCLE1BQWpCLEdBQTBCLFlBQVk7QUFDcEMsTUFBSSxNQUFNLElBQVY7QUFDQSxNQUFJLGNBQWMsQ0FBQyxPQUFPLE9BQVAsRUFBZ0IsV0FBaEIsS0FBZ0MsSUFBSSxDQUFwQyxHQUF3QyxLQUFLLENBQTdDLEdBQWlELElBQUksQ0FBckQsR0FBeUQsQ0FBekQsR0FBNkQsQ0FBOUQsS0FBb0UsS0FBSyxXQUFMLEdBQW1CLEtBQUssV0FBNUYsQ0FBbEI7O0FBRUEsTUFBSSxJQUFJLFdBQUosR0FBa0IsSUFBSSxXQUExQixFQUF1QztBQUNyQyxRQUFJLE1BQUosSUFBYyxDQUFDLElBQUksS0FBSixHQUFZLElBQUksS0FBaEIsR0FBd0IsSUFBSSxLQUFKLElBQWEsSUFBSSxLQUFKLEdBQVksSUFBSSxRQUE3QixDQUF6QixJQUFtRSxDQUFqRjtBQUNBLFFBQUksTUFBSixJQUFjLENBQUMsSUFBSSxNQUFKLEdBQWEsSUFBSSxLQUFqQixHQUF5QixJQUFJLE1BQUosSUFBYyxJQUFJLEtBQUosR0FBWSxJQUFJLFFBQTlCLENBQTFCLElBQXFFLENBQW5GO0FBQ0EsUUFBSSxRQUFKLENBQWEsSUFBSSxLQUFKLEdBQVksSUFBSSxRQUE3QjtBQUNBLFFBQUksV0FBSjs7QUFFQSxRQUFJLFVBQVUsT0FBTyxhQUFQLENBQWQ7O0FBRUEsWUFBUSxHQUFSLENBQVksS0FBWixFQUFtQixTQUFTLFFBQVEsR0FBUixDQUFZLEtBQVosQ0FBVCxFQUE2QixFQUE3QixJQUFtQyxXQUF0RDs7QUFFQSxRQUFJLFNBQUosQ0FBYyxPQUFkLENBQXNCLFFBQXRCO0FBQ0Q7QUFDRixDQWhCRDs7QUFrQkEsT0FBTyxTQUFQLENBQWlCLE9BQWpCLEdBQTJCLFlBQVk7QUFDckMsTUFBSSxNQUFNLElBQVY7QUFDQSxNQUFJLGNBQWMsQ0FBQyxPQUFPLE9BQVAsRUFBZ0IsV0FBaEIsS0FBZ0MsSUFBSSxDQUFwQyxHQUF3QyxLQUFLLENBQTdDLEdBQWlELElBQUksQ0FBckQsR0FBeUQsQ0FBekQsR0FBNkQsQ0FBOUQsS0FBb0UsS0FBSyxXQUFMLEdBQW1CLEtBQUssV0FBNUYsQ0FBbEI7O0FBRUEsTUFBSSxJQUFJLFdBQUosR0FBa0IsQ0FBdEIsRUFBeUI7QUFDdkIsUUFBSSxNQUFKLElBQWMsQ0FBQyxJQUFJLEtBQUosSUFBYSxJQUFJLEtBQUosR0FBWSxJQUFJLFFBQTdCLElBQXlDLElBQUksS0FBSixHQUFZLElBQUksS0FBMUQsSUFBbUUsQ0FBakY7QUFDQSxRQUFJLE1BQUosSUFBYyxDQUFDLElBQUksTUFBSixJQUFjLElBQUksS0FBSixHQUFZLElBQUksUUFBOUIsSUFBMEMsSUFBSSxNQUFKLEdBQWEsSUFBSSxLQUE1RCxJQUFxRSxDQUFuRjtBQUNBLFFBQUksUUFBSixDQUFhLElBQUksS0FBSixHQUFZLElBQUksUUFBN0I7QUFDQSxRQUFJLFdBQUo7O0FBRUEsUUFBSSxVQUFVLE9BQU8sYUFBUCxDQUFkOztBQUVBLFlBQVEsR0FBUixDQUFZLEtBQVosRUFBbUIsU0FBUyxRQUFRLEdBQVIsQ0FBWSxLQUFaLENBQVQsRUFBNkIsRUFBN0IsSUFBbUMsV0FBdEQ7O0FBRUEsUUFBSSxTQUFKLENBQWMsT0FBZCxDQUFzQixTQUF0QjtBQUNEO0FBQ0YsQ0FoQkQ7O0FBa0JBLGFBQWEsU0FBYixDQUF1QixvQkFBdkIsR0FBOEMsVUFBVSxLQUFWLEVBQWlCLE1BQWpCLEVBQXlCLE1BQXpCLEVBQWlDO0FBQzdFLE1BQUksS0FBSyxJQUFMLEtBQWMsS0FBbEIsRUFBeUI7QUFDdkIsU0FBSyxTQUFMLENBQWUsWUFBZixDQUE0QixXQUE1QixFQUF5QyxXQUFXLEtBQVgsR0FBbUIsY0FBbkIsR0FBb0MsTUFBcEMsR0FBNkMsSUFBN0MsR0FBb0QsTUFBcEQsR0FBNkQsR0FBdEc7QUFDRCxHQUZELE1BRU87QUFDTCxTQUFLLFNBQUwsQ0FBZSxXQUFmLEdBQThCLEtBQUssS0FBTCxHQUFhLE1BQWQsR0FBd0IsR0FBeEIsSUFBK0IsS0FBSyxNQUFMLEdBQWMsTUFBN0MsQ0FBN0I7QUFDQSxTQUFLLFNBQUwsQ0FBZSxTQUFmLEdBQTJCLEtBQUssS0FBTCxHQUFhLEtBQWIsR0FBcUIsR0FBckIsR0FBMkIsS0FBSyxNQUFMLEdBQWMsS0FBcEU7QUFDRDtBQUNGLENBUEQ7O0FBU0EsYUFBYSxTQUFiLENBQXVCLFdBQXZCLEdBQXFDLFVBQVUsTUFBVixFQUFrQjtBQUNyRCxNQUFJLElBQUo7QUFDQSxNQUFJLEtBQUssSUFBTCxLQUFjLEtBQWxCLEVBQXlCO0FBQ3ZCLFdBQU8sS0FBSyxhQUFMLENBQW1CLEdBQW5CLENBQVA7QUFDRCxHQUZELE1BRU87QUFDTCxXQUFPLEtBQUssYUFBTCxDQUFtQixPQUFuQixDQUFQO0FBQ0EsU0FBSyxLQUFMLENBQVcsS0FBWCxHQUFtQixLQUFLLEtBQUwsR0FBYSxJQUFoQztBQUNBLFNBQUssS0FBTCxDQUFXLE1BQVgsR0FBb0IsS0FBSyxNQUFMLEdBQWMsSUFBbEM7QUFDQSxTQUFLLEtBQUwsQ0FBVyxJQUFYLEdBQWtCLEtBQWxCO0FBQ0EsU0FBSyxLQUFMLENBQVcsR0FBWCxHQUFpQixLQUFqQjtBQUNBLFNBQUssV0FBTCxHQUFtQixLQUFuQjtBQUNBLFNBQUssU0FBTCxHQUFpQixLQUFLLEtBQUwsR0FBYSxHQUFiLEdBQW1CLEtBQUssTUFBekM7QUFDRDs7QUFFRCxNQUFJLE1BQUosRUFBWTtBQUNWLFNBQUssU0FBTCxHQUFpQixJQUFqQjtBQUNEO0FBQ0QsU0FBTyxJQUFQO0FBQ0QsQ0FsQkQ7O0FBb0JBLGFBQWEsU0FBYixDQUF1QixVQUF2QixHQUFvQyxVQUFVLE1BQVYsRUFBa0I7QUFDcEQsTUFBSSxJQUFKO0FBQ0EsTUFBSSxLQUFLLElBQUwsS0FBYyxLQUFsQixFQUF5QjtBQUN2QixXQUFPLEtBQUssYUFBTCxDQUFtQixNQUFuQixDQUFQO0FBQ0EsU0FBSyxZQUFMLENBQWtCLEdBQWxCLEVBQXVCLE9BQU8sSUFBOUI7O0FBRUEsUUFBSSxLQUFLLE1BQUwsQ0FBWSxXQUFaLEtBQTRCLElBQWhDLEVBQXNDO0FBQ3BDLFdBQUssWUFBTCxDQUFrQixRQUFsQixFQUE0QixLQUFLLE1BQUwsQ0FBWSxXQUF4QztBQUNEO0FBQ0QsUUFBSSxLQUFLLE1BQUwsQ0FBWSxXQUFaLEdBQTBCLENBQTlCLEVBQWlDO0FBQy9CLFdBQUssWUFBTCxDQUFrQixjQUFsQixFQUFrQyxLQUFLLE1BQUwsQ0FBWSxXQUE5QztBQUNBLFdBQUssWUFBTCxDQUFrQixnQkFBbEIsRUFBb0MsT0FBcEM7QUFDQSxXQUFLLFlBQUwsQ0FBa0IsaUJBQWxCLEVBQXFDLE9BQXJDO0FBQ0Q7QUFDRCxRQUFJLEtBQUssTUFBTCxDQUFZLGFBQVosR0FBNEIsQ0FBaEMsRUFBbUM7QUFDakMsV0FBSyxZQUFMLENBQWtCLGdCQUFsQixFQUFvQyxLQUFLLE1BQUwsQ0FBWSxhQUFoRDtBQUNEOztBQUVELFNBQUssT0FBTCxHQUFlLFVBQVUsS0FBVixFQUFpQjtBQUM5QixXQUFLLFlBQUwsQ0FBa0IsTUFBbEIsRUFBMEIsS0FBMUI7QUFDQSxVQUFJLEtBQUssWUFBTCxDQUFrQixVQUFsQixNQUFrQyxJQUF0QyxFQUE0QztBQUMxQyxhQUFLLFlBQUwsQ0FBa0IsVUFBbEIsRUFBOEIsS0FBOUI7QUFDRDtBQUNGLEtBTEQ7O0FBT0EsU0FBSyxPQUFMLEdBQWUsWUFBWTtBQUN6QixhQUFPLEtBQUssWUFBTCxDQUFrQixNQUFsQixDQUFQO0FBQ0QsS0FGRDs7QUFJQSxTQUFLLGVBQUwsR0FBdUIsWUFBWTtBQUNqQyxhQUFPLEtBQUssWUFBTCxDQUFrQixVQUFsQixDQUFQO0FBQ0QsS0FGRDs7QUFJQSxTQUFLLFVBQUwsR0FBa0IsVUFBVSxPQUFWLEVBQW1CO0FBQ25DLFdBQUssWUFBTCxDQUFrQixjQUFsQixFQUFrQyxPQUFsQztBQUNELEtBRkQ7QUFHRCxHQWxDRCxNQWtDTztBQUNMLFdBQU8sS0FBSyxhQUFMLENBQW1CLE9BQW5CLENBQVA7QUFDQSxTQUFLLFdBQUwsR0FBbUIsS0FBbkI7QUFDQSxTQUFLLFNBQUwsR0FBaUIsS0FBSyxLQUFMLEdBQWEsR0FBYixHQUFtQixLQUFLLE1BQXpDO0FBQ0EsU0FBSyxLQUFMLENBQVcsS0FBWCxHQUFtQixLQUFLLEtBQUwsR0FBYSxJQUFoQztBQUNBLFNBQUssS0FBTCxDQUFXLE1BQVgsR0FBb0IsS0FBSyxNQUFMLEdBQWMsSUFBbEM7QUFDQSxTQUFLLFNBQUwsR0FBaUIsT0FBTyxnQkFBeEI7QUFDQSxTQUFLLE9BQUwsR0FBZSxLQUFmO0FBQ0EsU0FBSyxJQUFMLEdBQVksYUFBYSxZQUFiLENBQTBCLE9BQU8sSUFBakMsQ0FBWjs7QUFFQSxRQUFJLFFBQVEsS0FBSyxhQUFMLENBQW1CLE1BQW5CLENBQVo7QUFDQSxVQUFNLEVBQU4sR0FBVyxJQUFYO0FBQ0EsVUFBTSxNQUFOLEdBQWUsbUJBQWY7QUFDQSxVQUFNLE1BQU4sR0FBZSxLQUFmOztBQUVBLFNBQUssV0FBTCxDQUFpQixLQUFqQjs7QUFFQSxRQUFJLE9BQU8sS0FBSyxhQUFMLENBQW1CLE1BQW5CLENBQVg7QUFDQSxTQUFLLFdBQUwsQ0FBaUIsSUFBakI7O0FBRUEsU0FBSyxPQUFMLEdBQWUsVUFBVSxLQUFWLEVBQWlCO0FBQzlCLFdBQUssb0JBQUwsQ0FBMEIsTUFBMUIsRUFBa0MsQ0FBbEMsRUFBcUMsS0FBckMsR0FBNkMsS0FBN0M7QUFDQSxVQUFJLEtBQUssWUFBTCxDQUFrQixVQUFsQixNQUFrQyxJQUF0QyxFQUE0QztBQUMxQyxhQUFLLFlBQUwsQ0FBa0IsVUFBbEIsRUFBOEIsS0FBOUI7QUFDRDtBQUNGLEtBTEQ7O0FBT0EsU0FBSyxPQUFMLEdBQWUsWUFBWTtBQUN6QixhQUFPLEtBQUssb0JBQUwsQ0FBMEIsTUFBMUIsRUFBa0MsQ0FBbEMsRUFBcUMsS0FBNUM7QUFDRCxLQUZEO0FBR0EsU0FBSyxlQUFMLEdBQXVCLFlBQVk7QUFDakMsYUFBTyxLQUFLLFlBQUwsQ0FBa0IsVUFBbEIsQ0FBUDtBQUNELEtBRkQ7QUFHQSxTQUFLLFVBQUwsR0FBa0IsVUFBVSxPQUFWLEVBQW1CO0FBQ25DLFdBQUssb0JBQUwsQ0FBMEIsTUFBMUIsRUFBa0MsQ0FBbEMsRUFBcUMsT0FBckMsR0FBK0MsU0FBUyxVQUFVLEdBQW5CLEVBQXdCLEVBQXhCLElBQThCLEdBQTdFO0FBQ0QsS0FGRDtBQUdEO0FBQ0QsU0FBTyxJQUFQO0FBQ0QsQ0ExRUQ7O0FBNEVBLGFBQWEsU0FBYixDQUF1QixZQUF2QixHQUFzQyxVQUFVLElBQVYsRUFBZ0I7QUFDcEQsTUFBSSxTQUFTLEVBQWI7QUFDQSxNQUFJLEtBQUssQ0FBVDtBQUFBLE1BQVksS0FBSyxDQUFqQjtBQUFBLE1BQW9CLEtBQXBCO0FBQUEsTUFBMkIsS0FBM0I7O0FBRUEsU0FBTyxLQUFLLE9BQUwsQ0FBYSxtREFBYixFQUFrRSxVQUFVLE9BQVYsRUFBbUIsTUFBbkIsRUFBMkIsTUFBM0IsRUFBbUM7QUFDMUcsYUFBUyxPQUFPLE9BQVAsQ0FBZSxRQUFmLEVBQXlCLE1BQXpCLEVBQWlDLE9BQWpDLENBQXlDLE1BQXpDLEVBQWlELEdBQWpELEVBQXNELEtBQXRELENBQTRELEdBQTVELENBQVQ7QUFDQSxRQUFJLENBQUMsT0FBTyxDQUFQLENBQUwsRUFBZ0I7QUFDZCxhQUFPLEtBQVA7QUFDRDs7QUFFRCxTQUFLLElBQUksSUFBSSxDQUFSLEVBQVcsSUFBSSxPQUFPLE1BQTNCLEVBQW1DLElBQUksQ0FBdkMsRUFBMEMsR0FBMUMsRUFBK0M7QUFDN0MsYUFBTyxDQUFQLElBQVksS0FBSyxLQUFMLENBQVcsTUFBTSxPQUFPLENBQVAsQ0FBakIsQ0FBWjtBQUNEOztBQUVELFlBQVEsTUFBUjtBQUNFLFdBQUssR0FBTDtBQUNFLGNBQU0sT0FBTyxDQUFQLENBQU47QUFDQSxjQUFNLE9BQU8sQ0FBUCxDQUFOO0FBQ0EsaUJBQVMsTUFBTSxPQUFPLElBQVAsQ0FBWSxHQUFaLENBQWY7QUFDQTs7QUFFRixXQUFLLEdBQUw7QUFDRSxhQUFLLE9BQU8sQ0FBUCxDQUFMO0FBQ0EsYUFBSyxPQUFPLENBQVAsQ0FBTDtBQUNBLGlCQUFTLE1BQU0sT0FBTyxJQUFQLENBQVksR0FBWixDQUFmO0FBQ0E7O0FBRUYsV0FBSyxHQUFMO0FBQ0UsY0FBTSxPQUFPLENBQVAsQ0FBTjtBQUNBLGNBQU0sT0FBTyxDQUFQLENBQU47QUFDQSxpQkFBUyxNQUFNLE9BQU8sSUFBUCxDQUFZLEdBQVosQ0FBZjtBQUNBOztBQUVGLFdBQUssR0FBTDtBQUNFLGFBQUssT0FBTyxDQUFQLENBQUw7QUFDQSxhQUFLLE9BQU8sQ0FBUCxDQUFMO0FBQ0EsaUJBQVMsTUFBTSxPQUFPLElBQVAsQ0FBWSxHQUFaLENBQWY7QUFDQTs7QUFFRixXQUFLLEdBQUw7QUFDRSxjQUFNLE9BQU8sQ0FBUCxDQUFOO0FBQ0EsaUJBQVMsTUFBTSxPQUFPLENBQVAsQ0FBTixHQUFrQixJQUEzQjtBQUNBOztBQUVGLFdBQUssR0FBTDtBQUNFLGFBQUssT0FBTyxDQUFQLENBQUw7QUFDQSxpQkFBUyxNQUFNLEVBQU4sR0FBVyxHQUFYLEdBQWlCLEVBQTFCO0FBQ0E7O0FBRUYsV0FBSyxHQUFMO0FBQ0UsY0FBTSxPQUFPLENBQVAsQ0FBTjtBQUNBLGlCQUFTLFFBQVEsT0FBTyxDQUFQLENBQWpCO0FBQ0E7O0FBRUYsV0FBSyxHQUFMO0FBQ0UsYUFBSyxPQUFPLENBQVAsQ0FBTDtBQUNBLGlCQUFTLE1BQU0sRUFBTixHQUFXLEdBQVgsR0FBaUIsRUFBMUI7QUFDQTs7QUFFRixXQUFLLEdBQUw7QUFDRSxnQkFBUSxLQUFLLE9BQU8sT0FBTyxNQUFQLEdBQWdCLENBQXZCLENBQWI7QUFDQSxnQkFBUSxLQUFLLE9BQU8sT0FBTyxNQUFQLEdBQWdCLENBQXZCLENBQWI7QUFDQSxjQUFNLE9BQU8sT0FBTyxNQUFQLEdBQWdCLENBQXZCLENBQU47QUFDQSxjQUFNLE9BQU8sT0FBTyxNQUFQLEdBQWdCLENBQXZCLENBQU47QUFDQSxpQkFBUyxNQUFNLE9BQU8sSUFBUCxDQUFZLEdBQVosQ0FBZjtBQUNBOztBQUVGLFdBQUssR0FBTDtBQUNFLGdCQUFRLE9BQU8sT0FBTyxNQUFQLEdBQWdCLENBQXZCLENBQVI7QUFDQSxnQkFBUSxPQUFPLE9BQU8sTUFBUCxHQUFnQixDQUF2QixDQUFSO0FBQ0EsYUFBSyxPQUFPLE9BQU8sTUFBUCxHQUFnQixDQUF2QixDQUFMO0FBQ0EsYUFBSyxPQUFPLE9BQU8sTUFBUCxHQUFnQixDQUF2QixDQUFMO0FBQ0EsaUJBQVMsTUFBTSxPQUFPLElBQVAsQ0FBWSxHQUFaLENBQWY7QUFDQTs7QUFFRixXQUFLLEdBQUw7QUFDRSxlQUFPLE9BQVAsQ0FBZSxLQUFLLEtBQXBCO0FBQ0EsZUFBTyxPQUFQLENBQWUsS0FBSyxLQUFwQjtBQUNBLGdCQUFRLEtBQUssT0FBTyxPQUFPLE1BQVAsR0FBZ0IsQ0FBdkIsQ0FBYjtBQUNBLGdCQUFRLEtBQUssT0FBTyxPQUFPLE1BQVAsR0FBZ0IsQ0FBdkIsQ0FBYjtBQUNBLGNBQU0sT0FBTyxPQUFPLE1BQVAsR0FBZ0IsQ0FBdkIsQ0FBTjtBQUNBLGNBQU0sT0FBTyxPQUFPLE1BQVAsR0FBZ0IsQ0FBdkIsQ0FBTjtBQUNBLGlCQUFTLE1BQU0sT0FBTyxJQUFQLENBQVksR0FBWixDQUFmO0FBQ0E7O0FBRUYsV0FBSyxHQUFMO0FBQ0UsZUFBTyxPQUFQLENBQWUsS0FBSyxFQUFMLEdBQVUsS0FBekI7QUFDQSxlQUFPLE9BQVAsQ0FBZSxLQUFLLEVBQUwsR0FBVSxLQUF6QjtBQUNBLGdCQUFRLE9BQU8sT0FBTyxNQUFQLEdBQWdCLENBQXZCLENBQVI7QUFDQSxnQkFBUSxPQUFPLE9BQU8sTUFBUCxHQUFnQixDQUF2QixDQUFSO0FBQ0EsYUFBSyxPQUFPLE9BQU8sTUFBUCxHQUFnQixDQUF2QixDQUFMO0FBQ0EsYUFBSyxPQUFPLE9BQU8sTUFBUCxHQUFnQixDQUF2QixDQUFMO0FBQ0EsaUJBQVMsTUFBTSxPQUFPLElBQVAsQ0FBWSxHQUFaLENBQWY7QUFDQTs7QUFFRjtBQUNFO0FBbEZKOztBQXFGQSxXQUFPLE1BQVA7QUFFRCxHQWpHTSxFQWlHSixPQWpHSSxDQWlHSSxJQWpHSixFQWlHVSxFQWpHVixDQUFQO0FBa0dELENBdEdEOztBQXdHQSxhQUFhLFNBQWIsQ0FBdUIsT0FBdkIsR0FBaUMsVUFBVSxLQUFWLEVBQWlCLE1BQWpCLEVBQXlCO0FBQ3hELE1BQUksS0FBSyxJQUFMLEtBQWMsS0FBbEIsRUFBeUI7QUFDdkIsU0FBSyxNQUFMLENBQVksWUFBWixDQUF5QixPQUF6QixFQUFrQyxLQUFsQztBQUNBLFNBQUssTUFBTCxDQUFZLFlBQVosQ0FBeUIsUUFBekIsRUFBbUMsTUFBbkM7QUFDRCxHQUhELE1BR087QUFDTCxTQUFLLE1BQUwsQ0FBWSxLQUFaLENBQWtCLEtBQWxCLEdBQTBCLFFBQVEsSUFBbEM7QUFDQSxTQUFLLE1BQUwsQ0FBWSxLQUFaLENBQWtCLE1BQWxCLEdBQTJCLFNBQVMsSUFBcEM7QUFDQSxTQUFLLE1BQUwsQ0FBWSxTQUFaLEdBQXdCLFFBQVEsR0FBUixHQUFjLE1BQXRDO0FBQ0EsU0FBSyxNQUFMLENBQVksV0FBWixHQUEwQixLQUExQjtBQUNBLFFBQUksS0FBSyxTQUFULEVBQW9CO0FBQ2xCLFVBQUksUUFBUSxLQUFLLFNBQUwsQ0FBZSxvQkFBZixDQUFvQyxPQUFwQyxDQUFaO0FBQ0EsV0FBSyxJQUFJLElBQUksQ0FBUixFQUFXLElBQUksTUFBTSxNQUExQixFQUFrQyxJQUFJLENBQXRDLEVBQXlDLEdBQXpDLEVBQThDO0FBQzVDLGNBQU0sQ0FBTixFQUFTLFNBQVQsR0FBcUIsUUFBUSxHQUFSLEdBQWMsTUFBbkM7QUFDQSxjQUFNLENBQU4sRUFBUyxLQUFULENBQWUsS0FBZixHQUF1QixRQUFRLElBQS9CO0FBQ0EsY0FBTSxDQUFOLEVBQVMsS0FBVCxDQUFlLE1BQWYsR0FBd0IsU0FBUyxJQUFqQztBQUNEO0FBQ0QsV0FBSyxTQUFMLENBQWUsU0FBZixHQUEyQixRQUFRLEdBQVIsR0FBYyxNQUF6QztBQUNBLFdBQUssU0FBTCxDQUFlLEtBQWYsQ0FBcUIsS0FBckIsR0FBNkIsUUFBUSxJQUFyQztBQUNBLFdBQUssU0FBTCxDQUFlLEtBQWYsQ0FBcUIsTUFBckIsR0FBOEIsU0FBUyxJQUF2QztBQUNEO0FBQ0Y7QUFDRCxPQUFLLEtBQUwsR0FBYSxLQUFiO0FBQ0EsT0FBSyxNQUFMLEdBQWMsTUFBZDtBQUNELENBdkJEIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8qIVxuICogSlFWTWFwOiBqUXVlcnkgVmVjdG9yIE1hcCBMaWJyYXJ5XG4gKiBAYXV0aG9yIEpRVk1hcCA8bWVAcGV0ZXJzY2htYWxmZWxkdC5jb20+XG4gKiBAdmVyc2lvbiAxLjUuMVxuICogQGxpbmsgaHR0cDovL2pxdm1hcC5jb21cbiAqIEBsaWNlbnNlIGh0dHBzOi8vZ2l0aHViLmNvbS9tYW5pZmVzdGludGVyYWN0aXZlL2pxdm1hcC9ibG9iL21hc3Rlci9MSUNFTlNFXG4gKiBAYnVpbGRkYXRlIDIwMTYvMDYvMDJcbiAqL1xuXG52YXIgVmVjdG9yQ2FudmFzID0gZnVuY3Rpb24gKHdpZHRoLCBoZWlnaHQsIHBhcmFtcykge1xuICB0aGlzLm1vZGUgPSB3aW5kb3cuU1ZHQW5nbGUgPyAnc3ZnJyA6ICd2bWwnO1xuICB0aGlzLnBhcmFtcyA9IHBhcmFtcztcblxuICBpZiAodGhpcy5tb2RlID09PSAnc3ZnJykge1xuICAgIHRoaXMuY3JlYXRlU3ZnTm9kZSA9IGZ1bmN0aW9uIChub2RlTmFtZSkge1xuICAgICAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnROUyh0aGlzLnN2Z25zLCBub2RlTmFtZSk7XG4gICAgfTtcbiAgfSBlbHNlIHtcbiAgICB0cnkge1xuICAgICAgaWYgKCFkb2N1bWVudC5uYW1lc3BhY2VzLnJ2bWwpIHtcbiAgICAgICAgZG9jdW1lbnQubmFtZXNwYWNlcy5hZGQoJ3J2bWwnLCAndXJuOnNjaGVtYXMtbWljcm9zb2Z0LWNvbTp2bWwnKTtcbiAgICAgIH1cbiAgICAgIHRoaXMuY3JlYXRlVm1sTm9kZSA9IGZ1bmN0aW9uICh0YWdOYW1lKSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCc8cnZtbDonICsgdGFnTmFtZSArICcgY2xhc3M9XCJydm1sXCI+Jyk7XG4gICAgICB9O1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRoaXMuY3JlYXRlVm1sTm9kZSA9IGZ1bmN0aW9uICh0YWdOYW1lKSB7XG4gICAgICAgIHJldHVybiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCc8JyArIHRhZ05hbWUgKyAnIHhtbG5zPVwidXJuOnNjaGVtYXMtbWljcm9zb2Z0LmNvbTp2bWxcIiBjbGFzcz1cInJ2bWxcIj4nKTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgZG9jdW1lbnQuY3JlYXRlU3R5bGVTaGVldCgpLmFkZFJ1bGUoJy5ydm1sJywgJ2JlaGF2aW9yOnVybCgjZGVmYXVsdCNWTUwpJyk7XG4gIH1cblxuICBpZiAodGhpcy5tb2RlID09PSAnc3ZnJykge1xuICAgIHRoaXMuY2FudmFzID0gdGhpcy5jcmVhdGVTdmdOb2RlKCdzdmcnKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLmNhbnZhcyA9IHRoaXMuY3JlYXRlVm1sTm9kZSgnZ3JvdXAnKTtcbiAgICB0aGlzLmNhbnZhcy5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG4gIH1cblxuICB0aGlzLnNldFNpemUod2lkdGgsIGhlaWdodCk7XG59O1xuXG5WZWN0b3JDYW52YXMucHJvdG90eXBlID0ge1xuICBzdmduczogJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJyxcbiAgbW9kZTogJ3N2ZycsXG4gIHdpZHRoOiAwLFxuICBoZWlnaHQ6IDAsXG4gIGNhbnZhczogbnVsbFxufTtcblxudmFyIENvbG9yU2NhbGUgPSBmdW5jdGlvbiAoY29sb3JzLCBub3JtYWxpemVGdW5jdGlvbiwgbWluVmFsdWUsIG1heFZhbHVlKSB7XG4gIGlmIChjb2xvcnMpIHtcbiAgICB0aGlzLnNldENvbG9ycyhjb2xvcnMpO1xuICB9XG4gIGlmIChub3JtYWxpemVGdW5jdGlvbikge1xuICAgIHRoaXMuc2V0Tm9ybWFsaXplRnVuY3Rpb24obm9ybWFsaXplRnVuY3Rpb24pO1xuICB9XG4gIGlmIChtaW5WYWx1ZSkge1xuICAgIHRoaXMuc2V0TWluKG1pblZhbHVlKTtcbiAgfVxuICBpZiAobWluVmFsdWUpIHtcbiAgICB0aGlzLnNldE1heChtYXhWYWx1ZSk7XG4gIH1cbn07XG5cbkNvbG9yU2NhbGUucHJvdG90eXBlID0ge1xuICBjb2xvcnM6IFtdXG59O1xuXG52YXIgSlFWTWFwID0gZnVuY3Rpb24gKHBhcmFtcykge1xuICBwYXJhbXMgPSBwYXJhbXMgfHwge307XG4gIHZhciBtYXAgPSB0aGlzO1xuICB2YXIgbWFwRGF0YSA9IEpRVk1hcC5tYXBzW3BhcmFtcy5tYXBdO1xuICB2YXIgbWFwUGlucztcblxuICBpZiggIW1hcERhdGEpe1xuICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBcIicgKyBwYXJhbXMubWFwICsgJ1wiIG1hcCBwYXJhbWV0ZXIuIFBsZWFzZSBtYWtlIHN1cmUgeW91IGhhdmUgbG9hZGVkIHRoaXMgbWFwIGZpbGUgaW4geW91ciBIVE1MLicpO1xuICB9XG5cbiAgdGhpcy5zZWxlY3RlZFJlZ2lvbnMgPSBbXTtcbiAgdGhpcy5tdWx0aVNlbGVjdFJlZ2lvbiA9IHBhcmFtcy5tdWx0aVNlbGVjdFJlZ2lvbjtcblxuICB0aGlzLmNvbnRhaW5lciA9IHBhcmFtcy5jb250YWluZXI7XG5cbiAgdGhpcy5kZWZhdWx0V2lkdGggPSBtYXBEYXRhLndpZHRoO1xuICB0aGlzLmRlZmF1bHRIZWlnaHQgPSBtYXBEYXRhLmhlaWdodDtcblxuICB0aGlzLmNvbG9yID0gcGFyYW1zLmNvbG9yO1xuICB0aGlzLnNlbGVjdGVkQ29sb3IgPSBwYXJhbXMuc2VsZWN0ZWRDb2xvcjtcbiAgdGhpcy5ob3ZlckNvbG9yID0gcGFyYW1zLmhvdmVyQ29sb3I7XG4gIHRoaXMuaG92ZXJDb2xvcnMgPSBwYXJhbXMuaG92ZXJDb2xvcnM7XG4gIHRoaXMuaG92ZXJPcGFjaXR5ID0gcGFyYW1zLmhvdmVyT3BhY2l0eTtcbiAgdGhpcy5zZXRCYWNrZ3JvdW5kQ29sb3IocGFyYW1zLmJhY2tncm91bmRDb2xvcik7XG5cbiAgdGhpcy53aWR0aCA9IHBhcmFtcy5jb250YWluZXIud2lkdGgoKTtcbiAgdGhpcy5oZWlnaHQgPSBwYXJhbXMuY29udGFpbmVyLmhlaWdodCgpO1xuXG4gIHRoaXMucmVzaXplKCk7XG5cbiAgalF1ZXJ5KHdpbmRvdykucmVzaXplKGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgbmV3V2lkdGggPSBwYXJhbXMuY29udGFpbmVyLndpZHRoKCk7XG4gICAgdmFyIG5ld0hlaWdodCA9IHBhcmFtcy5jb250YWluZXIuaGVpZ2h0KCk7XG5cbiAgICBpZihuZXdXaWR0aCAmJiBuZXdIZWlnaHQpe1xuICAgICAgbWFwLndpZHRoID0gbmV3V2lkdGg7XG4gICAgICBtYXAuaGVpZ2h0ID0gbmV3SGVpZ2h0O1xuICAgICAgbWFwLnJlc2l6ZSgpO1xuICAgICAgbWFwLmNhbnZhcy5zZXRTaXplKG1hcC53aWR0aCwgbWFwLmhlaWdodCk7XG4gICAgICBtYXAuYXBwbHlUcmFuc2Zvcm0oKTtcblxuICAgICAgdmFyIHJlc2l6ZUV2ZW50ID0galF1ZXJ5LkV2ZW50KCdyZXNpemUuanF2bWFwJyk7XG4gICAgICBqUXVlcnkocGFyYW1zLmNvbnRhaW5lcikudHJpZ2dlcihyZXNpemVFdmVudCwgW25ld1dpZHRoLCBuZXdIZWlnaHRdKTtcblxuICAgICAgaWYobWFwUGlucyl7XG4gICAgICAgIGpRdWVyeSgnLmpxdm1hcC1waW4nKS5yZW1vdmUoKTtcbiAgICAgICAgbWFwLnBpbkhhbmRsZXJzID0gZmFsc2U7XG4gICAgICAgIG1hcC5wbGFjZVBpbnMobWFwUGlucy5waW5zLCBtYXBQaW5zLm1vZGUpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgdGhpcy5jYW52YXMgPSBuZXcgVmVjdG9yQ2FudmFzKHRoaXMud2lkdGgsIHRoaXMuaGVpZ2h0LCBwYXJhbXMpO1xuICBwYXJhbXMuY29udGFpbmVyLmFwcGVuZCh0aGlzLmNhbnZhcy5jYW52YXMpO1xuXG4gIHRoaXMubWFrZURyYWdnYWJsZSgpO1xuXG4gIHRoaXMucm9vdEdyb3VwID0gdGhpcy5jYW52YXMuY3JlYXRlR3JvdXAodHJ1ZSk7XG5cbiAgdGhpcy5pbmRleCA9IEpRVk1hcC5tYXBJbmRleDtcbiAgdGhpcy5sYWJlbCA9IGpRdWVyeSgnPGRpdi8+JykuYWRkQ2xhc3MoJ2pxdm1hcC1sYWJlbCcpLmFwcGVuZFRvKGpRdWVyeSgnYm9keScpKS5oaWRlKCk7XG5cbiAgaWYgKHBhcmFtcy5lbmFibGVab29tKSB7XG4gICAgalF1ZXJ5KCc8ZGl2Lz4nKS5hZGRDbGFzcygnanF2bWFwLXpvb21pbicpLnRleHQoJysnKS5hcHBlbmRUbyhwYXJhbXMuY29udGFpbmVyKTtcbiAgICBqUXVlcnkoJzxkaXYvPicpLmFkZENsYXNzKCdqcXZtYXAtem9vbW91dCcpLmh0bWwoJyYjeDIyMTI7JykuYXBwZW5kVG8ocGFyYW1zLmNvbnRhaW5lcik7XG4gIH1cblxuICBtYXAuY291bnRyaWVzID0gW107XG5cbiAgZm9yICh2YXIga2V5IGluIG1hcERhdGEucGF0aHMpIHtcbiAgICB2YXIgcGF0aCA9IHRoaXMuY2FudmFzLmNyZWF0ZVBhdGgoe1xuICAgICAgcGF0aDogbWFwRGF0YS5wYXRoc1trZXldLnBhdGhcbiAgICB9KTtcblxuICAgIHBhdGguc2V0RmlsbCh0aGlzLmNvbG9yKTtcbiAgICBwYXRoLmlkID0gbWFwLmdldENvdW50cnlJZChrZXkpO1xuICAgIG1hcC5jb3VudHJpZXNba2V5XSA9IHBhdGg7XG5cbiAgICBpZiAodGhpcy5jYW52YXMubW9kZSA9PT0gJ3N2ZycpIHtcbiAgICAgIHBhdGguc2V0QXR0cmlidXRlKCdjbGFzcycsICdqcXZtYXAtcmVnaW9uJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGpRdWVyeShwYXRoKS5hZGRDbGFzcygnanF2bWFwLXJlZ2lvbicpO1xuICAgIH1cblxuICAgIGpRdWVyeSh0aGlzLnJvb3RHcm91cCkuYXBwZW5kKHBhdGgpO1xuICB9XG5cbiAgalF1ZXJ5KHBhcmFtcy5jb250YWluZXIpLmRlbGVnYXRlKHRoaXMuY2FudmFzLm1vZGUgPT09ICdzdmcnID8gJ3BhdGgnIDogJ3NoYXBlJywgJ21vdXNlb3ZlciBtb3VzZW91dCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgdmFyIGNvbnRhaW5lclBhdGggPSBlLnRhcmdldCxcbiAgICAgIGNvZGUgPSBlLnRhcmdldC5pZC5zcGxpdCgnXycpLnBvcCgpLFxuICAgICAgbGFiZWxTaG93RXZlbnQgPSBqUXVlcnkuRXZlbnQoJ2xhYmVsU2hvdy5qcXZtYXAnKSxcbiAgICAgIHJlZ2lvbk1vdXNlT3ZlckV2ZW50ID0galF1ZXJ5LkV2ZW50KCdyZWdpb25Nb3VzZU92ZXIuanF2bWFwJyk7XG5cbiAgICBjb2RlID0gY29kZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgaWYgKGUudHlwZSA9PT0gJ21vdXNlb3ZlcicpIHtcbiAgICAgIGpRdWVyeShwYXJhbXMuY29udGFpbmVyKS50cmlnZ2VyKHJlZ2lvbk1vdXNlT3ZlckV2ZW50LCBbY29kZSwgbWFwRGF0YS5wYXRoc1tjb2RlXS5uYW1lXSk7XG4gICAgICBpZiAoIXJlZ2lvbk1vdXNlT3ZlckV2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICAgIG1hcC5oaWdobGlnaHQoY29kZSwgY29udGFpbmVyUGF0aCk7XG4gICAgICB9XG4gICAgICBpZiAocGFyYW1zLnNob3dUb29sdGlwKSB7XG4gICAgICAgIG1hcC5sYWJlbC50ZXh0KG1hcERhdGEucGF0aHNbY29kZV0ubmFtZSk7XG4gICAgICAgIGpRdWVyeShwYXJhbXMuY29udGFpbmVyKS50cmlnZ2VyKGxhYmVsU2hvd0V2ZW50LCBbbWFwLmxhYmVsLCBjb2RlXSk7XG5cbiAgICAgICAgaWYgKCFsYWJlbFNob3dFdmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkge1xuICAgICAgICAgIG1hcC5sYWJlbC5zaG93KCk7XG4gICAgICAgICAgbWFwLmxhYmVsV2lkdGggPSBtYXAubGFiZWwud2lkdGgoKTtcbiAgICAgICAgICBtYXAubGFiZWxIZWlnaHQgPSBtYXAubGFiZWwuaGVpZ2h0KCk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgbWFwLnVuaGlnaGxpZ2h0KGNvZGUsIGNvbnRhaW5lclBhdGgpO1xuXG4gICAgICBtYXAubGFiZWwuaGlkZSgpO1xuICAgICAgalF1ZXJ5KHBhcmFtcy5jb250YWluZXIpLnRyaWdnZXIoJ3JlZ2lvbk1vdXNlT3V0Lmpxdm1hcCcsIFtjb2RlLCBtYXBEYXRhLnBhdGhzW2NvZGVdLm5hbWVdKTtcbiAgICB9XG4gIH0pO1xuXG4gIGpRdWVyeShwYXJhbXMuY29udGFpbmVyKS5kZWxlZ2F0ZSh0aGlzLmNhbnZhcy5tb2RlID09PSAnc3ZnJyA/ICdwYXRoJyA6ICdzaGFwZScsICdjbGljaycsIGZ1bmN0aW9uIChyZWdpb25DbGlja0V2ZW50KSB7XG5cbiAgICB2YXIgdGFyZ2V0UGF0aCA9IHJlZ2lvbkNsaWNrRXZlbnQudGFyZ2V0O1xuICAgIHZhciBjb2RlID0gcmVnaW9uQ2xpY2tFdmVudC50YXJnZXQuaWQuc3BsaXQoJ18nKS5wb3AoKTtcbiAgICB2YXIgbWFwQ2xpY2tFdmVudCA9IGpRdWVyeS5FdmVudCgncmVnaW9uQ2xpY2suanF2bWFwJyk7XG5cbiAgICBjb2RlID0gY29kZS50b0xvd2VyQ2FzZSgpO1xuXG4gICAgalF1ZXJ5KHBhcmFtcy5jb250YWluZXIpLnRyaWdnZXIobWFwQ2xpY2tFdmVudCwgW2NvZGUsIG1hcERhdGEucGF0aHNbY29kZV0ubmFtZV0pO1xuXG4gICAgaWYgKCAhcGFyYW1zLm11bHRpU2VsZWN0UmVnaW9uICYmICFtYXBDbGlja0V2ZW50LmlzRGVmYXVsdFByZXZlbnRlZCgpKSB7XG4gICAgICBmb3IgKHZhciBrZXlQYXRoIGluIG1hcERhdGEucGF0aHMpIHtcbiAgICAgICAgbWFwLmNvdW50cmllc1trZXlQYXRoXS5jdXJyZW50RmlsbENvbG9yID0gbWFwLmNvdW50cmllc1trZXlQYXRoXS5nZXRPcmlnaW5hbEZpbGwoKTtcbiAgICAgICAgbWFwLmNvdW50cmllc1trZXlQYXRoXS5zZXRGaWxsKG1hcC5jb3VudHJpZXNba2V5UGF0aF0uZ2V0T3JpZ2luYWxGaWxsKCkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICggIW1hcENsaWNrRXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkpIHtcbiAgICAgIGlmIChtYXAuaXNTZWxlY3RlZChjb2RlKSkge1xuICAgICAgICBtYXAuZGVzZWxlY3QoY29kZSwgdGFyZ2V0UGF0aCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBtYXAuc2VsZWN0KGNvZGUsIHRhcmdldFBhdGgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgaWYgKHBhcmFtcy5zaG93VG9vbHRpcCkge1xuICAgIHBhcmFtcy5jb250YWluZXIubW91c2Vtb3ZlKGZ1bmN0aW9uIChlKSB7XG4gICAgICBpZiAobWFwLmxhYmVsLmlzKCc6dmlzaWJsZScpKSB7XG4gICAgICAgIHZhciBsZWZ0ID0gZS5wYWdlWCAtIDE1IC0gbWFwLmxhYmVsV2lkdGg7XG4gICAgICAgIHZhciB0b3AgPSBlLnBhZ2VZIC0gMTUgLSBtYXAubGFiZWxIZWlnaHQ7XG5cbiAgICAgICAgaWYobGVmdCA8IDApIHtcbiAgICAgICAgICBsZWZ0ID0gZS5wYWdlWCArIDE1O1xuICAgICAgICB9XG4gICAgICAgIGlmKHRvcCA8IDApIHtcbiAgICAgICAgICB0b3AgPSBlLnBhZ2VZICsgMTU7XG4gICAgICAgIH1cblxuICAgICAgICBtYXAubGFiZWwuY3NzKHtcbiAgICAgICAgICBsZWZ0OiBsZWZ0LFxuICAgICAgICAgIHRvcDogdG9wXG4gICAgICAgIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgdGhpcy5zZXRDb2xvcnMocGFyYW1zLmNvbG9ycyk7XG5cbiAgdGhpcy5jYW52YXMuY2FudmFzLmFwcGVuZENoaWxkKHRoaXMucm9vdEdyb3VwKTtcblxuICB0aGlzLmFwcGx5VHJhbnNmb3JtKCk7XG5cbiAgdGhpcy5jb2xvclNjYWxlID0gbmV3IENvbG9yU2NhbGUocGFyYW1zLnNjYWxlQ29sb3JzLCBwYXJhbXMubm9ybWFsaXplRnVuY3Rpb24sIHBhcmFtcy52YWx1ZU1pbiwgcGFyYW1zLnZhbHVlTWF4KTtcblxuICBpZiAocGFyYW1zLnZhbHVlcykge1xuICAgIHRoaXMudmFsdWVzID0gcGFyYW1zLnZhbHVlcztcbiAgICB0aGlzLnNldFZhbHVlcyhwYXJhbXMudmFsdWVzKTtcbiAgfVxuXG4gIGlmIChwYXJhbXMuc2VsZWN0ZWRSZWdpb25zKSB7XG4gICAgaWYgKHBhcmFtcy5zZWxlY3RlZFJlZ2lvbnMgaW5zdGFuY2VvZiBBcnJheSkge1xuICAgICAgZm9yKHZhciBrIGluIHBhcmFtcy5zZWxlY3RlZFJlZ2lvbnMpIHtcbiAgICAgICAgdGhpcy5zZWxlY3QocGFyYW1zLnNlbGVjdGVkUmVnaW9uc1trXS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZWxlY3QocGFyYW1zLnNlbGVjdGVkUmVnaW9ucy50b0xvd2VyQ2FzZSgpKTtcbiAgICB9XG4gIH1cblxuICB0aGlzLmJpbmRab29tQnV0dG9ucygpO1xuXG4gIGlmKHBhcmFtcy5waW5zKSB7XG4gICAgbWFwUGlucyA9IHtcbiAgICAgIHBpbnM6IHBhcmFtcy5waW5zLFxuICAgICAgbW9kZTogcGFyYW1zLnBpbk1vZGVcbiAgICB9O1xuXG4gICAgdGhpcy5waW5IYW5kbGVycyA9IGZhbHNlO1xuICAgIHRoaXMucGxhY2VQaW5zKHBhcmFtcy5waW5zLCBwYXJhbXMucGluTW9kZSk7XG4gIH1cblxuICBpZihwYXJhbXMuc2hvd0xhYmVscyl7XG4gICAgdGhpcy5waW5IYW5kbGVycyA9IGZhbHNlO1xuXG4gICAgdmFyIHBpbnMgPSB7fTtcbiAgICBmb3IgKGtleSBpbiBtYXAuY291bnRyaWVzKXtcbiAgICAgIGlmICh0eXBlb2YgbWFwLmNvdW50cmllc1trZXldICE9PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGlmKCAhcGFyYW1zLnBpbnMgfHwgIXBhcmFtcy5waW5zW2tleV0gKXtcbiAgICAgICAgICBwaW5zW2tleV0gPSBrZXkudG9VcHBlckNhc2UoKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cblxuICAgIG1hcFBpbnMgPSB7XG4gICAgICBwaW5zOiBwaW5zLFxuICAgICAgbW9kZTogJ2NvbnRlbnQnXG4gICAgfTtcblxuICAgIHRoaXMucGxhY2VQaW5zKHBpbnMsICdjb250ZW50Jyk7XG4gIH1cblxuICBKUVZNYXAubWFwSW5kZXgrKztcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUgPSB7XG4gIHRyYW5zWDogMCxcbiAgdHJhbnNZOiAwLFxuICBzY2FsZTogMSxcbiAgYmFzZVRyYW5zWDogMCxcbiAgYmFzZVRyYW5zWTogMCxcbiAgYmFzZVNjYWxlOiAxLFxuICB3aWR0aDogMCxcbiAgaGVpZ2h0OiAwLFxuICBjb3VudHJpZXM6IHt9LFxuICBjb3VudHJpZXNDb2xvcnM6IHt9LFxuICBjb3VudHJpZXNEYXRhOiB7fSxcbiAgem9vbVN0ZXA6IDEuNCxcbiAgem9vbU1heFN0ZXA6IDQsXG4gIHpvb21DdXJTdGVwOiAxXG59O1xuXG5KUVZNYXAueGxpbmsgPSAnaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayc7XG5KUVZNYXAubWFwSW5kZXggPSAxO1xuSlFWTWFwLm1hcHMgPSB7fTtcblxuKGZ1bmN0aW9uKCl7XG5cbiAgdmFyIGFwaVBhcmFtcyA9IHtcbiAgICBjb2xvcnM6IDEsXG4gICAgdmFsdWVzOiAxLFxuICAgIGJhY2tncm91bmRDb2xvcjogMSxcbiAgICBzY2FsZUNvbG9yczogMSxcbiAgICBub3JtYWxpemVGdW5jdGlvbjogMSxcbiAgICBlbmFibGVab29tOiAxLFxuICAgIHNob3dUb29sdGlwOiAxLFxuICAgIGJvcmRlckNvbG9yOiAxLFxuICAgIGJvcmRlcldpZHRoOiAxLFxuICAgIGJvcmRlck9wYWNpdHk6IDEsXG4gICAgc2VsZWN0ZWRSZWdpb25zOiAxLFxuICAgIG11bHRpU2VsZWN0UmVnaW9uOiAxXG4gIH07XG5cbiAgdmFyIGFwaUV2ZW50cyA9IHtcbiAgICBvbkxhYmVsU2hvdzogJ2xhYmVsU2hvdycsXG4gICAgb25Mb2FkOiAnbG9hZCcsXG4gICAgb25SZWdpb25PdmVyOiAncmVnaW9uTW91c2VPdmVyJyxcbiAgICBvblJlZ2lvbk91dDogJ3JlZ2lvbk1vdXNlT3V0JyxcbiAgICBvblJlZ2lvbkNsaWNrOiAncmVnaW9uQ2xpY2snLFxuICAgIG9uUmVnaW9uU2VsZWN0OiAncmVnaW9uU2VsZWN0JyxcbiAgICBvblJlZ2lvbkRlc2VsZWN0OiAncmVnaW9uRGVzZWxlY3QnLFxuICAgIG9uUmVzaXplOiAncmVzaXplJ1xuICB9O1xuXG4gIGpRdWVyeS5mbi52ZWN0b3JNYXAgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuXG4gICAgdmFyIGRlZmF1bHRQYXJhbXMgPSB7XG4gICAgICBtYXA6ICd3b3JsZF9lbicsXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjYTViZmRkJyxcbiAgICAgIGNvbG9yOiAnI2Y0ZjNmMCcsXG4gICAgICBob3ZlckNvbG9yOiAnI2M5ZGZhZicsXG4gICAgICBob3ZlckNvbG9yczoge30sXG4gICAgICBzZWxlY3RlZENvbG9yOiAnI2M5ZGZhZicsXG4gICAgICBzY2FsZUNvbG9yczogWycjYjZkNmZmJywgJyMwMDVhY2UnXSxcbiAgICAgIG5vcm1hbGl6ZUZ1bmN0aW9uOiAnbGluZWFyJyxcbiAgICAgIGVuYWJsZVpvb206IHRydWUsXG4gICAgICBzaG93VG9vbHRpcDogdHJ1ZSxcbiAgICAgIGJvcmRlckNvbG9yOiAnIzgxODE4MScsXG4gICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgIGJvcmRlck9wYWNpdHk6IDAuMjUsXG4gICAgICBzZWxlY3RlZFJlZ2lvbnM6IG51bGwsXG4gICAgICBtdWx0aVNlbGVjdFJlZ2lvbjogZmFsc2VcbiAgICB9LCBtYXAgPSB0aGlzLmRhdGEoJ21hcE9iamVjdCcpO1xuXG4gICAgaWYgKG9wdGlvbnMgPT09ICdhZGRNYXAnKSB7XG4gICAgICBKUVZNYXAubWFwc1thcmd1bWVudHNbMV1dID0gYXJndW1lbnRzWzJdO1xuICAgIH0gZWxzZSBpZiAob3B0aW9ucyA9PT0gJ3NldCcgJiYgYXBpUGFyYW1zW2FyZ3VtZW50c1sxXV0pIHtcbiAgICAgIG1hcFsnc2V0JyArIGFyZ3VtZW50c1sxXS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIGFyZ3VtZW50c1sxXS5zdWJzdHIoMSldLmFwcGx5KG1hcCwgQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKSk7XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ3N0cmluZycgJiZcbiAgICAgIHR5cGVvZiBtYXBbb3B0aW9uc10gPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiBtYXBbb3B0aW9uc10uYXBwbHkobWFwLCBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgalF1ZXJ5LmV4dGVuZChkZWZhdWx0UGFyYW1zLCBvcHRpb25zKTtcbiAgICAgIGRlZmF1bHRQYXJhbXMuY29udGFpbmVyID0gdGhpcztcbiAgICAgIHRoaXMuY3NzKHsgcG9zaXRpb246ICdyZWxhdGl2ZScsIG92ZXJmbG93OiAnaGlkZGVuJyB9KTtcblxuICAgICAgbWFwID0gbmV3IEpRVk1hcChkZWZhdWx0UGFyYW1zKTtcblxuICAgICAgdGhpcy5kYXRhKCdtYXBPYmplY3QnLCBtYXApO1xuXG4gICAgICB0aGlzLnVuYmluZCgnLmpxdm1hcCcpO1xuXG4gICAgICBmb3IgKHZhciBlIGluIGFwaUV2ZW50cykge1xuICAgICAgICBpZiAoZGVmYXVsdFBhcmFtc1tlXSkge1xuICAgICAgICAgIHRoaXMuYmluZChhcGlFdmVudHNbZV0gKyAnLmpxdm1hcCcsIGRlZmF1bHRQYXJhbXNbZV0pO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHZhciBsb2FkRXZlbnQgPSBqUXVlcnkuRXZlbnQoJ2xvYWQuanF2bWFwJyk7XG4gICAgICBqUXVlcnkoZGVmYXVsdFBhcmFtcy5jb250YWluZXIpLnRyaWdnZXIobG9hZEV2ZW50LCBtYXApO1xuXG4gICAgICByZXR1cm4gbWFwO1xuICAgIH1cbiAgfTtcblxufSkoalF1ZXJ5KTtcblxuQ29sb3JTY2FsZS5hcnJheVRvUmdiID0gZnVuY3Rpb24gKGFyKSB7XG4gIHZhciByZ2IgPSAnIyc7XG4gIHZhciBkO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGFyLmxlbmd0aDsgaSsrKSB7XG4gICAgZCA9IGFyW2ldLnRvU3RyaW5nKDE2KTtcbiAgICByZ2IgKz0gZC5sZW5ndGggPT09IDEgPyAnMCcgKyBkIDogZDtcbiAgfVxuICByZXR1cm4gcmdiO1xufTtcblxuQ29sb3JTY2FsZS5wcm90b3R5cGUuZ2V0Q29sb3IgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgaWYgKHR5cGVvZiB0aGlzLm5vcm1hbGl6ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHZhbHVlID0gdGhpcy5ub3JtYWxpemUodmFsdWUpO1xuICB9XG5cbiAgdmFyIGxlbmd0aGVzID0gW107XG4gIHZhciBmdWxsTGVuZ3RoID0gMDtcbiAgdmFyIGw7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmNvbG9ycy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICBsID0gdGhpcy52ZWN0b3JMZW5ndGgodGhpcy52ZWN0b3JTdWJ0cmFjdCh0aGlzLmNvbG9yc1tpICsgMV0sIHRoaXMuY29sb3JzW2ldKSk7XG4gICAgbGVuZ3RoZXMucHVzaChsKTtcbiAgICBmdWxsTGVuZ3RoICs9IGw7XG4gIH1cblxuICB2YXIgYyA9ICh0aGlzLm1heFZhbHVlIC0gdGhpcy5taW5WYWx1ZSkgLyBmdWxsTGVuZ3RoO1xuXG4gIGZvciAoaSA9IDA7IGkgPCBsZW5ndGhlcy5sZW5ndGg7IGkrKykge1xuICAgIGxlbmd0aGVzW2ldICo9IGM7XG4gIH1cblxuICBpID0gMDtcbiAgdmFsdWUgLT0gdGhpcy5taW5WYWx1ZTtcblxuICB3aGlsZSAodmFsdWUgLSBsZW5ndGhlc1tpXSA+PSAwKSB7XG4gICAgdmFsdWUgLT0gbGVuZ3RoZXNbaV07XG4gICAgaSsrO1xuICB9XG5cbiAgdmFyIGNvbG9yO1xuICBpZiAoaSA9PT0gdGhpcy5jb2xvcnMubGVuZ3RoIC0gMSkge1xuICAgIGNvbG9yID0gdGhpcy52ZWN0b3JUb051bSh0aGlzLmNvbG9yc1tpXSkudG9TdHJpbmcoMTYpO1xuICB9IGVsc2Uge1xuICAgIGNvbG9yID0gKHRoaXMudmVjdG9yVG9OdW0odGhpcy52ZWN0b3JBZGQodGhpcy5jb2xvcnNbaV0sIHRoaXMudmVjdG9yTXVsdCh0aGlzLnZlY3RvclN1YnRyYWN0KHRoaXMuY29sb3JzW2kgKyAxXSwgdGhpcy5jb2xvcnNbaV0pLCAodmFsdWUpIC8gKGxlbmd0aGVzW2ldKSkpKSkudG9TdHJpbmcoMTYpO1xuICB9XG5cbiAgd2hpbGUgKGNvbG9yLmxlbmd0aCA8IDYpIHtcbiAgICBjb2xvciA9ICcwJyArIGNvbG9yO1xuICB9XG4gIHJldHVybiAnIycgKyBjb2xvcjtcbn07XG5cbkNvbG9yU2NhbGUucmdiVG9BcnJheSA9IGZ1bmN0aW9uIChyZ2IpIHtcbiAgcmdiID0gcmdiLnN1YnN0cigxKTtcbiAgcmV0dXJuIFtwYXJzZUludChyZ2Iuc3Vic3RyKDAsIDIpLCAxNiksIHBhcnNlSW50KHJnYi5zdWJzdHIoMiwgMiksIDE2KSwgcGFyc2VJbnQocmdiLnN1YnN0cig0LCAyKSwgMTYpXTtcbn07XG5cbkNvbG9yU2NhbGUucHJvdG90eXBlLnNldENvbG9ycyA9IGZ1bmN0aW9uIChjb2xvcnMpIHtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBjb2xvcnMubGVuZ3RoOyBpKyspIHtcbiAgICBjb2xvcnNbaV0gPSBDb2xvclNjYWxlLnJnYlRvQXJyYXkoY29sb3JzW2ldKTtcbiAgfVxuICB0aGlzLmNvbG9ycyA9IGNvbG9ycztcbn07XG5cbkNvbG9yU2NhbGUucHJvdG90eXBlLnNldE1heCA9IGZ1bmN0aW9uIChtYXgpIHtcbiAgdGhpcy5jbGVhck1heFZhbHVlID0gbWF4O1xuICBpZiAodHlwZW9mIHRoaXMubm9ybWFsaXplID09PSAnZnVuY3Rpb24nKSB7XG4gICAgdGhpcy5tYXhWYWx1ZSA9IHRoaXMubm9ybWFsaXplKG1heCk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5tYXhWYWx1ZSA9IG1heDtcbiAgfVxufTtcblxuQ29sb3JTY2FsZS5wcm90b3R5cGUuc2V0TWluID0gZnVuY3Rpb24gKG1pbikge1xuICB0aGlzLmNsZWFyTWluVmFsdWUgPSBtaW47XG5cbiAgaWYgKHR5cGVvZiB0aGlzLm5vcm1hbGl6ZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIHRoaXMubWluVmFsdWUgPSB0aGlzLm5vcm1hbGl6ZShtaW4pO1xuICB9IGVsc2Uge1xuICAgIHRoaXMubWluVmFsdWUgPSBtaW47XG4gIH1cbn07XG5cbkNvbG9yU2NhbGUucHJvdG90eXBlLnNldE5vcm1hbGl6ZUZ1bmN0aW9uID0gZnVuY3Rpb24gKGYpIHtcbiAgaWYgKGYgPT09ICdwb2x5bm9taWFsJykge1xuICAgIHRoaXMubm9ybWFsaXplID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICByZXR1cm4gTWF0aC5wb3codmFsdWUsIDAuMik7XG4gICAgfTtcbiAgfSBlbHNlIGlmIChmID09PSAnbGluZWFyJykge1xuICAgIGRlbGV0ZSB0aGlzLm5vcm1hbGl6ZTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLm5vcm1hbGl6ZSA9IGY7XG4gIH1cbiAgdGhpcy5zZXRNaW4odGhpcy5jbGVhck1pblZhbHVlKTtcbiAgdGhpcy5zZXRNYXgodGhpcy5jbGVhck1heFZhbHVlKTtcbn07XG5cbkNvbG9yU2NhbGUucHJvdG90eXBlLnZlY3RvckFkZCA9IGZ1bmN0aW9uICh2ZWN0b3IxLCB2ZWN0b3IyKSB7XG4gIHZhciB2ZWN0b3IgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZWN0b3IxLmxlbmd0aDsgaSsrKSB7XG4gICAgdmVjdG9yW2ldID0gdmVjdG9yMVtpXSArIHZlY3RvcjJbaV07XG4gIH1cbiAgcmV0dXJuIHZlY3Rvcjtcbn07XG5cbkNvbG9yU2NhbGUucHJvdG90eXBlLnZlY3Rvckxlbmd0aCA9IGZ1bmN0aW9uICh2ZWN0b3IpIHtcbiAgdmFyIHJlc3VsdCA9IDA7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdmVjdG9yLmxlbmd0aDsgaSsrKSB7XG4gICAgcmVzdWx0ICs9IHZlY3RvcltpXSAqIHZlY3RvcltpXTtcbiAgfVxuICByZXR1cm4gTWF0aC5zcXJ0KHJlc3VsdCk7XG59O1xuXG5Db2xvclNjYWxlLnByb3RvdHlwZS52ZWN0b3JNdWx0ID0gZnVuY3Rpb24gKHZlY3RvciwgbnVtKSB7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZWN0b3IubGVuZ3RoOyBpKyspIHtcbiAgICByZXN1bHRbaV0gPSB2ZWN0b3JbaV0gKiBudW07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbkNvbG9yU2NhbGUucHJvdG90eXBlLnZlY3RvclN1YnRyYWN0ID0gZnVuY3Rpb24gKHZlY3RvcjEsIHZlY3RvcjIpIHtcbiAgdmFyIHZlY3RvciA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHZlY3RvcjEubGVuZ3RoOyBpKyspIHtcbiAgICB2ZWN0b3JbaV0gPSB2ZWN0b3IxW2ldIC0gdmVjdG9yMltpXTtcbiAgfVxuICByZXR1cm4gdmVjdG9yO1xufTtcblxuQ29sb3JTY2FsZS5wcm90b3R5cGUudmVjdG9yVG9OdW0gPSBmdW5jdGlvbiAodmVjdG9yKSB7XG4gIHZhciBudW0gPSAwO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHZlY3Rvci5sZW5ndGg7IGkrKykge1xuICAgIG51bSArPSBNYXRoLnJvdW5kKHZlY3RvcltpXSkgKiBNYXRoLnBvdygyNTYsIHZlY3Rvci5sZW5ndGggLSBpIC0gMSk7XG4gIH1cbiAgcmV0dXJuIG51bTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuYXBwbHlUcmFuc2Zvcm0gPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBtYXhUcmFuc1gsIG1heFRyYW5zWSwgbWluVHJhbnNYLCBtaW5UcmFuc1k7XG4gIGlmICh0aGlzLmRlZmF1bHRXaWR0aCAqIHRoaXMuc2NhbGUgPD0gdGhpcy53aWR0aCkge1xuICAgIG1heFRyYW5zWCA9ICh0aGlzLndpZHRoIC0gdGhpcy5kZWZhdWx0V2lkdGggKiB0aGlzLnNjYWxlKSAvICgyICogdGhpcy5zY2FsZSk7XG4gICAgbWluVHJhbnNYID0gKHRoaXMud2lkdGggLSB0aGlzLmRlZmF1bHRXaWR0aCAqIHRoaXMuc2NhbGUpIC8gKDIgKiB0aGlzLnNjYWxlKTtcbiAgfSBlbHNlIHtcbiAgICBtYXhUcmFuc1ggPSAwO1xuICAgIG1pblRyYW5zWCA9ICh0aGlzLndpZHRoIC0gdGhpcy5kZWZhdWx0V2lkdGggKiB0aGlzLnNjYWxlKSAvIHRoaXMuc2NhbGU7XG4gIH1cblxuICBpZiAodGhpcy5kZWZhdWx0SGVpZ2h0ICogdGhpcy5zY2FsZSA8PSB0aGlzLmhlaWdodCkge1xuICAgIG1heFRyYW5zWSA9ICh0aGlzLmhlaWdodCAtIHRoaXMuZGVmYXVsdEhlaWdodCAqIHRoaXMuc2NhbGUpIC8gKDIgKiB0aGlzLnNjYWxlKTtcbiAgICBtaW5UcmFuc1kgPSAodGhpcy5oZWlnaHQgLSB0aGlzLmRlZmF1bHRIZWlnaHQgKiB0aGlzLnNjYWxlKSAvICgyICogdGhpcy5zY2FsZSk7XG4gIH0gZWxzZSB7XG4gICAgbWF4VHJhbnNZID0gMDtcbiAgICBtaW5UcmFuc1kgPSAodGhpcy5oZWlnaHQgLSB0aGlzLmRlZmF1bHRIZWlnaHQgKiB0aGlzLnNjYWxlKSAvIHRoaXMuc2NhbGU7XG4gIH1cblxuICBpZiAodGhpcy50cmFuc1kgPiBtYXhUcmFuc1kpIHtcbiAgICB0aGlzLnRyYW5zWSA9IG1heFRyYW5zWTtcbiAgfSBlbHNlIGlmICh0aGlzLnRyYW5zWSA8IG1pblRyYW5zWSkge1xuICAgIHRoaXMudHJhbnNZID0gbWluVHJhbnNZO1xuICB9XG4gIGlmICh0aGlzLnRyYW5zWCA+IG1heFRyYW5zWCkge1xuICAgIHRoaXMudHJhbnNYID0gbWF4VHJhbnNYO1xuICB9IGVsc2UgaWYgKHRoaXMudHJhbnNYIDwgbWluVHJhbnNYKSB7XG4gICAgdGhpcy50cmFuc1ggPSBtaW5UcmFuc1g7XG4gIH1cblxuICB0aGlzLmNhbnZhcy5hcHBseVRyYW5zZm9ybVBhcmFtcyh0aGlzLnNjYWxlLCB0aGlzLnRyYW5zWCwgdGhpcy50cmFuc1kpO1xufTtcblxuSlFWTWFwLnByb3RvdHlwZS5iaW5kWm9vbUJ1dHRvbnMgPSBmdW5jdGlvbiAoKSB7XG4gIHZhciBtYXAgPSB0aGlzO1xuICB0aGlzLmNvbnRhaW5lci5maW5kKCcuanF2bWFwLXpvb21pbicpLmNsaWNrKGZ1bmN0aW9uKCl7XG4gICAgbWFwLnpvb21JbigpO1xuICB9KTtcbiAgdGhpcy5jb250YWluZXIuZmluZCgnLmpxdm1hcC16b29tb3V0JykuY2xpY2soZnVuY3Rpb24oKXtcbiAgICBtYXAuem9vbU91dCgpO1xuICB9KTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuZGVzZWxlY3QgPSBmdW5jdGlvbiAoY2MsIHBhdGgpIHtcbiAgY2MgPSBjYy50b0xvd2VyQ2FzZSgpO1xuICBwYXRoID0gcGF0aCB8fCBqUXVlcnkoJyMnICsgdGhpcy5nZXRDb3VudHJ5SWQoY2MpKVswXTtcblxuICBpZiAodGhpcy5pc1NlbGVjdGVkKGNjKSkge1xuICAgIHRoaXMuc2VsZWN0ZWRSZWdpb25zLnNwbGljZSh0aGlzLnNlbGVjdEluZGV4KGNjKSwgMSk7XG5cbiAgICBqUXVlcnkodGhpcy5jb250YWluZXIpLnRyaWdnZXIoJ3JlZ2lvbkRlc2VsZWN0Lmpxdm1hcCcsIFtjY10pO1xuICAgIHBhdGguY3VycmVudEZpbGxDb2xvciA9IHBhdGguZ2V0T3JpZ2luYWxGaWxsKCk7XG4gICAgcGF0aC5zZXRGaWxsKHBhdGguZ2V0T3JpZ2luYWxGaWxsKCkpO1xuICB9IGVsc2Uge1xuICAgIGZvciAodmFyIGtleSBpbiB0aGlzLmNvdW50cmllcykge1xuICAgICAgdGhpcy5zZWxlY3RlZFJlZ2lvbnMuc3BsaWNlKHRoaXMuc2VsZWN0ZWRSZWdpb25zLmluZGV4T2Yoa2V5KSwgMSk7XG4gICAgICB0aGlzLmNvdW50cmllc1trZXldLmN1cnJlbnRGaWxsQ29sb3IgPSB0aGlzLmNvbG9yO1xuICAgICAgdGhpcy5jb3VudHJpZXNba2V5XS5zZXRGaWxsKHRoaXMuY29sb3IpO1xuICAgIH1cbiAgfVxufTtcblxuSlFWTWFwLnByb3RvdHlwZS5nZXRDb3VudHJ5SWQgPSBmdW5jdGlvbiAoY2MpIHtcbiAgcmV0dXJuICdqcXZtYXAnICsgdGhpcy5pbmRleCArICdfJyArIGNjO1xufTtcblxuSlFWTWFwLnByb3RvdHlwZS5nZXRQaW4gPSBmdW5jdGlvbihjYyl7XG4gIHZhciBwaW5PYmogPSBqUXVlcnkoJyMnICsgdGhpcy5nZXRQaW5JZChjYykpO1xuICByZXR1cm4gcGluT2JqLmh0bWwoKTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuZ2V0UGluSWQgPSBmdW5jdGlvbiAoY2MpIHtcbiAgcmV0dXJuIHRoaXMuZ2V0Q291bnRyeUlkKGNjKSArICdfcGluJztcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuZ2V0UGlucyA9IGZ1bmN0aW9uKCl7XG4gIHZhciBwaW5zID0gdGhpcy5jb250YWluZXIuZmluZCgnLmpxdm1hcC1waW4nKTtcbiAgdmFyIHJldCA9IHt9O1xuICBqUXVlcnkuZWFjaChwaW5zLCBmdW5jdGlvbihpbmRleCwgcGluT2JqKXtcbiAgICBwaW5PYmogPSBqUXVlcnkocGluT2JqKTtcbiAgICB2YXIgY2MgPSBwaW5PYmouYXR0cignZm9yJykudG9Mb3dlckNhc2UoKTtcbiAgICB2YXIgcGluQ29udGVudCA9IHBpbk9iai5odG1sKCk7XG4gICAgcmV0W2NjXSA9IHBpbkNvbnRlbnQ7XG4gIH0pO1xuICByZXR1cm4gSlNPTi5zdHJpbmdpZnkocmV0KTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuaGlnaGxpZ2h0ID0gZnVuY3Rpb24gKGNjLCBwYXRoKSB7XG4gIHBhdGggPSBwYXRoIHx8IGpRdWVyeSgnIycgKyB0aGlzLmdldENvdW50cnlJZChjYykpWzBdO1xuICBpZiAodGhpcy5ob3Zlck9wYWNpdHkpIHtcbiAgICBwYXRoLnNldE9wYWNpdHkodGhpcy5ob3Zlck9wYWNpdHkpO1xuICB9IGVsc2UgaWYgKHRoaXMuaG92ZXJDb2xvcnMgJiYgKGNjIGluIHRoaXMuaG92ZXJDb2xvcnMpKSB7XG4gICAgcGF0aC5jdXJyZW50RmlsbENvbG9yID0gcGF0aC5nZXRGaWxsKCkgKyAnJztcbiAgICBwYXRoLnNldEZpbGwodGhpcy5ob3ZlckNvbG9yc1tjY10pO1xuICB9IGVsc2UgaWYgKHRoaXMuaG92ZXJDb2xvcikge1xuICAgIHBhdGguY3VycmVudEZpbGxDb2xvciA9IHBhdGguZ2V0RmlsbCgpICsgJyc7XG4gICAgcGF0aC5zZXRGaWxsKHRoaXMuaG92ZXJDb2xvcik7XG4gIH1cbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuaXNTZWxlY3RlZCA9IGZ1bmN0aW9uKGNjKSB7XG4gIHJldHVybiB0aGlzLnNlbGVjdEluZGV4KGNjKSA+PSAwO1xufTtcblxuSlFWTWFwLnByb3RvdHlwZS5tYWtlRHJhZ2dhYmxlID0gZnVuY3Rpb24gKCkge1xuICB2YXIgbW91c2VEb3duID0gZmFsc2U7XG4gIHZhciBvbGRQYWdlWCwgb2xkUGFnZVk7XG4gIHZhciBzZWxmID0gdGhpcztcblxuICBzZWxmLmlzTW92aW5nID0gZmFsc2U7XG4gIHNlbGYuaXNNb3ZpbmdUaW1lb3V0ID0gZmFsc2U7XG5cbiAgdmFyIGxhc3RUb3VjaENvdW50O1xuICB2YXIgdG91Y2hDZW50ZXJYO1xuICB2YXIgdG91Y2hDZW50ZXJZO1xuICB2YXIgdG91Y2hTdGFydERpc3RhbmNlO1xuICB2YXIgdG91Y2hTdGFydFNjYWxlO1xuICB2YXIgdG91Y2hYO1xuICB2YXIgdG91Y2hZO1xuXG4gIHRoaXMuY29udGFpbmVyLm1vdXNlbW92ZShmdW5jdGlvbiAoZSkge1xuXG4gICAgaWYgKG1vdXNlRG93bikge1xuICAgICAgc2VsZi50cmFuc1ggLT0gKG9sZFBhZ2VYIC0gZS5wYWdlWCkgLyBzZWxmLnNjYWxlO1xuICAgICAgc2VsZi50cmFuc1kgLT0gKG9sZFBhZ2VZIC0gZS5wYWdlWSkgLyBzZWxmLnNjYWxlO1xuXG4gICAgICBzZWxmLmFwcGx5VHJhbnNmb3JtKCk7XG5cbiAgICAgIG9sZFBhZ2VYID0gZS5wYWdlWDtcbiAgICAgIG9sZFBhZ2VZID0gZS5wYWdlWTtcblxuICAgICAgc2VsZi5pc01vdmluZyA9IHRydWU7XG4gICAgICBpZiAoc2VsZi5pc01vdmluZ1RpbWVvdXQpIHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHNlbGYuaXNNb3ZpbmdUaW1lb3V0KTtcbiAgICAgIH1cblxuICAgICAgc2VsZi5jb250YWluZXIudHJpZ2dlcignZHJhZycpO1xuICAgIH1cblxuICAgIHJldHVybiBmYWxzZTtcblxuICB9KS5tb3VzZWRvd24oZnVuY3Rpb24gKGUpIHtcblxuICAgIG1vdXNlRG93biA9IHRydWU7XG4gICAgb2xkUGFnZVggPSBlLnBhZ2VYO1xuICAgIG9sZFBhZ2VZID0gZS5wYWdlWTtcblxuICAgIHJldHVybiBmYWxzZTtcblxuICB9KS5tb3VzZXVwKGZ1bmN0aW9uICgpIHtcblxuICAgIG1vdXNlRG93biA9IGZhbHNlO1xuXG4gICAgY2xlYXJUaW1lb3V0KHNlbGYuaXNNb3ZpbmdUaW1lb3V0KTtcbiAgICBzZWxmLmlzTW92aW5nVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgc2VsZi5pc01vdmluZyA9IGZhbHNlO1xuICAgIH0sIDEwMCk7XG5cbiAgICByZXR1cm4gZmFsc2U7XG5cbiAgfSkubW91c2VvdXQoZnVuY3Rpb24gKCkge1xuXG4gICAgaWYobW91c2VEb3duICYmIHNlbGYuaXNNb3Zpbmcpe1xuXG4gICAgICBjbGVhclRpbWVvdXQoc2VsZi5pc01vdmluZ1RpbWVvdXQpO1xuICAgICAgc2VsZi5pc01vdmluZ1RpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgbW91c2VEb3duID0gZmFsc2U7XG4gICAgICAgIHNlbGYuaXNNb3ZpbmcgPSBmYWxzZTtcbiAgICAgIH0sIDEwMCk7XG5cbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH0pO1xuXG4gIGpRdWVyeSh0aGlzLmNvbnRhaW5lcikuYmluZCgndG91Y2htb3ZlJywgZnVuY3Rpb24gKGUpIHtcblxuICAgIHZhciBvZmZzZXQ7XG4gICAgdmFyIHNjYWxlO1xuICAgIHZhciB0b3VjaGVzID0gZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXM7XG4gICAgdmFyIHRyYW5zZm9ybVhPbGQ7XG4gICAgdmFyIHRyYW5zZm9ybVlPbGQ7XG5cbiAgICBpZiAodG91Y2hlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgIGlmIChsYXN0VG91Y2hDb3VudCA9PT0gMSkge1xuXG4gICAgICAgIGlmKHRvdWNoWCA9PT0gdG91Y2hlc1swXS5wYWdlWCAmJiB0b3VjaFkgPT09IHRvdWNoZXNbMF0ucGFnZVkpe1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIHRyYW5zZm9ybVhPbGQgPSBzZWxmLnRyYW5zWDtcbiAgICAgICAgdHJhbnNmb3JtWU9sZCA9IHNlbGYudHJhbnNZO1xuXG4gICAgICAgIHNlbGYudHJhbnNYIC09ICh0b3VjaFggLSB0b3VjaGVzWzBdLnBhZ2VYKSAvIHNlbGYuc2NhbGU7XG4gICAgICAgIHNlbGYudHJhbnNZIC09ICh0b3VjaFkgLSB0b3VjaGVzWzBdLnBhZ2VZKSAvIHNlbGYuc2NhbGU7XG5cbiAgICAgICAgc2VsZi5hcHBseVRyYW5zZm9ybSgpO1xuXG4gICAgICAgIGlmICh0cmFuc2Zvcm1YT2xkICE9PSBzZWxmLnRyYW5zWCB8fCB0cmFuc2Zvcm1ZT2xkICE9PSBzZWxmLnRyYW5zWSkge1xuICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHNlbGYuaXNNb3ZpbmcgPSB0cnVlO1xuICAgICAgICBpZiAoc2VsZi5pc01vdmluZ1RpbWVvdXQpIHtcbiAgICAgICAgICBjbGVhclRpbWVvdXQoc2VsZi5pc01vdmluZ1RpbWVvdXQpO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIHRvdWNoWCA9IHRvdWNoZXNbMF0ucGFnZVg7XG4gICAgICB0b3VjaFkgPSB0b3VjaGVzWzBdLnBhZ2VZO1xuXG4gICAgfSBlbHNlIGlmICh0b3VjaGVzLmxlbmd0aCA9PT0gMikge1xuXG4gICAgICBpZiAobGFzdFRvdWNoQ291bnQgPT09IDIpIHtcbiAgICAgICAgc2NhbGUgPSBNYXRoLnNxcnQoXG4gICAgICAgICAgICBNYXRoLnBvdyh0b3VjaGVzWzBdLnBhZ2VYIC0gdG91Y2hlc1sxXS5wYWdlWCwgMikgK1xuICAgICAgICAgICAgTWF0aC5wb3codG91Y2hlc1swXS5wYWdlWSAtIHRvdWNoZXNbMV0ucGFnZVksIDIpXG4gICAgICAgICAgKSAvIHRvdWNoU3RhcnREaXN0YW5jZTtcblxuICAgICAgICBzZWxmLnNldFNjYWxlKFxuICAgICAgICAgIHRvdWNoU3RhcnRTY2FsZSAqIHNjYWxlLFxuICAgICAgICAgIHRvdWNoQ2VudGVyWCxcbiAgICAgICAgICB0b3VjaENlbnRlcllcbiAgICAgICAgKTtcblxuICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgb2Zmc2V0ID0galF1ZXJ5KHNlbGYuY29udGFpbmVyKS5vZmZzZXQoKTtcbiAgICAgICAgaWYgKHRvdWNoZXNbMF0ucGFnZVggPiB0b3VjaGVzWzFdLnBhZ2VYKSB7XG4gICAgICAgICAgdG91Y2hDZW50ZXJYID0gdG91Y2hlc1sxXS5wYWdlWCArICh0b3VjaGVzWzBdLnBhZ2VYIC0gdG91Y2hlc1sxXS5wYWdlWCkgLyAyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRvdWNoQ2VudGVyWCA9IHRvdWNoZXNbMF0ucGFnZVggKyAodG91Y2hlc1sxXS5wYWdlWCAtIHRvdWNoZXNbMF0ucGFnZVgpIC8gMjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmICh0b3VjaGVzWzBdLnBhZ2VZID4gdG91Y2hlc1sxXS5wYWdlWSkge1xuICAgICAgICAgIHRvdWNoQ2VudGVyWSA9IHRvdWNoZXNbMV0ucGFnZVkgKyAodG91Y2hlc1swXS5wYWdlWSAtIHRvdWNoZXNbMV0ucGFnZVkpIC8gMjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICB0b3VjaENlbnRlclkgPSB0b3VjaGVzWzBdLnBhZ2VZICsgKHRvdWNoZXNbMV0ucGFnZVkgLSB0b3VjaGVzWzBdLnBhZ2VZKSAvIDI7XG4gICAgICAgIH1cblxuICAgICAgICB0b3VjaENlbnRlclggLT0gb2Zmc2V0LmxlZnQ7XG4gICAgICAgIHRvdWNoQ2VudGVyWSAtPSBvZmZzZXQudG9wO1xuICAgICAgICB0b3VjaFN0YXJ0U2NhbGUgPSBzZWxmLnNjYWxlO1xuXG4gICAgICAgIHRvdWNoU3RhcnREaXN0YW5jZSA9IE1hdGguc3FydChcbiAgICAgICAgICBNYXRoLnBvdyh0b3VjaGVzWzBdLnBhZ2VYIC0gdG91Y2hlc1sxXS5wYWdlWCwgMikgK1xuICAgICAgICAgIE1hdGgucG93KHRvdWNoZXNbMF0ucGFnZVkgLSB0b3VjaGVzWzFdLnBhZ2VZLCAyKVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RUb3VjaENvdW50ID0gdG91Y2hlcy5sZW5ndGg7XG4gIH0pO1xuXG4gIGpRdWVyeSh0aGlzLmNvbnRhaW5lcikuYmluZCgndG91Y2hzdGFydCcsIGZ1bmN0aW9uICgpIHtcbiAgICBsYXN0VG91Y2hDb3VudCA9IDA7XG4gIH0pO1xuXG4gIGpRdWVyeSh0aGlzLmNvbnRhaW5lcikuYmluZCgndG91Y2hlbmQnLCBmdW5jdGlvbiAoKSB7XG4gICAgbGFzdFRvdWNoQ291bnQgPSAwO1xuICB9KTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUucGxhY2VQaW5zID0gZnVuY3Rpb24ocGlucywgcGluTW9kZSl7XG4gIHZhciBtYXAgPSB0aGlzO1xuXG4gIGlmKCFwaW5Nb2RlIHx8IChwaW5Nb2RlICE9PSAnY29udGVudCcgJiYgcGluTW9kZSAhPT0gJ2lkJykpIHtcbiAgICBwaW5Nb2RlID0gJ2NvbnRlbnQnO1xuICB9XG5cbiAgaWYocGluTW9kZSA9PT0gJ2NvbnRlbnQnKSB7Ly90cmVhdCBwaW4gYXMgY29udGVudFxuICAgIGpRdWVyeS5lYWNoKHBpbnMsIGZ1bmN0aW9uKGluZGV4LCBwaW4pe1xuICAgICAgaWYoalF1ZXJ5KCcjJyArIG1hcC5nZXRDb3VudHJ5SWQoaW5kZXgpKS5sZW5ndGggPT09IDApe1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIHZhciBwaW5JbmRleCA9IG1hcC5nZXRQaW5JZChpbmRleCk7XG4gICAgICB2YXIgJHBpbiA9IGpRdWVyeSgnIycgKyBwaW5JbmRleCk7XG4gICAgICBpZigkcGluLmxlbmd0aCA+IDApe1xuICAgICAgICAkcGluLnJlbW92ZSgpO1xuICAgICAgfVxuICAgICAgbWFwLmNvbnRhaW5lci5hcHBlbmQoJzxkaXYgaWQ9XCInICsgcGluSW5kZXggKyAnXCIgZm9yPVwiJyArIGluZGV4ICsgJ1wiIGNsYXNzPVwianF2bWFwLXBpblwiIHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGVcIj4nICsgcGluICsgJzwvZGl2PicpO1xuICAgIH0pO1xuICB9IGVsc2UgeyAvL3RyZWF0IHBpbiBhcyBpZCBvZiBhbiBodG1sIGNvbnRlbnRcbiAgICBqUXVlcnkuZWFjaChwaW5zLCBmdW5jdGlvbihpbmRleCwgcGluKXtcbiAgICAgIGlmKGpRdWVyeSgnIycgKyBtYXAuZ2V0Q291bnRyeUlkKGluZGV4KSkubGVuZ3RoID09PSAwKXtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgdmFyIHBpbkluZGV4ID0gbWFwLmdldFBpbklkKGluZGV4KTtcbiAgICAgIHZhciAkcGluID0galF1ZXJ5KCcjJyArIHBpbkluZGV4KTtcbiAgICAgIGlmKCRwaW4ubGVuZ3RoID4gMCl7XG4gICAgICAgICRwaW4ucmVtb3ZlKCk7XG4gICAgICB9XG4gICAgICBtYXAuY29udGFpbmVyLmFwcGVuZCgnPGRpdiBpZD1cIicgKyBwaW5JbmRleCArICdcIiBmb3I9XCInICsgaW5kZXggKyAnXCIgY2xhc3M9XCJqcXZtYXAtcGluXCIgc3R5bGU9XCJwb3NpdGlvbjphYnNvbHV0ZVwiPjwvZGl2PicpO1xuICAgICAgJHBpbi5hcHBlbmQoalF1ZXJ5KCcjJyArIHBpbikpO1xuICAgIH0pO1xuICB9XG5cbiAgdGhpcy5wb3NpdGlvblBpbnMoKTtcbiAgaWYoIXRoaXMucGluSGFuZGxlcnMpe1xuICAgIHRoaXMucGluSGFuZGxlcnMgPSB0cnVlO1xuICAgIHZhciBwb3NpdGlvbkZpeCA9IGZ1bmN0aW9uKCl7XG4gICAgICBtYXAucG9zaXRpb25QaW5zKCk7XG4gICAgfTtcbiAgICB0aGlzLmNvbnRhaW5lci5iaW5kKCd6b29tSW4nLCBwb3NpdGlvbkZpeClcbiAgICAgIC5iaW5kKCd6b29tT3V0JywgcG9zaXRpb25GaXgpXG4gICAgICAuYmluZCgnZHJhZycsIHBvc2l0aW9uRml4KTtcbiAgfVxufTtcblxuSlFWTWFwLnByb3RvdHlwZS5wb3NpdGlvblBpbnMgPSBmdW5jdGlvbigpe1xuICB2YXIgbWFwID0gdGhpcztcbiAgdmFyIHBpbnMgPSB0aGlzLmNvbnRhaW5lci5maW5kKCcuanF2bWFwLXBpbicpO1xuICBqUXVlcnkuZWFjaChwaW5zLCBmdW5jdGlvbihpbmRleCwgcGluT2JqKXtcbiAgICBwaW5PYmogPSBqUXVlcnkocGluT2JqKTtcbiAgICB2YXIgY291bnRyeUlkID0gbWFwLmdldENvdW50cnlJZChwaW5PYmouYXR0cignZm9yJykudG9Mb3dlckNhc2UoKSk7XG4gICAgdmFyIGNvdW50cnlPYmogPSBqUXVlcnkoJyMnICsgY291bnRyeUlkKTtcbiAgICB2YXIgYmJveCA9IGNvdW50cnlPYmpbMF0uZ2V0QkJveCgpO1xuXG4gICAgdmFyIHNjYWxlID0gbWFwLnNjYWxlO1xuICAgIHZhciByb290Q29vcmRzID0gbWFwLmNhbnZhcy5yb290R3JvdXAuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgdmFyIG1hcENvb3JkcyA9IG1hcC5jb250YWluZXJbMF0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgdmFyIGNvb3JkcyA9IHtcbiAgICAgIGxlZnQ6IHJvb3RDb29yZHMubGVmdCAtIG1hcENvb3Jkcy5sZWZ0LFxuICAgICAgdG9wOiByb290Q29vcmRzLnRvcCAtIG1hcENvb3Jkcy50b3BcbiAgICB9O1xuXG4gICAgdmFyIG1pZGRsZVggPSAoYmJveC54ICogc2NhbGUpICsgKChiYm94LndpZHRoICogc2NhbGUpIC8gMik7XG4gICAgdmFyIG1pZGRsZVkgPSAoYmJveC55ICogc2NhbGUpICsgKChiYm94LmhlaWdodCAqIHNjYWxlKSAvIDIpO1xuXG4gICAgcGluT2JqLmNzcyh7XG4gICAgICBsZWZ0OiBjb29yZHMubGVmdCArIG1pZGRsZVggLSAocGluT2JqLndpZHRoKCkgLyAyKSxcbiAgICAgIHRvcDogY29vcmRzLnRvcCArIG1pZGRsZVkgLSAocGluT2JqLmhlaWdodCgpIC8gMilcbiAgICB9KTtcbiAgfSk7XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnJlbW92ZVBpbiA9IGZ1bmN0aW9uKGNjKSB7XG4gIGNjID0gY2MudG9Mb3dlckNhc2UoKTtcbiAgalF1ZXJ5KCcjJyArIHRoaXMuZ2V0UGluSWQoY2MpKS5yZW1vdmUoKTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUucmVtb3ZlUGlucyA9IGZ1bmN0aW9uKCl7XG4gIHRoaXMuY29udGFpbmVyLmZpbmQoJy5qcXZtYXAtcGluJykucmVtb3ZlKCk7XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnJlc2V0ID0gZnVuY3Rpb24gKCkge1xuICBmb3IgKHZhciBrZXkgaW4gdGhpcy5jb3VudHJpZXMpIHtcbiAgICB0aGlzLmNvdW50cmllc1trZXldLnNldEZpbGwodGhpcy5jb2xvcik7XG4gIH1cbiAgdGhpcy5zY2FsZSA9IHRoaXMuYmFzZVNjYWxlO1xuICB0aGlzLnRyYW5zWCA9IHRoaXMuYmFzZVRyYW5zWDtcbiAgdGhpcy50cmFuc1kgPSB0aGlzLmJhc2VUcmFuc1k7XG4gIHRoaXMuYXBwbHlUcmFuc2Zvcm0oKTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUucmVzaXplID0gZnVuY3Rpb24gKCkge1xuICB2YXIgY3VyQmFzZVNjYWxlID0gdGhpcy5iYXNlU2NhbGU7XG4gIGlmICh0aGlzLndpZHRoIC8gdGhpcy5oZWlnaHQgPiB0aGlzLmRlZmF1bHRXaWR0aCAvIHRoaXMuZGVmYXVsdEhlaWdodCkge1xuICAgIHRoaXMuYmFzZVNjYWxlID0gdGhpcy5oZWlnaHQgLyB0aGlzLmRlZmF1bHRIZWlnaHQ7XG4gICAgdGhpcy5iYXNlVHJhbnNYID0gTWF0aC5hYnModGhpcy53aWR0aCAtIHRoaXMuZGVmYXVsdFdpZHRoICogdGhpcy5iYXNlU2NhbGUpIC8gKDIgKiB0aGlzLmJhc2VTY2FsZSk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5iYXNlU2NhbGUgPSB0aGlzLndpZHRoIC8gdGhpcy5kZWZhdWx0V2lkdGg7XG4gICAgdGhpcy5iYXNlVHJhbnNZID0gTWF0aC5hYnModGhpcy5oZWlnaHQgLSB0aGlzLmRlZmF1bHRIZWlnaHQgKiB0aGlzLmJhc2VTY2FsZSkgLyAoMiAqIHRoaXMuYmFzZVNjYWxlKTtcbiAgfVxuICB0aGlzLnNjYWxlICo9IHRoaXMuYmFzZVNjYWxlIC8gY3VyQmFzZVNjYWxlO1xuICB0aGlzLnRyYW5zWCAqPSB0aGlzLmJhc2VTY2FsZSAvIGN1ckJhc2VTY2FsZTtcbiAgdGhpcy50cmFuc1kgKj0gdGhpcy5iYXNlU2NhbGUgLyBjdXJCYXNlU2NhbGU7XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnNlbGVjdCA9IGZ1bmN0aW9uIChjYywgcGF0aCkge1xuICBjYyA9IGNjLnRvTG93ZXJDYXNlKCk7XG4gIHBhdGggPSBwYXRoIHx8IGpRdWVyeSgnIycgKyB0aGlzLmdldENvdW50cnlJZChjYykpWzBdO1xuXG4gIGlmICghdGhpcy5pc1NlbGVjdGVkKGNjKSkge1xuICAgIGlmICh0aGlzLm11bHRpU2VsZWN0UmVnaW9uKSB7XG4gICAgICB0aGlzLnNlbGVjdGVkUmVnaW9ucy5wdXNoKGNjKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5zZWxlY3RlZFJlZ2lvbnMgPSBbY2NdO1xuICAgIH1cblxuICAgIGpRdWVyeSh0aGlzLmNvbnRhaW5lcikudHJpZ2dlcigncmVnaW9uU2VsZWN0Lmpxdm1hcCcsIFtjY10pO1xuICAgIGlmICh0aGlzLnNlbGVjdGVkQ29sb3IgJiYgcGF0aCkge1xuICAgICAgcGF0aC5jdXJyZW50RmlsbENvbG9yID0gdGhpcy5zZWxlY3RlZENvbG9yO1xuICAgICAgcGF0aC5zZXRGaWxsKHRoaXMuc2VsZWN0ZWRDb2xvcik7XG4gICAgfVxuICB9XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnNlbGVjdEluZGV4ID0gZnVuY3Rpb24gKGNjKSB7XG4gIGNjID0gY2MudG9Mb3dlckNhc2UoKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnNlbGVjdGVkUmVnaW9ucy5sZW5ndGg7IGkrKykge1xuICAgIGlmIChjYyA9PT0gdGhpcy5zZWxlY3RlZFJlZ2lvbnNbaV0pIHtcbiAgICAgIHJldHVybiBpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gLTE7XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnNldEJhY2tncm91bmRDb2xvciA9IGZ1bmN0aW9uIChiYWNrZ3JvdW5kQ29sb3IpIHtcbiAgdGhpcy5jb250YWluZXIuY3NzKCdiYWNrZ3JvdW5kLWNvbG9yJywgYmFja2dyb3VuZENvbG9yKTtcbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuc2V0Q29sb3JzID0gZnVuY3Rpb24gKGtleSwgY29sb3IpIHtcbiAgaWYgKHR5cGVvZiBrZXkgPT09ICdzdHJpbmcnKSB7XG4gICAgdGhpcy5jb3VudHJpZXNba2V5XS5zZXRGaWxsKGNvbG9yKTtcbiAgICB0aGlzLmNvdW50cmllc1trZXldLnNldEF0dHJpYnV0ZSgnb3JpZ2luYWwnLCBjb2xvcik7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNvbG9ycyA9IGtleTtcblxuICAgIGZvciAodmFyIGNvZGUgaW4gY29sb3JzKSB7XG4gICAgICBpZiAodGhpcy5jb3VudHJpZXNbY29kZV0pIHtcbiAgICAgICAgdGhpcy5jb3VudHJpZXNbY29kZV0uc2V0RmlsbChjb2xvcnNbY29kZV0pO1xuICAgICAgICB0aGlzLmNvdW50cmllc1tjb2RlXS5zZXRBdHRyaWJ1dGUoJ29yaWdpbmFsJywgY29sb3JzW2NvZGVdKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn07XG5cbkpRVk1hcC5wcm90b3R5cGUuc2V0Tm9ybWFsaXplRnVuY3Rpb24gPSBmdW5jdGlvbiAoZikge1xuICB0aGlzLmNvbG9yU2NhbGUuc2V0Tm9ybWFsaXplRnVuY3Rpb24oZik7XG5cbiAgaWYgKHRoaXMudmFsdWVzKSB7XG4gICAgdGhpcy5zZXRWYWx1ZXModGhpcy52YWx1ZXMpO1xuICB9XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnNldFNjYWxlID0gZnVuY3Rpb24gKHNjYWxlKSB7XG4gIHRoaXMuc2NhbGUgPSBzY2FsZTtcbiAgdGhpcy5hcHBseVRyYW5zZm9ybSgpO1xufTtcblxuSlFWTWFwLnByb3RvdHlwZS5zZXRTY2FsZUNvbG9ycyA9IGZ1bmN0aW9uIChjb2xvcnMpIHtcbiAgdGhpcy5jb2xvclNjYWxlLnNldENvbG9ycyhjb2xvcnMpO1xuXG4gIGlmICh0aGlzLnZhbHVlcykge1xuICAgIHRoaXMuc2V0VmFsdWVzKHRoaXMudmFsdWVzKTtcbiAgfVxufTtcblxuSlFWTWFwLnByb3RvdHlwZS5zZXRWYWx1ZXMgPSBmdW5jdGlvbiAodmFsdWVzKSB7XG4gIHZhciBtYXggPSAwLFxuICAgIG1pbiA9IE51bWJlci5NQVhfVkFMVUUsXG4gICAgdmFsO1xuXG4gIGZvciAodmFyIGNjIGluIHZhbHVlcykge1xuICAgIGNjID0gY2MudG9Mb3dlckNhc2UoKTtcbiAgICB2YWwgPSBwYXJzZUZsb2F0KHZhbHVlc1tjY10pO1xuXG4gICAgaWYgKGlzTmFOKHZhbCkpIHtcbiAgICAgIGNvbnRpbnVlO1xuICAgIH1cbiAgICBpZiAodmFsID4gbWF4KSB7XG4gICAgICBtYXggPSB2YWx1ZXNbY2NdO1xuICAgIH1cbiAgICBpZiAodmFsIDwgbWluKSB7XG4gICAgICBtaW4gPSB2YWw7XG4gICAgfVxuICB9XG5cbiAgaWYgKG1pbiA9PT0gbWF4KSB7XG4gICAgbWF4Kys7XG4gIH1cblxuICB0aGlzLmNvbG9yU2NhbGUuc2V0TWluKG1pbik7XG4gIHRoaXMuY29sb3JTY2FsZS5zZXRNYXgobWF4KTtcblxuICB2YXIgY29sb3JzID0ge307XG4gIGZvciAoY2MgaW4gdmFsdWVzKSB7XG4gICAgY2MgPSBjYy50b0xvd2VyQ2FzZSgpO1xuICAgIHZhbCA9IHBhcnNlRmxvYXQodmFsdWVzW2NjXSk7XG4gICAgY29sb3JzW2NjXSA9IGlzTmFOKHZhbCkgPyB0aGlzLmNvbG9yIDogdGhpcy5jb2xvclNjYWxlLmdldENvbG9yKHZhbCk7XG4gIH1cbiAgdGhpcy5zZXRDb2xvcnMoY29sb3JzKTtcbiAgdGhpcy52YWx1ZXMgPSB2YWx1ZXM7XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnVuaGlnaGxpZ2h0ID0gZnVuY3Rpb24gKGNjLCBwYXRoKSB7XG4gIGNjID0gY2MudG9Mb3dlckNhc2UoKTtcbiAgcGF0aCA9IHBhdGggfHwgalF1ZXJ5KCcjJyArIHRoaXMuZ2V0Q291bnRyeUlkKGNjKSlbMF07XG4gIHBhdGguc2V0T3BhY2l0eSgxKTtcbiAgaWYgKHBhdGguY3VycmVudEZpbGxDb2xvcikge1xuICAgIHBhdGguc2V0RmlsbChwYXRoLmN1cnJlbnRGaWxsQ29sb3IpO1xuICB9XG59O1xuXG5KUVZNYXAucHJvdG90eXBlLnpvb21JbiA9IGZ1bmN0aW9uICgpIHtcbiAgdmFyIG1hcCA9IHRoaXM7XG4gIHZhciBzbGlkZXJEZWx0YSA9IChqUXVlcnkoJyN6b29tJykuaW5uZXJIZWlnaHQoKSAtIDYgKiAyIC0gMTUgKiAyIC0gMyAqIDIgLSA3IC0gNikgLyAodGhpcy56b29tTWF4U3RlcCAtIHRoaXMuem9vbUN1clN0ZXApO1xuXG4gIGlmIChtYXAuem9vbUN1clN0ZXAgPCBtYXAuem9vbU1heFN0ZXApIHtcbiAgICBtYXAudHJhbnNYIC09IChtYXAud2lkdGggLyBtYXAuc2NhbGUgLSBtYXAud2lkdGggLyAobWFwLnNjYWxlICogbWFwLnpvb21TdGVwKSkgLyAyO1xuICAgIG1hcC50cmFuc1kgLT0gKG1hcC5oZWlnaHQgLyBtYXAuc2NhbGUgLSBtYXAuaGVpZ2h0IC8gKG1hcC5zY2FsZSAqIG1hcC56b29tU3RlcCkpIC8gMjtcbiAgICBtYXAuc2V0U2NhbGUobWFwLnNjYWxlICogbWFwLnpvb21TdGVwKTtcbiAgICBtYXAuem9vbUN1clN0ZXArKztcblxuICAgIHZhciAkc2xpZGVyID0galF1ZXJ5KCcjem9vbVNsaWRlcicpO1xuXG4gICAgJHNsaWRlci5jc3MoJ3RvcCcsIHBhcnNlSW50KCRzbGlkZXIuY3NzKCd0b3AnKSwgMTApIC0gc2xpZGVyRGVsdGEpO1xuXG4gICAgbWFwLmNvbnRhaW5lci50cmlnZ2VyKCd6b29tSW4nKTtcbiAgfVxufTtcblxuSlFWTWFwLnByb3RvdHlwZS56b29tT3V0ID0gZnVuY3Rpb24gKCkge1xuICB2YXIgbWFwID0gdGhpcztcbiAgdmFyIHNsaWRlckRlbHRhID0gKGpRdWVyeSgnI3pvb20nKS5pbm5lckhlaWdodCgpIC0gNiAqIDIgLSAxNSAqIDIgLSAzICogMiAtIDcgLSA2KSAvICh0aGlzLnpvb21NYXhTdGVwIC0gdGhpcy56b29tQ3VyU3RlcCk7XG5cbiAgaWYgKG1hcC56b29tQ3VyU3RlcCA+IDEpIHtcbiAgICBtYXAudHJhbnNYICs9IChtYXAud2lkdGggLyAobWFwLnNjYWxlIC8gbWFwLnpvb21TdGVwKSAtIG1hcC53aWR0aCAvIG1hcC5zY2FsZSkgLyAyO1xuICAgIG1hcC50cmFuc1kgKz0gKG1hcC5oZWlnaHQgLyAobWFwLnNjYWxlIC8gbWFwLnpvb21TdGVwKSAtIG1hcC5oZWlnaHQgLyBtYXAuc2NhbGUpIC8gMjtcbiAgICBtYXAuc2V0U2NhbGUobWFwLnNjYWxlIC8gbWFwLnpvb21TdGVwKTtcbiAgICBtYXAuem9vbUN1clN0ZXAtLTtcblxuICAgIHZhciAkc2xpZGVyID0galF1ZXJ5KCcjem9vbVNsaWRlcicpO1xuXG4gICAgJHNsaWRlci5jc3MoJ3RvcCcsIHBhcnNlSW50KCRzbGlkZXIuY3NzKCd0b3AnKSwgMTApICsgc2xpZGVyRGVsdGEpO1xuXG4gICAgbWFwLmNvbnRhaW5lci50cmlnZ2VyKCd6b29tT3V0Jyk7XG4gIH1cbn07XG5cblZlY3RvckNhbnZhcy5wcm90b3R5cGUuYXBwbHlUcmFuc2Zvcm1QYXJhbXMgPSBmdW5jdGlvbiAoc2NhbGUsIHRyYW5zWCwgdHJhbnNZKSB7XG4gIGlmICh0aGlzLm1vZGUgPT09ICdzdmcnKSB7XG4gICAgdGhpcy5yb290R3JvdXAuc2V0QXR0cmlidXRlKCd0cmFuc2Zvcm0nLCAnc2NhbGUoJyArIHNjYWxlICsgJykgdHJhbnNsYXRlKCcgKyB0cmFuc1ggKyAnLCAnICsgdHJhbnNZICsgJyknKTtcbiAgfSBlbHNlIHtcbiAgICB0aGlzLnJvb3RHcm91cC5jb29yZG9yaWdpbiA9ICh0aGlzLndpZHRoIC0gdHJhbnNYKSArICcsJyArICh0aGlzLmhlaWdodCAtIHRyYW5zWSk7XG4gICAgdGhpcy5yb290R3JvdXAuY29vcmRzaXplID0gdGhpcy53aWR0aCAvIHNjYWxlICsgJywnICsgdGhpcy5oZWlnaHQgLyBzY2FsZTtcbiAgfVxufTtcblxuVmVjdG9yQ2FudmFzLnByb3RvdHlwZS5jcmVhdGVHcm91cCA9IGZ1bmN0aW9uIChpc1Jvb3QpIHtcbiAgdmFyIG5vZGU7XG4gIGlmICh0aGlzLm1vZGUgPT09ICdzdmcnKSB7XG4gICAgbm9kZSA9IHRoaXMuY3JlYXRlU3ZnTm9kZSgnZycpO1xuICB9IGVsc2Uge1xuICAgIG5vZGUgPSB0aGlzLmNyZWF0ZVZtbE5vZGUoJ2dyb3VwJyk7XG4gICAgbm9kZS5zdHlsZS53aWR0aCA9IHRoaXMud2lkdGggKyAncHgnO1xuICAgIG5vZGUuc3R5bGUuaGVpZ2h0ID0gdGhpcy5oZWlnaHQgKyAncHgnO1xuICAgIG5vZGUuc3R5bGUubGVmdCA9ICcwcHgnO1xuICAgIG5vZGUuc3R5bGUudG9wID0gJzBweCc7XG4gICAgbm9kZS5jb29yZG9yaWdpbiA9ICcwIDAnO1xuICAgIG5vZGUuY29vcmRzaXplID0gdGhpcy53aWR0aCArICcgJyArIHRoaXMuaGVpZ2h0O1xuICB9XG5cbiAgaWYgKGlzUm9vdCkge1xuICAgIHRoaXMucm9vdEdyb3VwID0gbm9kZTtcbiAgfVxuICByZXR1cm4gbm9kZTtcbn07XG5cblZlY3RvckNhbnZhcy5wcm90b3R5cGUuY3JlYXRlUGF0aCA9IGZ1bmN0aW9uIChjb25maWcpIHtcbiAgdmFyIG5vZGU7XG4gIGlmICh0aGlzLm1vZGUgPT09ICdzdmcnKSB7XG4gICAgbm9kZSA9IHRoaXMuY3JlYXRlU3ZnTm9kZSgncGF0aCcpO1xuICAgIG5vZGUuc2V0QXR0cmlidXRlKCdkJywgY29uZmlnLnBhdGgpO1xuXG4gICAgaWYgKHRoaXMucGFyYW1zLmJvcmRlckNvbG9yICE9PSBudWxsKSB7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZSgnc3Ryb2tlJywgdGhpcy5wYXJhbXMuYm9yZGVyQ29sb3IpO1xuICAgIH1cbiAgICBpZiAodGhpcy5wYXJhbXMuYm9yZGVyV2lkdGggPiAwKSB7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLXdpZHRoJywgdGhpcy5wYXJhbXMuYm9yZGVyV2lkdGgpO1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS1saW5lY2FwJywgJ3JvdW5kJyk7XG4gICAgICBub2RlLnNldEF0dHJpYnV0ZSgnc3Ryb2tlLWxpbmVqb2luJywgJ3JvdW5kJyk7XG4gICAgfVxuICAgIGlmICh0aGlzLnBhcmFtcy5ib3JkZXJPcGFjaXR5ID4gMCkge1xuICAgICAgbm9kZS5zZXRBdHRyaWJ1dGUoJ3N0cm9rZS1vcGFjaXR5JywgdGhpcy5wYXJhbXMuYm9yZGVyT3BhY2l0eSk7XG4gICAgfVxuXG4gICAgbm9kZS5zZXRGaWxsID0gZnVuY3Rpb24gKGNvbG9yKSB7XG4gICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnZmlsbCcsIGNvbG9yKTtcbiAgICAgIGlmICh0aGlzLmdldEF0dHJpYnV0ZSgnb3JpZ2luYWwnKSA9PT0gbnVsbCkge1xuICAgICAgICB0aGlzLnNldEF0dHJpYnV0ZSgnb3JpZ2luYWwnLCBjb2xvcik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIG5vZGUuZ2V0RmlsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnZmlsbCcpO1xuICAgIH07XG5cbiAgICBub2RlLmdldE9yaWdpbmFsRmlsbCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzLmdldEF0dHJpYnV0ZSgnb3JpZ2luYWwnKTtcbiAgICB9O1xuXG4gICAgbm9kZS5zZXRPcGFjaXR5ID0gZnVuY3Rpb24gKG9wYWNpdHkpIHtcbiAgICAgIHRoaXMuc2V0QXR0cmlidXRlKCdmaWxsLW9wYWNpdHknLCBvcGFjaXR5KTtcbiAgICB9O1xuICB9IGVsc2Uge1xuICAgIG5vZGUgPSB0aGlzLmNyZWF0ZVZtbE5vZGUoJ3NoYXBlJyk7XG4gICAgbm9kZS5jb29yZG9yaWdpbiA9ICcwIDAnO1xuICAgIG5vZGUuY29vcmRzaXplID0gdGhpcy53aWR0aCArICcgJyArIHRoaXMuaGVpZ2h0O1xuICAgIG5vZGUuc3R5bGUud2lkdGggPSB0aGlzLndpZHRoICsgJ3B4JztcbiAgICBub2RlLnN0eWxlLmhlaWdodCA9IHRoaXMuaGVpZ2h0ICsgJ3B4JztcbiAgICBub2RlLmZpbGxjb2xvciA9IEpRVk1hcC5kZWZhdWx0RmlsbENvbG9yO1xuICAgIG5vZGUuc3Ryb2tlZCA9IGZhbHNlO1xuICAgIG5vZGUucGF0aCA9IFZlY3RvckNhbnZhcy5wYXRoU3ZnVG9WbWwoY29uZmlnLnBhdGgpO1xuXG4gICAgdmFyIHNjYWxlID0gdGhpcy5jcmVhdGVWbWxOb2RlKCdza2V3Jyk7XG4gICAgc2NhbGUub24gPSB0cnVlO1xuICAgIHNjYWxlLm1hdHJpeCA9ICcwLjAxLDAsMCwwLjAxLDAsMCc7XG4gICAgc2NhbGUub2Zmc2V0ID0gJzAsMCc7XG5cbiAgICBub2RlLmFwcGVuZENoaWxkKHNjYWxlKTtcblxuICAgIHZhciBmaWxsID0gdGhpcy5jcmVhdGVWbWxOb2RlKCdmaWxsJyk7XG4gICAgbm9kZS5hcHBlbmRDaGlsZChmaWxsKTtcblxuICAgIG5vZGUuc2V0RmlsbCA9IGZ1bmN0aW9uIChjb2xvcikge1xuICAgICAgdGhpcy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZmlsbCcpWzBdLmNvbG9yID0gY29sb3I7XG4gICAgICBpZiAodGhpcy5nZXRBdHRyaWJ1dGUoJ29yaWdpbmFsJykgPT09IG51bGwpIHtcbiAgICAgICAgdGhpcy5zZXRBdHRyaWJ1dGUoJ29yaWdpbmFsJywgY29sb3IpO1xuICAgICAgfVxuICAgIH07XG5cbiAgICBub2RlLmdldEZpbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZmlsbCcpWzBdLmNvbG9yO1xuICAgIH07XG4gICAgbm9kZS5nZXRPcmlnaW5hbEZpbGwgPSBmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gdGhpcy5nZXRBdHRyaWJ1dGUoJ29yaWdpbmFsJyk7XG4gICAgfTtcbiAgICBub2RlLnNldE9wYWNpdHkgPSBmdW5jdGlvbiAob3BhY2l0eSkge1xuICAgICAgdGhpcy5nZXRFbGVtZW50c0J5VGFnTmFtZSgnZmlsbCcpWzBdLm9wYWNpdHkgPSBwYXJzZUludChvcGFjaXR5ICogMTAwLCAxMCkgKyAnJSc7XG4gICAgfTtcbiAgfVxuICByZXR1cm4gbm9kZTtcbn07XG5cblZlY3RvckNhbnZhcy5wcm90b3R5cGUucGF0aFN2Z1RvVm1sID0gZnVuY3Rpb24gKHBhdGgpIHtcbiAgdmFyIHJlc3VsdCA9ICcnO1xuICB2YXIgY3ggPSAwLCBjeSA9IDAsIGN0cmx4LCBjdHJseTtcblxuICByZXR1cm4gcGF0aC5yZXBsYWNlKC8oW01tTGxIaFZ2Q2NTc10pKCg/Oi0/KD86XFxkKyk/KD86XFwuXFxkKyk/LD9cXHM/KSspL2csIGZ1bmN0aW9uIChzZWdtZW50LCBsZXR0ZXIsIGNvb3Jkcykge1xuICAgIGNvb3JkcyA9IGNvb3Jkcy5yZXBsYWNlKC8oXFxkKS0vZywgJyQxLC0nKS5yZXBsYWNlKC9cXHMrL2csICcsJykuc3BsaXQoJywnKTtcbiAgICBpZiAoIWNvb3Jkc1swXSkge1xuICAgICAgY29vcmRzLnNoaWZ0KCk7XG4gICAgfVxuXG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBjb29yZHMubGVuZ3RoOyBpIDwgbDsgaSsrKSB7XG4gICAgICBjb29yZHNbaV0gPSBNYXRoLnJvdW5kKDEwMCAqIGNvb3Jkc1tpXSk7XG4gICAgfVxuXG4gICAgc3dpdGNoIChsZXR0ZXIpIHtcbiAgICAgIGNhc2UgJ20nOlxuICAgICAgICBjeCArPSBjb29yZHNbMF07XG4gICAgICAgIGN5ICs9IGNvb3Jkc1sxXTtcbiAgICAgICAgcmVzdWx0ID0gJ3QnICsgY29vcmRzLmpvaW4oJywnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ00nOlxuICAgICAgICBjeCA9IGNvb3Jkc1swXTtcbiAgICAgICAgY3kgPSBjb29yZHNbMV07XG4gICAgICAgIHJlc3VsdCA9ICdtJyArIGNvb3Jkcy5qb2luKCcsJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdsJzpcbiAgICAgICAgY3ggKz0gY29vcmRzWzBdO1xuICAgICAgICBjeSArPSBjb29yZHNbMV07XG4gICAgICAgIHJlc3VsdCA9ICdyJyArIGNvb3Jkcy5qb2luKCcsJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdMJzpcbiAgICAgICAgY3ggPSBjb29yZHNbMF07XG4gICAgICAgIGN5ID0gY29vcmRzWzFdO1xuICAgICAgICByZXN1bHQgPSAnbCcgKyBjb29yZHMuam9pbignLCcpO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnaCc6XG4gICAgICAgIGN4ICs9IGNvb3Jkc1swXTtcbiAgICAgICAgcmVzdWx0ID0gJ3InICsgY29vcmRzWzBdICsgJywwJztcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ0gnOlxuICAgICAgICBjeCA9IGNvb3Jkc1swXTtcbiAgICAgICAgcmVzdWx0ID0gJ2wnICsgY3ggKyAnLCcgKyBjeTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ3YnOlxuICAgICAgICBjeSArPSBjb29yZHNbMF07XG4gICAgICAgIHJlc3VsdCA9ICdyMCwnICsgY29vcmRzWzBdO1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnVic6XG4gICAgICAgIGN5ID0gY29vcmRzWzBdO1xuICAgICAgICByZXN1bHQgPSAnbCcgKyBjeCArICcsJyArIGN5O1xuICAgICAgICBicmVhaztcblxuICAgICAgY2FzZSAnYyc6XG4gICAgICAgIGN0cmx4ID0gY3ggKyBjb29yZHNbY29vcmRzLmxlbmd0aCAtIDRdO1xuICAgICAgICBjdHJseSA9IGN5ICsgY29vcmRzW2Nvb3Jkcy5sZW5ndGggLSAzXTtcbiAgICAgICAgY3ggKz0gY29vcmRzW2Nvb3Jkcy5sZW5ndGggLSAyXTtcbiAgICAgICAgY3kgKz0gY29vcmRzW2Nvb3Jkcy5sZW5ndGggLSAxXTtcbiAgICAgICAgcmVzdWx0ID0gJ3YnICsgY29vcmRzLmpvaW4oJywnKTtcbiAgICAgICAgYnJlYWs7XG5cbiAgICAgIGNhc2UgJ0MnOlxuICAgICAgICBjdHJseCA9IGNvb3Jkc1tjb29yZHMubGVuZ3RoIC0gNF07XG4gICAgICAgIGN0cmx5ID0gY29vcmRzW2Nvb3Jkcy5sZW5ndGggLSAzXTtcbiAgICAgICAgY3ggPSBjb29yZHNbY29vcmRzLmxlbmd0aCAtIDJdO1xuICAgICAgICBjeSA9IGNvb3Jkc1tjb29yZHMubGVuZ3RoIC0gMV07XG4gICAgICAgIHJlc3VsdCA9ICdjJyArIGNvb3Jkcy5qb2luKCcsJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdzJzpcbiAgICAgICAgY29vcmRzLnVuc2hpZnQoY3kgLSBjdHJseSk7XG4gICAgICAgIGNvb3Jkcy51bnNoaWZ0KGN4IC0gY3RybHgpO1xuICAgICAgICBjdHJseCA9IGN4ICsgY29vcmRzW2Nvb3Jkcy5sZW5ndGggLSA0XTtcbiAgICAgICAgY3RybHkgPSBjeSArIGNvb3Jkc1tjb29yZHMubGVuZ3RoIC0gM107XG4gICAgICAgIGN4ICs9IGNvb3Jkc1tjb29yZHMubGVuZ3RoIC0gMl07XG4gICAgICAgIGN5ICs9IGNvb3Jkc1tjb29yZHMubGVuZ3RoIC0gMV07XG4gICAgICAgIHJlc3VsdCA9ICd2JyArIGNvb3Jkcy5qb2luKCcsJyk7XG4gICAgICAgIGJyZWFrO1xuXG4gICAgICBjYXNlICdTJzpcbiAgICAgICAgY29vcmRzLnVuc2hpZnQoY3kgKyBjeSAtIGN0cmx5KTtcbiAgICAgICAgY29vcmRzLnVuc2hpZnQoY3ggKyBjeCAtIGN0cmx4KTtcbiAgICAgICAgY3RybHggPSBjb29yZHNbY29vcmRzLmxlbmd0aCAtIDRdO1xuICAgICAgICBjdHJseSA9IGNvb3Jkc1tjb29yZHMubGVuZ3RoIC0gM107XG4gICAgICAgIGN4ID0gY29vcmRzW2Nvb3Jkcy5sZW5ndGggLSAyXTtcbiAgICAgICAgY3kgPSBjb29yZHNbY29vcmRzLmxlbmd0aCAtIDFdO1xuICAgICAgICByZXN1bHQgPSAnYycgKyBjb29yZHMuam9pbignLCcpO1xuICAgICAgICBicmVhaztcblxuICAgICAgZGVmYXVsdDpcbiAgICAgICAgYnJlYWs7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcblxuICB9KS5yZXBsYWNlKC96L2csICcnKTtcbn07XG5cblZlY3RvckNhbnZhcy5wcm90b3R5cGUuc2V0U2l6ZSA9IGZ1bmN0aW9uICh3aWR0aCwgaGVpZ2h0KSB7XG4gIGlmICh0aGlzLm1vZGUgPT09ICdzdmcnKSB7XG4gICAgdGhpcy5jYW52YXMuc2V0QXR0cmlidXRlKCd3aWR0aCcsIHdpZHRoKTtcbiAgICB0aGlzLmNhbnZhcy5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsIGhlaWdodCk7XG4gIH0gZWxzZSB7XG4gICAgdGhpcy5jYW52YXMuc3R5bGUud2lkdGggPSB3aWR0aCArICdweCc7XG4gICAgdGhpcy5jYW52YXMuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4JztcbiAgICB0aGlzLmNhbnZhcy5jb29yZHNpemUgPSB3aWR0aCArICcgJyArIGhlaWdodDtcbiAgICB0aGlzLmNhbnZhcy5jb29yZG9yaWdpbiA9ICcwIDAnO1xuICAgIGlmICh0aGlzLnJvb3RHcm91cCkge1xuICAgICAgdmFyIHBhdGhzID0gdGhpcy5yb290R3JvdXAuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NoYXBlJyk7XG4gICAgICBmb3IgKHZhciBpID0gMCwgbCA9IHBhdGhzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgICAgICBwYXRoc1tpXS5jb29yZHNpemUgPSB3aWR0aCArICcgJyArIGhlaWdodDtcbiAgICAgICAgcGF0aHNbaV0uc3R5bGUud2lkdGggPSB3aWR0aCArICdweCc7XG4gICAgICAgIHBhdGhzW2ldLnN0eWxlLmhlaWdodCA9IGhlaWdodCArICdweCc7XG4gICAgICB9XG4gICAgICB0aGlzLnJvb3RHcm91cC5jb29yZHNpemUgPSB3aWR0aCArICcgJyArIGhlaWdodDtcbiAgICAgIHRoaXMucm9vdEdyb3VwLnN0eWxlLndpZHRoID0gd2lkdGggKyAncHgnO1xuICAgICAgdGhpcy5yb290R3JvdXAuc3R5bGUuaGVpZ2h0ID0gaGVpZ2h0ICsgJ3B4JztcbiAgICB9XG4gIH1cbiAgdGhpcy53aWR0aCA9IHdpZHRoO1xuICB0aGlzLmhlaWdodCA9IGhlaWdodDtcbn07XG4iXX0="}